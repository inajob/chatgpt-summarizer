{"pubDate": "2024-09-25T08:00:00", "original_title": "Learn GPU Programming With Simple Puzzles", "link": "https://hackaday.com/2024/09/25/learn-gpu-programming-with-simple-puzzles/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/09/Screenshot-2024-09-24-133519-featured.png", "original_content": "Have you wanted to get into GPU programming with CUDA but found the usual textbooks and guides a bit too intense? Well, help is at hand in the form of a series of increasingly difficult programming puzzles created by [Sasha Rush]. The first part of the simplification is to utilise the excellent NUMBA python JIT compiler to allow easy-to-understand code to be deployed as GPU machine code. Working on these puzzles is even easier if you use this linked Google Colab as your programming environment, launching you straight into a Jupyter notebook with the puzzles laid out. You can use your own GPU if you have one, but thats not detailed.\nThe puzzles start, assuming you know nothing at all about GPU programming, which is totally the case for some of us! Whats really nice is the way the result of the program operation is displayed, showing graphically how data are read and written to the input and output arrays youre working with. Each essential concept for CUDA programming is identified one at a time with a real programming example, making it a breeze to follow along. Just make sure you dont watch the video below all the way through the first time, as in it [Sasha] explains all the solutions!\nConfused about why youd want to do this? Then perhaps check out our guide to CUDA first. We know what youre thinking: how do we use non-nVIDIA hardware? Well, theres SCALE for that! Finally, once you understand CUDA, why not have a play with WebGPU?\n\n"}