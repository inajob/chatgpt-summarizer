{"pubDate": "2023-08-12T11:00:08", "original_title": "Arbitrary Waveforms on the Cheap", "link": "https://hackaday.com/2023/08/12/arbitrary-waveforms-on-the-cheap/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/08/picogen.png", "original_content": "A signal generator that can produce the usual sine, square, and triangle waves is handy and has been a staple of electronic benches for decades. Being able to craft custom signals opens up new horizons, but historically, these instruments were expensive. The price has come down, though, and [Rishin Goswami] made a 5 MHz 8-bit signal generator with 131K data points of arbitrary waveform for a low price: about $20. If you want to spend a bit more, you can improve the output DAC and op amps, but even that should cost well under $100, all in.\nThis is one of those projects that seems easy until you start digging into it. For example, storing some points and generating signals using any microcontroller isnt a big deal. But minimizing jitter and maximizing speed with a conventional processor is difficult. Thats why [Rishin] uses a Raspberry Pi Pico. The programmable I/O units are perfect for generating waveform data fast and reliably. You can see the project go through its paces in the video below.\nThe Pi streams data to an 8-bit DAC. However, it would be easy to improve resolution with a different converter. The DAC0808 also limits the instruments sample rate. The processor could likely go much faster if it had a DAC accommodating higher speeds.\nThis is just a proof-of-concept, so dont expect fancy GUIs or the ability to import spreadsheets. You control the device from a command-line-like interface. Still, a good example of how to take advantage of the Pis hardware. We took a shot at a similar device nearly a decade ago.Those programmable I/O blocks are finding uses in some surprising applications.\n\n", "title": "$20\u3067\u624b\u306b\u5165\u308b\u4f4e\u4fa1\u683c\u306a5 MHz 8\u30d3\u30c3\u30c8\u4fe1\u53f7\u767a\u751f\u5668\u306e\u4f5c\u6210\u65b9\u6cd5", "body": "$20\u30675 MHz 8-bit\u306e\u4fe1\u53f7\u767a\u751f\u5668\u3092\u4f5c\u6210\u3002Raspberry Pi Pico\u3092\u4f7f\u7528\u3057\u3001\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u5236\u5fa1\u3002\u8a2d\u5099\u3092\u6539\u826f\u3059\u308c\u3070\u9ad8\u901f\u6ce2\u5f62\u751f\u6210\u3082\u53ef\u80fd\u3002", "titles": ["$20\u3067\u624b\u306b\u5165\u308b\u4f4e\u4fa1\u683c\u306a5 MHz 8\u30d3\u30c3\u30c8\u4fe1\u53f7\u767a\u751f\u5668\u306e\u4f5c\u6210\u65b9\u6cd5", "Raspberry Pi Pico\u3092\u4f7f\u7528\u3057\u305f\u9ad8\u901f\u30fb\u4fe1\u983c\u6027\u306e\u3042\u308b\u4efb\u610f\u6ce2\u5f62\u4fe1\u53f7\u767a\u751f\u5668\u306e\u4f5c\u6210", "\u30ab\u30b9\u30bf\u30e0\u4fe1\u53f7\u751f\u6210\u304c\u53ef\u80fd\u306a\u4f4e\u4fa1\u683c\u4fe1\u53f7\u767a\u751f\u5668\u306e\u88fd\u4f5c\u65b9\u6cd5", "\u30d7\u30ed\u30b0\u30e9\u30de\u30d6\u30ebI/O\u30e6\u30cb\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u305f\u624b\u4f5c\u308a\u4fe1\u53f7\u767a\u751f\u5668\u306e\u4f5c\u6210", "\u9ad8\u901fDAC\u306b\u3088\u308b\u89e3\u50cf\u5ea6\u5411\u4e0a\u304c\u53ef\u80fd\u306a\u4fe1\u53f7\u767a\u751f\u5668\u306e\u69cb\u7bc9"]}