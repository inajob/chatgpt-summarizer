{"pubDate": "2023-09-19T11:00:28", "original_title": "Normal Users Don\u2019t Code On Their Mac, But Apple Keeps Trying", "link": "https://hackaday.com/2023/09/19/normal-users-dont-code-on-their-mac-but-apple-keeps-trying/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/09/apple-coding-featured.jpg", "original_content": "Most people use their computer to run pre-packaged programs: usually a web browser, games, or office applications. Whether the machine is a PC or a Mac, they dont generally write their own software. For them, the computer is an appliance, and they do what their computer allows them to do.\nIt shouldnt have to be that way, if only programming were easier. The Eclectic Light Company has a fascinating article looking at the various attempts that Apple has made to lure their users into creative programming.\nProbably the most familiar of them all is AppleScript, with its origins in late 1993. Or maybe youre thinking of Hypertalk, the scripting component of 1987s Hypercard. That would go on to be a mainstay of mid-1990s multimedia software, but while its fallen by the wayside its AppleScript which still has support in the latest MacOS.\nThe biggest surprise for us lies in the forgotten products. 1989s Prograph graphical language looks amazing. Was it simply before its time? In the modern era, Apple describes the reach of Shortcuts diplomatically: its impact has so far been limited.\nMaybe the most forward-thinking line on programming from Apple came in 2007, even if it wasnt recognized as such. The original iPhone didnt have any third-party apps, and instead developers were supposed to write web apps to take advantage of the always-connected device. Would that be such a bad piece of advice to give a non-developer writing software for their Mac today?"}