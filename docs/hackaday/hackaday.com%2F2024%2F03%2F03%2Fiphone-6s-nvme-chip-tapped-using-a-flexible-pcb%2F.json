{"pubDate": "2024-03-04T03:00:13", "original_title": "iPhone 6S NVMe chip Tapped Using a Flexible PCB", "link": "https://hackaday.com/2024/03/03/iphone-6s-nvme-chip-tapped-using-a-flexible-pcb/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/02/hadimg_iphone_nvmetap_feat.jpg", "original_content": "Psst! Hey kid! Want to reverse-engineer some iPhones? Well, did you know that modern iPhones use PCIe, and specifically, NVMe for their storage chips? And if so, have you ever wondered about sniffing those communications? Wonder no more, as this research team shows us how they tapped them with a flexible printed circuit (FPC) BGA interposer on an iPhone 6S, the first iPhone to use NVMe-based storage.\nThe research was done by [Mohamed Amine Khelif], [Jordane Lorandel], and [Olivier Romain], and it shows us all the nitty-gritty of getting at the NVMe chip  provided youre comfortable with BGA soldering and perhaps got an X-ray machine handy to check for mistakes. As research progressed, theyve successfully removed the memory chip dealing with underfill and BGA soldering nuances, and added an 1:1 interposer FR4 board for the first test, that proved to be successful. Then, they made an FPC interposer that also taps into the signal and data pins, soldered the flash chip on top of it, successfully booted the iPhone 6S, and scoped the data lines for us to see.\nThis is looking like the beginnings of a fun platform for iOS or iPhone hardware reverse-engineering, and were waiting for further results with bated breath! This team of researchers in particular is prolific, having already been poking at things like MITM attacks on I2C and PCIe, as well as IoT device and smartphone security research. We havent seen any Eagle CAD files for the interposers published, but thankfully, most of the know-how is about the soldering technique, and the paper describes plenty. Want to learn more about these chips? Weve covered a different hacker taking a stab at reusing them before. Or perhaps, would you like to know NVMe in more depth? If so, weve got just the article for you.\nWe thank [FedX] for sharing this with us on the Hackaday Discord server!"}