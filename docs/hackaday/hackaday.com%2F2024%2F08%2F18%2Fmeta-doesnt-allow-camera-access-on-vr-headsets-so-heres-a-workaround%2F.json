{"pubDate": "2024-08-18T14:00:30", "original_title": "Meta Doesn\u2019t Allow Camera Access on VR Headsets, So Here\u2019s a Workaround", "link": "https://hackaday.com/2024/08/18/meta-doesnt-allow-camera-access-on-vr-headsets-so-heres-a-workaround/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/08/Quest3-object-detection-glass-wide.png.png", "original_content": "The cameras at the front of Metas Quest VR headsets are off-limits to developers, but developer [Michael Gschwandtner] created a workaround (Linkedin post) and shared implementation details with a VR news site.\nThe view isnt a pure camera feed (it includes virtual and UI elements) but its a clever workaround.\nThe demo shows object detection via MobileNet V2, which weve seen used for machine vision on embedded systems like the Raspberry Pi. In this case it is running locally on the VR headset, automatically identifying objects even though the app cannot directly access the front-facing cameras to see whats in front of it.\nThe workaround is conceptually simple, and leverages the headsets ability to cast its video feed over Wi-Fi to other devices. This feature is normally used for people to share and spectate VR gameplay.\nFirst, [Gschwandtner]s app sets up passthrough video, which means that the camera feed from the front of the headset is used as background in VR, creating a mixed-reality environment. Then the app essentially spawns itself a Chromium browser, and casts its video feed to itself. It is this video that is used to  in a roundabout way  access what the cameras see.\nThe resulting view isnt really direct from the cameras, its akin to snapshotting a through-the-headset view which means it contains virtual elements like the UI. Still, with passthrough turned on it is a pretty clever workaround that is contained entirely on-device.\nMeta is hesitant to give developers direct access to camera views on their VR headset, and while John Carmack (former Meta consulting CTO) thinks its worth opening up and can be done safely, its not there yet.", "title": "\u958b\u767a\u8005\u304c\u7528\u610f\u3057\u305fVR\u30d8\u30c3\u30c9\u30bb\u30c3\u30c8\u306e\u30ab\u30e1\u30e9\u3092\u5229\u7528\u3057\u305f\u8fc2\u56de\u7b56", "body": "Metas Quest VR\u30d8\u30c3\u30c9\u30bb\u30c3\u30c8\u306e\u30d5\u30ed\u30f3\u30c8\u306e\u30ab\u30e1\u30e9\u306f\u958b\u767a\u8005\u306b\u306f\u5236\u9650\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001[Michael Gschwandtner]\u3055\u3093\u304c\u56de\u907f\u7b56\u3092\u4f5c\u6210\u3057\u3001VR\u30cb\u30e5\u30fc\u30b9\u30b5\u30a4\u30c8\u3067\u5b9f\u88c5\u306e\u8a73\u7d30\u3092\u5171\u6709\u3057\u307e\u3057\u305f\u3002\u30ab\u30e1\u30e9\u306e\u6620\u50cf\u3092\u5229\u7528\u3057\u3066\u7269\u4f53\u691c\u51fa\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u3002", "titles": ["\u958b\u767a\u8005\u304c\u7528\u610f\u3057\u305fVR\u30d8\u30c3\u30c9\u30bb\u30c3\u30c8\u306e\u30ab\u30e1\u30e9\u3092\u5229\u7528\u3057\u305f\u8fc2\u56de\u7b56", "Metas Quest VR\u30d8\u30c3\u30c9\u30bb\u30c3\u30c8\u306e\u30ab\u30e1\u30e9\u3092\u4f7f\u3063\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u691c\u51fa", "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u5236\u7d04\u3092\u4e57\u308a\u8d8a\u3048\u305fVR\u30d8\u30c3\u30c9\u30bb\u30c3\u30c8\u306e\u6280\u5de7\u306a\u89e3\u6c7a\u7b56", "Metas Quest VR\u30d8\u30c3\u30c9\u30bb\u30c3\u30c8\u306e\u30ab\u30e1\u30e9\u30d3\u30e5\u30fc\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5", "VR\u30d8\u30c3\u30c9\u30bb\u30c3\u30c8\u3067\u306e\u30ab\u30e1\u30e9\u30d3\u30e5\u30fc\u306b\u5236\u9650\u3092\u56de\u907f\u3057\u305f\u5de5\u592b"]}