{"pubDate": "2023-05-09T14:00:15", "original_title": "Share Your Projects: Making Helpful PCBs", "link": "https://hackaday.com/2023/05/09/share-your-projects-making-helpful-pcbs/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/09/resistor.jpg", "original_content": "When it comes to things that hackers build, PCBs are a sizeable portion of our creative output. Its no wonder  PCB design is a powerful way to participate in the hardware world, making your ideas all that more tangible with help of a friendly PCB fab. Its often even more lovely when the PCB has been designed for you, and all you have to do is press send  bonus points if you can make a few changes for your own liking!\nA lot of the time, our projects are untrodden ground, however, and a new design needs to be born. We pick out connectors, work through mechanical dimensions, figure out a schematic and check it with others, get the layout done, and look at it a few more times before sending it out for production. For a basic PCB, that is enough  but of course, its no fun to stop at basic, when theres so many things you can do at hardly any cost.\nLets step back a bit  youve just designed a board, and its great! It has all the chips and the connectors you could need, and theoretically, its even supposed to work first try. Now, lets be fair, theres an undeniable tendency  the more PCBs you design, the better each next one turns out, and you learn to spend less time on each board too. As someone with over two hundred PCBs under her belt, Id like to show you a bunch of shortcuts that make your PCB more helpful, to yourself and others.\nTheres a few ways that you can share your PCB projects in a more powerful way  Id like to point out a few low-hanging fruits, whether README.md files or markings on the PCB itself. Ive been experimenting quite a bit with external and embedded documentation of PCBs, as well as PCB sharing methods, got some fun results, and Id like to share my toolkit through a few punchy examples and simple tricks. Id also like to hear about yours  lets chat!\nFurnish It\nMost of us start with a PCB covered with reference designators, and thats fine  its the default for many PCB tools, after all. Make sure youre not forgetting a few important things, though! After all, blank PCBs are indeed mysterious, but its a bit of an artform to pull off a blank PCB and not have it be a pain afterwards.\nFor a start, theres a lot of place on your PCB, for things you might not have thought of. You will forget some things, you will mix some things up, and any other person who you give it to, will know even less  if you use silkscreen in certain ways, you can make your PCB not just connect things together electrically, but also keep you informed about its purpose, capabilities and limitations.\nIs there a warning that users of your PCB should keep in mind, even if the only user would be you, but in the future? Put it on the silkscreen! For instance, input voltages and polarity for power connectors  if its not using some standard connector, be it USB or PS/2, at least putting small + and - on the PCB is wonderful, and doubly so if you have a battery holder! Even if your input is USB-A or MicroUSB, which is a great proxy for 5V input, it might be worthwhile to mark your amperage if your board would use more than 500mA-1A  since, often, USB ports can only provide that much.\nPinouts are useful to have as a reference, but theyre a kind of warning, too  an extra check before you plug something in. They also save a ton of time when youre wiring things up  having to distract yourself and check a datasheet, a PCB image or even a KiCad window while soldering can sure slow you down.\nAs a guideline, every connector deserves its pinout marked on the silkscreen, on all sides it could be approached from. Lets be fair, if desktop motherboards would put pinouts for the front panel headers on the silkscreen instead of burying them in the manual, wed all be just a tiny bit happier. In those moments when you have the PCB on your hands and youre eager to put it to use, its a bit frustrating to have to refer to the user manual for pinouts  and so often, theres a way to fit them on the silkscreen, putting in a bit of care for the future you, or anyone else youve entrusted with a PCB of yours.\nHaving silkscreen markings on motherboards wasnt always the norm\nOf course, you might not always have space. That said, you can still do abbreviations  the QWIIC-like GND VCC SDA SCL can be shortened to G V D C if you must. You can also do things like changing pad shapes to delineate different power pin types  for instance, always use the square pad for GND. Oh, and the silkscreen isnt the exclusive place for your text  you can put on text on the soldermask layer for either silver (HASL) or golden (ENIG) lettering, or perhaps, do higher-resolution text on the copper layer if you have enough PCB space. You can even put markings on the copper inside your pads, remember?\nDo you need to add all of these? No! Do you want to add at least some of these? Absolutely! Pick the things you feel like are easy for you, make them into habits, and youll quickly gain skills in making your boards speak for themselves.\nDereference It\nHere, Id like to argue against putting reference designators on your PCB silkscreen- you know, things like R3 or C149. Unless you have heaps of space on a board, consider this  theres lots of other things that take priority, and the more packed your board is, the smaller is the amount of place you have for these things.\nReference designators contain a ton of information, theyre visual clutter, arranging them takes a good chunk of time, and theyre exceptionally situational. From my experience, pinouts, instructions, warnings and descriptions are worth their weight in gold, and reference designators just, arent. Sure, the user might be interested in knowing that the barrel jack is marked J1 on the schematic, but do they know what voltage range is it intended for? Which one would you like them to keep in mind? Which one of these would you want to quickly check as you experiment?\nErasing all reference designators is super straightforward. Afterwards, youre left with a ton of extra space  somewhere you can put your pinouts, instructions, diagrams, or even hopes and dreams. I personally dont put reference designators on boards, and if you havent yet considered removing them, I recommend that you do.\nYou might argue there are good reasons for reference designators sometimes, and to that, I agree  its just that theyre situational. Your board house shouldnt need designators  a large amount of PCBs are nowadays released without them, anyway, and you can always provide them with a PCB picture that has the F.Fab and B.Fab layers exported instead. Thinking about releasing rework instructions for your userbase? You should provide pictures either way.\nI usually leave reference designators for things like jumpers, crucial parts like user-adjustable current setting resistors, and connectors  beyond that, it makes little to no sense to have references taking up space on the silkscreen.\nDescribe It\nNow, theres something thats often missing from published PCBs  and that is a README file. Its a bit painful to open a Github link and see nothing but a codekicad_pcb/code and codekicad_sch/code file  these are sufficient, but Id like to know more about what your board does, beyond the filename. and its not hard to add either!\nHere, reference designators wouldnt even fit in the first place\nLets say youve just designed a PCB. Youve just put a metaphorical point in your project, and you have the entire context in your mind still, and its a satisfying point to be at  aint that wonderful! While you have ever aspect of the board available on a moments notice, open a README file in your text editor and spend a minute-two dumping your brains contents into a text file. What does your PCB help with? Which chips or parts are crucial for its purpose? Isnt it wonderful that the PCB is done, and dont you want the world to know about all the cool features you added?\nSo, write it all out, as much as you feel like it, but write something. You only really need a sentence or two for a sufficient README, and if youre not too tired, you might find yourself writing a few more. However many sentences you write, it matters that a README is there. I personally start with a template that lists a few commonplace board things and pre-filled metadata fields, and also has things like disclaimers about the design being untested or unfinished  quite worthwhile to have!\nTheres more uses for a README  for instance, whenever youre releasing a new version, you can add a section describing what changed, what got fixed, what got added or removed  just put them as bullet points in the same README. This helps in debugging, and also informs the user that theres more than one version of this board in existence.\nName It\nSome of my personal projects are on their fifth revision, with the PCBs looks having long stabilized. Having the version number on a visible spot has been a lifesaver of a practice  especially when Im dealing with a PCB where v2 just works, but v1 requires an intense magnet wire fix. Unlike with software, the PCB version can be a single number  the PCB release cycle is way slower than software, so things like semver would just be wasted PCB space.\nWith my PCBs used by me a lot, and sometimes even used by other people, Ive come to a short naming formula that works well. On the silkscreen, I put BOARDNAME by AUTHOR, vVERSION  for instance, PS/2 to USB adapter by Arya, v1. Its short and sweet, and even if you dont have any energy to work on the boards silkscreen, perhaps this is the thing that can stay.\nWith PCBs, sometimes you want to share them with everyone else, but even if you dont intend to, you still have to share them with you from the future. These few aspects matter, and as you learn to prepare , youll find that your work is more useful to others than ever.", "title": "PCB\u30c7\u30b6\u30a4\u30f3\u306b\u5f79\u7acb\u3064\u30c7\u30b6\u30a4\u30f3\u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u96c6 ", "body": "\u30cf\u30c3\u30ab\u30fc\u304c\u4f5c\u308b\u3082\u306e\u306e\u4e2d\u3067\u3001PCB\u306f\u5927\u304d\u306a\u5272\u5408\u3092\u5360\u3081\u3066\u3044\u307e\u3059\u3002PCB\u30c7\u30b6\u30a4\u30f3\u306f\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u4e16\u754c\u3067\u53c2\u52a0\u3059\u308b\u5f37\u529b\u306a\u65b9\u6cd5\u3067\u3042\u308a\u3001\u53cb\u597d\u7684\u306aPCB\u88fd\u9020\u696d\u8005\u306e\u652f\u63f4\u3092\u5f97\u3066\u3001\u30a2\u30a4\u30c7\u30a2\u3092\u3088\u308a\u5177\u4f53\u7684\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002PCB\u306e\u8a2d\u8a08\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3044\u304f\u3064\u304b\u306e\u30d2\u30f3\u30c8\u304c\u3042\u308a\u3001README.md\u30d5\u30a1\u30a4\u30eb\u3084PCB\u81ea\u4f53\u3078\u306e\u6ce8\u610f\u66f8\u304d\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002RB\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u3001\u81ea\u5206\u81ea\u8eab\u3084\u4ed6\u306e\u4eba\u304c\u5c06\u6765 PCB \u3092\u8abf\u3079\u308b\u306e\u306b\u975e\u5e38\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002", "titles": ["PCB\u30c7\u30b6\u30a4\u30f3\u306b\u5f79\u7acb\u3064\u30c7\u30b6\u30a4\u30f3\u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u96c6 ", "\u81ea\u5206\u7528\u306ePCB\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u30b7\u30eb\u30af\u30b9\u30af\u30ea\u30fc\u30f3\u306b\u8a18\u8f09\u3059\u308b\u65b9\u6cd5 ", "PCB\u306e\u8a2d\u8a08\u306b\u4f7f\u7528\u3055\u308c\u308b\u53c2\u7167\u30c7\u30b6\u30a4\u30f3\u306e\u53d6\u308a\u6271\u3044\u65b9 ", "README\u30d5\u30a1\u30a4\u30eb\u3092\u6d3b\u7528\u3057\u3001PCB\u306e\u76ee\u7684\u3084\u7279\u5fb4\u3092\u8a18\u8ff0\u3059\u308b ", "PCB\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u547d\u540d\u3059\u308b\u65b9\u6cd5"]}