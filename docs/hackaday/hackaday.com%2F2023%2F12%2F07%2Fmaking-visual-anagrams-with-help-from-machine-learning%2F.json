{"pubDate": "2023-12-07T16:30:10", "original_title": "Making Visual Anagrams, With Help From Machine Learning", "link": "https://hackaday.com/2023/12/07/making-visual-anagrams-with-help-from-machine-learning/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/12/Visual-anagrams.png", "original_content": "[Daniel Geng] and others have an interesting system of generating multi-view optical illusions, or visual anagrams. Such images have more than one correct view and visual interpretation.\nWhats more, there are quite a few different methods on display: 90 degree flips and other (orthogonal) image rotations, color inversions, jigsaw permutations, and more. The project page has a generous number of examples, so go check them out!\nThe teams method uses pre-trained diffusion models \u00a0more commonly known as the secret sauce inside image-generating AIs  to evaluate and work to combine the differences between different images, and try to combine and apply it in a way that results in the model generating a good visual result. While conceptually straightforward, this process wasnt really something that could work without diffusion models driven by modern machine learning techniques.\nThe visual_anagrams GitHub repository has code\u00a0and the research paper goes into details on implementation, limitations, and gives guidance on obtaining good results. Image generation is just one of the rapidly-evolving aspects of recent innovations, and its always interesting to see unusual applications like this one.", "title": "\u30de\u30eb\u30c1\u30d3\u30e5\u30fc\u5149\u5b66\u30a4\u30ea\u30e5\u30fc\u30b8\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5", "body": "\u8907\u6570\u306e\u8996\u70b9\u3084\u89e3\u91c8\u304c\u3042\u308b\u30de\u30eb\u30c1\u30d3\u30e5\u30fc\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30a4\u30ea\u30e5\u30fc\u30b8\u30e7\u30f3\u306e\u751f\u6210\u30b7\u30b9\u30c6\u30e0\u304c\u3001\u30c7\u30a3\u30d5\u30e5\u30fc\u30b8\u30e7\u30f3\u30e2\u30c7\u30eb\u3092\u4f7f\u7528\u3057\u3066\u30d3\u30b8\u30e5\u30a2\u30eb\u30a2\u30ca\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3002\u3055\u307e\u3056\u307e\u306a\u624b\u6cd5\u304c\u3042\u308a\u3001GitHub\u306b\u30b3\u30fc\u30c9\u3068\u7814\u7a76\u8ad6\u6587\u3082\u3042\u308a\u307e\u3059\u3002", "titles": ["\u30de\u30eb\u30c1\u30d3\u30e5\u30fc\u5149\u5b66\u30a4\u30ea\u30e5\u30fc\u30b8\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5", "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3068\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u4f7f\u3063\u305f\u5149\u5b66\u30a2\u30ca\u30b0\u30e9\u30e0\u751f\u6210\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "\u69d8\u3005\u306a\u624b\u6cd5\u3092\u4f7f\u3063\u305f\u30e6\u30cb\u30fc\u30af\u306a\u753b\u50cf\u751f\u6210", "\u62e1\u6563\u30e2\u30c7\u30eb\u3092\u4f7f\u7528\u3057\u305f\u753b\u50cf\u751f\u6210AI\u306e\u6700\u65b0\u6280\u8853", "\u73cd\u3057\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u6301\u3064\u753b\u50cf\u751f\u6210\u306e\u9769\u65b0\u7684\u306a\u7814\u7a76"]}