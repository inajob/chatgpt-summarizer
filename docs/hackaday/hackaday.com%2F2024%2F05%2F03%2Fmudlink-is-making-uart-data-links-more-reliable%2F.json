{"pubDate": "2024-05-03T08:00:53", "original_title": "MUDLink Is Making UART Data Links More Reliable", "link": "https://hackaday.com/2024/05/03/mudlink-is-making-uart-data-links-more-reliable/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/04/2024-03-09_loss-labels-e1714391422183.jpg", "original_content": "Many of us have used UARTs to spit data from one system or chip to another. Normally, for quick and dirty maker projects, this is good enough. However, youll always get the odd dropped transmission or glitch that can throw a spanner in the works if youre not careful. [Jake Read] decided to work on a system that could use UARTs while being far more reliable. Enter MUDLink.\nMUDLink is a library that works with an Arduinos UART port and stacks on a bit of protocol to clean things up. It uses a packetized method of sending data to ensure that transmissions are received reliably as intended by the sender. Packets are framed using a method called Consistent Overhead Byte Stuffing, which is a nice lightweight way of doing so. The system also uses CRC16-CCITT as an error checking mechanism. Theres also an ack-and-retransmit system for ensuring any dropped transmissions are repeated and received successfully.\nIf you need reliable UART transmissions without too much overhead, you might want to look at what Jake is doing. Its a topic weve looked at before, too. Video after the break.", "title": "MUDLink: Arduinos\u306eUART\u30dd\u30fc\u30c8\u3092\u4fe1\u983c\u6027\u306e\u9ad8\u3044\u901a\u4fe1\u306b\u4fbf\u5229\u306b\u3059\u308b", "body": "UART\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u3092\u9001\u53d7\u4fe1\u3059\u308b\u969b\u3001\u30af\u30e9\u30c3\u30b7\u30e5\u3084\u30c7\u30fc\u30bf\u306e\u6b20\u843d\u306a\u3069\u306e\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u3002Jake Read\u6c0f\u306f\u3001\u300cMUDLink\u300d\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u958b\u767a\u3057\u3001\u5b89\u5b9a\u3057\u305fUART\u901a\u4fe1\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u3002CRC16-CCITT\u3092\u4f7f\u7528\u3057\u305f\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u3084\u518d\u9001\u4fe1\u6a5f\u80fd\u304c\u7279\u5fb4\u3002", "titles": ["MUDLink: Arduinos\u306eUART\u30dd\u30fc\u30c8\u3092\u4fe1\u983c\u6027\u306e\u9ad8\u3044\u901a\u4fe1\u306b\u4fbf\u5229\u306b\u3059\u308b", "Jake Read: UART\u901a\u4fe1\u306e\u4fe1\u983c\u6027\u5411\u4e0a\u306b\u53d6\u308a\u7d44\u3080", "Consistent Overhead Byte Stuffing: \u8efd\u91cf\u304b\u3064\u52b9\u679c\u7684\u306a\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30df\u30f3\u30b0\u624b\u6cd5", "CRC16-CCITT: \u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u6a5f\u69cb\u306e\u52b9\u679c\u7684\u306a\u5229\u7528", "Ack-and-Retransmit\u30b7\u30b9\u30c6\u30e0: \u4fe1\u983c\u6027\u306e\u9ad8\u3044\u30c7\u30fc\u30bf\u4f1d\u9001\u3092\u5b9f\u73fe"]}