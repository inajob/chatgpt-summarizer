{"pubDate": "2025-03-18T15:30:26", "original_title": "Simulating Embedded Development To Reduce Iteration Time", "link": "https://hackaday.com/2025/03/18/simulating-embedded-development-to-reduce-iteration-time/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/03/Arduino-GIF-example-in-my-CYD-simulator-0-1-screenshot.png", "original_content": "Theres something that kills coding speed\u2014iteration time. If you can smash a function key and run your code, then watch it break, tweak, and smash it again\u2014youre working fast. But if you have to first compile your code, then plug your hardware in, burn it to the board, and so on youre wasting a lot of time. Its that problem that inspired [Larry] to create an embedded system simulator to speed development time for simple projects.\nThe simulator is intended for emulating Arduino builds on iPhone and Mac hardware. For example, [Larry] shows off a demo on an old iPhone, which is simulating an ESP32 playing a GIF on a small LCD display. The build isnt intended for timing-delicate stuff, nor anything involving advanced low-level peripherals or sleep routines and the like. For that, youre better off with real hardware. But if youre working on something like a user interface for a small embedded display, or just making minor tweaks to some code you can understand why the the simulator might be a much faster way to work.\nFor now, [Larry] has kept the project closed source, as hes found that it wouldnt reasonably be possible for him to customize it for everyones unique hardware and use cases. Still, its a great example of how creating your own tools can ease your life as a developer. Weve seen [Larry]s great work around here before, like this speedy JPEG decoder library.\n\n"}