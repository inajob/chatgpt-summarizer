{"pubDate": "2023-09-30T20:00:12", "original_title": "A 1970s Mask ROM MCU Spills Its Secrets", "link": "https://hackaday.com/2023/09/30/a-1970s-mask-rom-mcu-spills-its-secrets/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/09/MK3870-ROM-Dumper.jpg", "youtube": "https://www.youtube.com/watch?v=cLVAnvutmH4", "original_content": "If you buy any kind of electronic gadget today, chances are its powered by a microcontroller with a program stored in its internal flash ROM. That programs code is often jealously guarded by the manufacturer, who will try their best to make sure you cant just read back the chips contents by using lock bits or some sort of encryption. Things were more laid back in the 1970s and 80s, when code was stored unencrypted in standard EPROM chips, or, for high-volume applications, in mask ROMs integrated in microcontrollers. Reading back the code of such micros was still very difficult because chips simply didnt have a way of dumping their contents. [Andrew Menadue] ran into this issue when trying to repair an old HP calculator printer, and had to apply a clever hack to dump the contents of its Mostek MK3870 chip.\nThe main trick [Andrew] used was one discovered by [Sean Riddle] and explained on his website. It makes use of the fact that the MK3870 has a TEST pin that can be used to disable the mask ROM and load alternative program code directly into the micros processing core. By setting up a LOAD instruction pointing at a ROM location and briefly disabling test mode while that instruction is executed, the ROMs contents can be read out by the externally loaded program.\nSimple as this hack may seem, actually implementing it was tricky enough because of the strict timing requirements between signals on the clock pins, the data bus, and the TEST pin. [Andrew] got it to work on his Raspberry Pi Pico setup most of the time, but somehow the micro still returned a plainly wrong value every few hundred bytes. Not willing to spend too much time debugging this issue, [Andrew] applied a rather crude hack to his code: instead of reading each byte once, it runs the read cycle 200 times, and only returns a result when all 200 runs return the same value. Dumping the entire 4 kB of ROM now takes several minutes, but this isnt much of an issue since [Andrew] only has one chip to read out.\nIf you do have a bucketload of MK3870 chips that you need to dump, you might want to try and optimize the code on [Andrew]s GitHub page. Its a lucky coincidence that the 3870 has the exploitable TEST feature; often, the only way to get inside mask ROM code is by decapping the chip and optically reading the bits one by one. Mask ROMs are great for very long term\u00a0data storage, however.\n\n", "title": "\u30de\u30b9\u30afROM\u3092\u4f7f\u7528\u3057\u305f\u30cf\u30c3\u30ad\u30f3\u30b0\u624b\u6cd5\uff1aMostek MK3870\u30c1\u30c3\u30d7\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u51fa\u3059", "body": "70\u5e74\u4ee3\u306880\u5e74\u4ee3\u306f\u30b3\u30fc\u30c9\u306e\u8aad\u307f\u53d6\u308a\u304c\u96e3\u3057\u304b\u3063\u305f\u3002MK3870\u30c1\u30c3\u30d7\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u53d6\u308b\u305f\u3081\u3001[Andrew Menadue]\u3055\u3093\u306f[Sean Riddle]\u3055\u3093\u306e\u65b9\u6cd5\u3092\u4f7f\u7528\u3057\u305f\u3002\u305d\u306e\u65b9\u6cd5\u306f\u3001\u30c6\u30b9\u30c8\u30e2\u30fc\u30c9\u3092\u4e00\u6642\u7684\u306b\u7121\u52b9\u306b\u3057\u3001\u5916\u90e8\u304b\u3089\u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u3002\u5168\u3066\u306e\u30d0\u30a4\u30c8\u3092200\u56de\u8aad\u307f\u53d6\u308a\u3001\u540c\u3058\u5024\u304c200\u56de\u8fd4\u3055\u308c\u305f\u5834\u5408\u306b\u7d50\u679c\u3092\u8fd4\u3059\u3002ROM\u5168\u4f53\u3092\u8aad\u307f\u53d6\u308b\u306e\u306f\u6570\u5206\u304b\u304b\u308b\u304c\u3001[Andrew]\u3055\u3093\u306f1\u3064\u306e\u30c1\u30c3\u30d7\u3060\u3051\u8aad\u307f\u53d6\u308b\u4e88\u5b9a\u3002", "titles": ["\u30de\u30b9\u30afROM\u3092\u4f7f\u7528\u3057\u305f\u30cf\u30c3\u30ad\u30f3\u30b0\u624b\u6cd5\uff1aMostek MK3870\u30c1\u30c3\u30d7\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u51fa\u3059", "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u4fee\u7406\uff1a\u53e4\u3044HP\u96fb\u5353\u30d7\u30ea\u30f3\u30bf\u306e\u30b3\u30fc\u30c9\u3092\u53d6\u308a\u51fa\u3059\u65b9\u6cd5", "Raspberry Pi Pico\u3092\u4f7f\u7528\u3057\u305fROM\u8aad\u307f\u51fa\u3057\uff1aMK3870\u30c1\u30c3\u30d7\u306e\u30b3\u30fc\u30c9\u3092\u30d0\u30a4\u30d1\u30b9\u3059\u308b\u6280\u8853", "\u9ad8\u3044\u30bf\u30a4\u30df\u30f3\u30b0\u8981\u4ef6\uff1a\u30de\u30b9\u30afROM\u306e\u5185\u5bb9\u3092\u8aad\u307f\u51fa\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u5236\u7d04", "\u9ad8\u5ea6\u306a\u65b9\u6cd5\uff1a\u30de\u30b9\u30afROM\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u51fa\u3059\u305f\u3081\u306e\u5149\u5b66\u8aad\u307f\u53d6\u308a\u306b\u3088\u308b\u89e3\u6790"]}