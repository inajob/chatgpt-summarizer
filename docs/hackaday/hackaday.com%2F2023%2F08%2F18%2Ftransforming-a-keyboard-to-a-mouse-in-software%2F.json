{"pubDate": "2023-08-18T20:00:40", "original_title": "Transforming a Keyboard to a Mouse in Software", "link": "https://hackaday.com/2023/08/18/transforming-a-keyboard-to-a-mouse-in-software/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/08/key-2.png", "original_content": "Youve probably heard the old saying that if it looks like a duck, and it quacks like a duck So when is a keyboard a mouse? When software makes it quack like a mouse  that is, if mice quacked. [Blackle Mori] took a cheap USB keypad and, using the libevdev Linux system, made it impersonate a mouse.\nThe code on GitHub isnt complex, but the details can take some time to get right. The code takes over all input events from the device. [Blackle] dumped out events sent from the keypad, but the stock evtest program would probably have done just as well.\n\nArmed with the knowledge of what events belong to what keys, it is simple to replace them with messages that generally come from a mouse. This involves creating a virtual device that takes a surprisingly large number of lines of code, but none are particularly difficult to understand.\nThere are a few neat tricks that arent directly related. For example, [Blackle] wanted to have some keys launch programs. However, grabbing ownership of the keyboard requires you to run as root. You dont want to launch your browser as root. Not only is it unsafe, but youll have the wrong configuration files. Luckily, Linux capabilities let it work the way you would like.\nOverall, it is a neat approachable example of a technique you could use for many things. It isnt hard to imagine a microcontroller on a serial port feeding mouse and keyboard events to the computer using a scheme like this. Sure, if you have the right USB micro, you could emulate a HID device, but thats not always possible or desirable.\nYou never know what you might want to connect to a modern PC. Maybe even something as simple as a foot pedal."}