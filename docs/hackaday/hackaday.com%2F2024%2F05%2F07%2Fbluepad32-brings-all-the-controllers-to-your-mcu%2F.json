{"pubDate": "2024-05-07T18:30:13", "original_title": "Bluepad32 Brings All the Controllers To Your MCU", "link": "https://hackaday.com/2024/05/07/bluepad32-brings-all-the-controllers-to-your-mcu/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/05/bluepad_feat.jpg", "original_content": "As much as we enjoy spinning up our own solutions, there are times when youve got to look at whats on the market and realize you might be out of your league. For example, take Bluetooth game controllers. Sure, you could make your own with a microcontroller, some buttons, and a couple joysticks. But between the major players like Microsoft, Nintendo, and Sony, as well as independent peripheral companies like 8BitDo, theres some seriously impressive hardware out there that can be easily repurposed.\nHow, you ask? Well, Bluepad32 by [Ricardo Quesada] would be a great place to start. This Apache v2.0 licensed project allows you to easily interface with a wide array of commercially available BT controllers, and supports an impressive number of software and hardware platforms. Using the Arduino IDE on an ESP32? No problem. CircuitPython on the Pico W? Supported. Theres even example code provided for using it on Linux and Mac OS. Sorry Windows fans  perhaps theres a sassy paperclip or sentient dog built into your OS that can instruct you further.\nA few of the controllers supported by Bluepad32.\nThe nature of the Bluetooth Human Interface Device (HID) protocol means that, at least in theory, pretty much all modern devices should be supported by Bluepad32 automatically. But even still, its hard not to be impressed by the official controller compatibility list. Theres also separate lists for Bluetooth mice and keyboards that are known to work with the project.\nWhile its somewhat unlikely to be a problem in this particular community, there is an unusual quirk to this project which we think should at least be mentioned. Although Bluepad32 itself is free and open source software (FOSS), it depends on the BTstack library, which in turn uses a more ambiguous licensing scheme. BTstack is open in the sense that you can see the source code and implement it in your own projects, but its custom license precludes commercial use. If you want to use BTstack (and by extension, Bluepad32) in a commercial product, you need to contact the developers and discuss terms.\nLicense gotchas aside, Bluepad32 is definitely a project to keep in the back of your mind for the future. You can always build your own controller if youre looking a challenge, but youll have a hell of a time beating the decades of testing and development Sony has put into theirs."}