{"pubDate": "2025-07-04T11:00:46", "original_title": "Why GitHub Copilot Isn\u2019t Your Coding Partner", "link": "https://hackaday.com/2025/07/04/why-github-copilot-isnt-your-coding-partner/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2021/08/GithubCopilot.jpg", "original_content": "These days AI is everywhere, including in software development. Coming hot on the heels of approaches like eXtreme Programming and Pair Programming, theres now a new kind of pair programming in town in the form of an LLM thats been digesting millions of lines of code. Purportedly designed to help developers program faster and more efficiently, these AI programming assistants have primarily led to heated debate and some interesting studies.\nIn the case of [Jj], their undiluted feelings towards programming assistants like GitHub Copilot burn as brightly as the fire of a thousand Suns, and not a happy kind of fire.\nWhether its Copilot or ChatGPT or some other chatbot that may or may not be integrated into your IDE, the frustration with what often feels like StackOverflow-powered-autocomplete is something that many of us can likely sympathize with. Although [Jj] lists a few positives of using an LLM trained on codebases and documentation, their overall view is that using Copilot degrades a programmer, mostly because of how it takes critical thinking skills out of the loop.\nRegardless of whether you agree with [Jj] or not, the research so far on using LLMs with software development and other tasks strongly suggests that theyre not a net positive for ones mental faculties. Its also important to note that at the end of the day its still you, the fleshy bag of mostly salty water, who has to justify the code during code review and when something catches on fire in production. Your copilot meanwhile gets off easy."}