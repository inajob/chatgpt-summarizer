{"pubDate": "2025-04-01T05:00:00", "original_title": "Golang On The PS2", "link": "https://hackaday.com/2025/03/31/golang-on-the-ps2/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/03/image-6-e1743416701666.png", "original_content": "A great many PlayStation 2 games were coded in C++, and there are homebrew SDKs that let you work in C. However, precious little software for the platform was ever created in Golang. [Ricardo] decided this wouldnt do, and set about making the language work with Sonys best-selling console of all time.\u00a0\nWhy program a PS2 in Go? Well, it can be easier to work with than some other languages, but also, theres just value in experimenting in this regard. These days, Go is mostly just used on traditional\u00a0computery platforms, but [Ricardo] is taking it into new lands with this project.\nOne of the challenges in getting Go to run on the PS2 is that the language was really built to live under a full operating system, which the PS2 doesnt really have. However, [Ricardo] got around this by using TinyGo, which is designed for compiling Go on simpler embedded platforms. It basically takes Go code, turns it into an intermediate representation, then compiles binary code suitable for the PS2s Emotion Engine (which is a MIPS-based CPU).\nThe specifics of getting it all to work are quite interesting if you fancy challenges like these. [Ricardo] was even able to get to an effective Hello World point and beyond. Theres still lots to do, and no real graphical fun yet, but the project has already passed several key milestones. It recalls us of when we saw Java running on the N64. Meanwhile, if youre working to get LOLCODE running on the 3DO, dont hesitate to let us know!"}