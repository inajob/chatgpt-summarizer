{"pubDate": "2023-12-09T21:00:59", "original_title": "How The First iPod Was Blown Wide Open", "link": "https://hackaday.com/2023/12/09/how-the-first-ipod-was-blown-wide-open/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/12/ipod-crack-featured.jpg", "original_content": "If someone makes a device, someone else will want to break it open and run their own software on it. When the original manufacturer is Apple this is never made easy, and as [Daniel Stenberg] reminds us in the case of one of the earlier iPod models it required an unusual approach.\nIn short, an HTML file was found which triggered a reboot, meaning a buffer overrun had been found in the firmware. After much experimenting, the memory location was found which would flash the backlight, and from there a piece of ARM code could be injected which would dump the firmware very slowly bitwise by flashing the light. Enough code could be extracted to find the address of the USB serial port, allowing new code to be made which dumped the firmware via USB. We remember the earliest models using FireWire instead of USB, so perhaps we can zero in on the 3rd or 4th generation. From there enough could be deduced to run the Rockbox music player firmware. We remember seeing friends doing this back in the day, something which was for a while the height of open-source coolness.\nFast forward twenty years or so, and were still covering people chipping away at Apples defenses. We dont know whether a first-generation iPod could run Doom, but we know Rockbox was capable of it on other players."}