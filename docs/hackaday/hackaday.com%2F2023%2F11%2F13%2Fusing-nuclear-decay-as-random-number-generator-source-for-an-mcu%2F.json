{"pubDate": "2023-11-14T03:00:33", "original_title": "Using Nuclear Decay As Random Number Generator Source For An MCU", "link": "https://hackaday.com/2023/11/13/using-nuclear-decay-as-random-number-generator-source-for-an-mcu/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/11/nuclear_decay_rng_featured.jpg", "original_content": "Although there are many ways to get a random number generator (RNG) set up on a microcontroller, its hard to argue with the sheer randomness of the various kinds of radiation zipping all around us from nuclear decay events. For [gbonacini] the purchase of a Geiger counter first in 2022 was the reason to tinker with using these as the source for an RNG, which simply runs a counter until a Geiger counter event occurs that selects a number and the counter is reset to zero.\nWith the next version of this system the hardware and layout has changed somewhat, using a commercial handheld Geiger counter (GMC-320+) and its audio output as a generic input for any MCU.\u00a0The (pulsed) audio signal is amplified with an opamp (left unspecified) that connects to a GPIO pin of the MCU (RP2040-based Pico W). Here the same algorithm is used to create a continuous queue of randomly picked numbers, which can also be queried via the WiFi interface with a custom protocol, essentially making it a network-connected RNG that could be used by other network-connected appliances.\nC++ source is provided for the Pico W example, but it should be easy enough to adapt to other platforms. The GMC-320+ is also among the more affordable Geiger counters out there, even if its somewhat bulky to pair with just a single MCU, making a more basic Geiger counter module better for a permanent installation. Either way you should get pretty good RNG this way without splurging on exotic hardware.\n(Thanks to [navigator] for the tip)", "title": "\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u63a5\u7d9a\u53ef\u80fd\u306a\u4e71\u6570\u767a\u751f\u5668\u306e\u4f5c\u6210\u65b9\u6cd5", "body": "2022\u5e74\u306bGeiger\u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u8cfc\u5165\u3057\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u3066\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\uff08RNG\uff09\u3092\u4f5c\u6210\u3057\u3066\u3044\u308b\u3002\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u5546\u7528\u306e\u624b\u6301\u3061\u306eGeiger\u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u4f7f\u7528\u3057\u3001\u30aa\u30fc\u30c7\u30a3\u30aa\u51fa\u529b\u3092MCU\u306eGPIO\u30d4\u30f3\u306b\u63a5\u7d9a\u3057\u3066\u3044\u308b\u3002WiFi\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4ecb\u3057\u3066\u4ed6\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u3082\u4f7f\u7528\u53ef\u80fd\u3002Pico W\u306eC++\u30bd\u30fc\u30b9\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3002\n", "titles": ["\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u63a5\u7d9a\u53ef\u80fd\u306a\u4e71\u6570\u767a\u751f\u5668\u306e\u4f5c\u6210\u65b9\u6cd5", "\u30ac\u30a4\u30ac\u30fc\u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u4f7f\u7528\u3057\u305fRNG\u306e\u4f5c\u308a\u65b9", "\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3068\u30ac\u30a4\u30ac\u30fc\u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u4e71\u6570\u751f\u6210\u30b7\u30b9\u30c6\u30e0\u306e\u69cb\u7bc9\u65b9\u6cd5", "GMC-320+\u3092\u4f7f\u7528\u3057\u305f\u30cf\u30f3\u30c9\u30d8\u30eb\u30c9\u578b\u30ac\u30a4\u30ac\u30fc\u30ab\u30a6\u30f3\u30bf\u30fc\u306e\u30a2\u30f3\u30d7\u5316", "\u30b3\u30b9\u30c8\u3092\u6291\u3048\u306a\u304c\u3089\u9ad8\u54c1\u8cea\u306a\u4e71\u6570\u751f\u6210\u3092\u5b9f\u73fe\u3059\u308b\u65b9\u6cd5"]}