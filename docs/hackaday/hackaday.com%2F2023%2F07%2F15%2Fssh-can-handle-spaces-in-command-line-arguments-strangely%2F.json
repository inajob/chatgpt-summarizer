{"pubDate": "2023-07-15T17:00:26", "original_title": "SSH Can Handle Spaces In Command-line Arguments Strangely", "link": "https://hackaday.com/2023/07/15/ssh-can-handle-spaces-in-command-line-arguments-strangely/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2021/08/GithubCopilot.jpg", "original_content": "One of the things ssh can do is execute a command on a remote server. Most of us expect it to work transparently when doing so, simply passing the command and its arguments on without any surprises in the process. But after 23 years of using OpenSSH on a nearly daily basis, [Martin Kjellstrand] got surprised.\nIt turns out that the usual rules around how things are parsed can have some troublesome edge cases when spaces are involved. [Martin] kicks off an example in the following way:\nOne would reasonably expect the commands figlet foobar bar\\ baz and ssh localhost figlet foobar bar\\ baz to be functionally equivalent, right? The former ultimately runs the command figlet with arguments foobar and bar baz on the local machine. The second does the same, except with ssh being involved in the middle. As mentioned, one would expect both commands to be functionally identical, but thats not what happens. What happens is that ssh turns bar\\ baz into two distinctly separate command-line arguments in the process of sending it for remote execution: bar and baz. The result is mystification as the command fails to run the way the user expects, if it runs at all.\nWhat exactly is going on, here? [Martin] goes into considerable detail tracking down this odd behavior and how it happens, but hes unable to ultimately explain why ssh does things this way. He suspects that it is the result of some design decision taken long ago. Or perhaps a bug that has, over time, been promoted to entrenched quirk.\nDo you have any insights or knowledge about this behavior? If so, [Martin] wants to hear about it and so do we, so dont keep it to yourself! Let us know in the comments, below.", "title": "OpenSSH\u3092\u4f7f\u3063\u305f\u30ea\u30e2\u30fc\u30c8\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306b\u751f\u3058\u308b\u554f\u984c\u306b\u3064\u3044\u3066", "body": "OpenSSH\u306b\u304a\u3044\u3066\u3001\u30b9\u30da\u30fc\u30b9\u304c\u542b\u307e\u308c\u308b\u3068\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u3068\u3044\u3046\u5831\u544a\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u5177\u4f53\u7684\u306a\u7406\u7531\u306f\u660e\u3089\u304b\u3067\u306f\u306a\u3044\u3088\u3046\u3067\u3059\u304c\u3001\u30c7\u30b6\u30a4\u30f3\u306e\u9078\u629e\u3084\u30d0\u30b0\u306e\u53ef\u80fd\u6027\u304c\u6307\u6458\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u52d5\u4f5c\u306b\u95a2\u3059\u308b\u60c5\u5831\u3084\u6d1e\u5bdf\u304c\u3042\u308c\u3070\u5171\u6709\u3057\u3066\u304f\u3060\u3055\u3044\u3002", "titles": ["OpenSSH\u3092\u4f7f\u3063\u305f\u30ea\u30e2\u30fc\u30c8\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306b\u751f\u3058\u308b\u554f\u984c\u306b\u3064\u3044\u3066", "\u7a7a\u767d\u6587\u5b57\u304c\u95a2\u4e0e\u3059\u308b\u5834\u5408\u306eOpenSSH\u306e\u52d5\u4f5c\u4ed5\u69d8\u306b\u9a5a\u304b\u3055\u308c\u308b", "\u30ea\u30e2\u30fc\u30c8\u5b9f\u884c\u6642\u306b\u5f15\u6570\u304c\u5206\u5272\u3055\u308c\u308b\u554f\u984c\u306b\u3064\u3044\u3066", "OpenSSH\u306e\u30c7\u30b6\u30a4\u30f3\u4e0a\u306e\u6c7a\u5b9a\u304b\u3001\u3042\u308b\u3044\u306f\u30d0\u30b0\u304b\u3089\u751f\u3058\u305f\u52d5\u4f5c\u306e\u8b0e", "OpenSSH\u306e\u4ed5\u69d8\u306b\u95a2\u3059\u308b\u77e5\u898b\u3084\u8003\u5bdf\u3092\u5171\u6709\u3057\u307e\u3057\u3087\u3046"]}