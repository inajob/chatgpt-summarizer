{"pubDate": "2024-12-11T18:00:05", "original_title": "It\u2019s Remotely Ham Radio", "link": "https://hackaday.com/2024/12/11/its-remotely-ham-radio/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/11/hamspace.jpg", "original_content": "Have you ever considered running your ham radio remotely? It has been feasible for years but not always easy. Recently, I realized that most of the pieces you need to get on the air remotely are commonplace, so I decided to take the plunge. I wont give step-by-step instructions because your radio, computer setup, and goals are probably different from mine. But I will give you a general outline of what you can do.\nIm fortunate enough to have a sizeable freestanding shop in my backyard. When I had it built, I thought it was huge. Now, not so much. The little space is crammed with test equipment, soldering gear, laser cutters, drill presses, and 3D printers. Ive been a ham for decades, but I didnt have room for the radios, nor did I have an antenna up. But a few months ago, I made space, set some radios up, strung out a piece of wire, and got back on the air. I had so much fun I decided it was time to buy a new radio. But I didnt want to have to go out to the shop (or the lab, as I like to call it) just to relax with some radio time.\n\nGood News!\nThe good news is that this makes life easier for going remote. The lab has a good network connection back to the house and I dont have to worry about my radio being open to the public Internet. I also dont have to worry about the transmitter going rogue since, if it does, I can simply walk out the back door and turn it off.\nOn the other hand, you could probably operate the station from anywhere in the world you have a network connection. You can VPN back into the local network. I have the transmitter on a switch so Alexa or Google can turn it on and off. The radio and all the software have safeguards such as maximum transmit time timeouts and a feature to shut down transmitting if it loses a network connection. So, if you are brave enough and your local laws permit it, you could probably operate from anywhere.\nOne Way\nNowadays, having a computer connected to your radio is almost a requirement. Even my old radio could take commands over an RS232 port. The new rig, an Icom IC-7300, has a USB port, and it looks like both a serial port and a sound card.\nThat last bit is especially handy since you used to have to figure out how to cable between the rig and the computers sound card. Now the rig is the computers sound card  or, at least, one of them.\n<!--more-->\nWhy?\nIf you are a ham, you can probably skip ahead, but if you arent, you might wonder why you need a computer. Of course, some of it is just handy. You can keep your log and look up propagation or callsigns. But you dont have to be connected to a radio to do that. It just makes it easier.\nThere are two reasons having the computer connected to the radio really pays off. First, you can send and receive digital signals using a sound card.\nDigital signals include text like RTTY or PSK31 where you type messages to each other, pictures in the form of SSTV, or computer-to-computer modes like FT8. Some people experiment with digital voice modes. There are many other options.\nThe other thing a computer can do is control your radio. Sure, you can use the knobs and buttons, but a computer can control it, which, for remote access, is essential. It can also help when you want a program to, for example, look up a station youve heard, find its location, calculate the direction that station is relative to you, and move your antenna to point in that direction.\nHow?\nThe simplest way to create a remote station is just to use a remote desktop program to log into the computer at your station. For digital modes, that may even be the best way, but it means all the software runs on the station computer (which could be a Raspberry Pi, for example). It also means that the audio you want to hear or send has to traverse over the remote desktop software, and most of them will prioritize screen traffic over audio. Plus if either computer has an unusually large or small screen, it isnt always a good experience.\nWhile Ive played with that, I elected to go a different way. I wanted the radio and computer to be more or less a terminal and run the software to do things on my computer back in the office or my laptop.\nTo do this, you need two things: a way to control the radio and a way to send and receive audio as though you were on the station PC.\nControl\nRig control is the trickiest part because it depends on what radio you have. Many radio manufacturers supply their own software, but often community offerings are better. In my case, I used the wfview software which works will with Icom radios. However, there are many other options for both Icom and other radios.\nI picked it because it knows how to speak remotely to another instance of itself and can expose a standard hamlib interface that many pieces of ham software use to control radios.\nThe basic setup for FT8\nFT-8 and Audio\nThe audio setup is a bit trickier. If all you want to do is listen and talk, then wfview does fine all by itself. However, my goal was to be able to install software for FT8, PSK31, RTTY, and even digital voice. In this case, Im using JTDX for FT8.\nJTDX can control a radio over a hamlib network connection. That isnt turned on in wfview by default, but it is easy to turn on and assign a port number. In theory, you could do this on the remote copy of wfview or the local copy, but I chose to do it on the local copy. That means JTDX talks to the radio on the local 127.0.0.1 IP address.\nFor the audio, I needed a way to pipe audio from the fake sound card provided by wfview to the input of JTDX. Luckily, I just wrote a Linux Fu post about that very topic. If you dont mind rebuilding everything, you can make a single audio loopback, but I made two: one for the radio input and one for the radio output.\nThe PipeWire configuration for FT8\nBy using two that I create on system startup (for example, in the /etc/rc.local file or using systemd), the programs always have a device that they can connect to. Just dont forget the loopback have to run under your user ID, not root. If you rely on plain PipeWire or PulseAudio to make the connections, you will have to rebuild the connections each time.\nNote that radio-in and radio-out are always available (assuming you created them). So when the programs start up, they can find the pipe even if the other side of the pipe doesnt exist yet. That makes it easy to keep everything connected. Instead of branching the radio output to the speakers, the monitor output of the pipe does the job.\nCreating these loopback devices is simple:\npw-loopback -n radio-in\u00a0 -m '[FL FR]' --capture-props='media.class=Audio/Sink' --playback-props='media.class=Audio/Source'\npw-loopback -n radio-out \u00a0-m '[FL FR]' --capture-props='media.class=Audio/Sink' --playback-props='media.class=Audio/Source'\nIf you want to know more, check out my earlier post on PipeWire.\nIf you use Windows, there are ways to do it there, too (including if you are running Linux on one side and Windows on the other). The wfview audio configuration page has some details. While they suggest VBAN for Windows, you can use it with Linux, too, although even if you have a mixed setup, you can always use the native Linux facilities.\nOn the Air\nDoes it work? It sure does, as you can see in the accompanying screenshot. The latency of the audio over the network is usually under 200 milliseconds, so thats workable, although if you have a lot of delay, it might present a problem. I tried a VPN connection from a remote location, but I still had less than 400 milliseconds. For some reason, over a long period of time, the latency creeps up even on a local network, but restarting wfview seems to fix it.\nOperating FT8 remotely\nSince you wont have my exact setup, I wont go through the configuration, but clearly youll have to work out the connections for audio to each program. You may also experiment with different codecs  it will depend on your software.\nSetting up a remote station isnt nearly as hard as it used to be. Modern radios are easy to control over a network  some even have network jacks. Your home network is probably up to the task of shipping audio around, and there are solutions for piping audio between programs for Linux, Windows, or even both.\nKeep in mind that while I did this with FT8, it works with voice or just about any other digital mode. You can even do CW, but  as far as I know  wfview wont let you use a key. Youll have to type your Morse code in. If you need a primer on FT8, we got you. If you prefer your remote control in the browser, this might help you.", "title": "\u30cf\u30e0\u7121\u7dda\u3092\u30ea\u30e2\u30fc\u30c8\u3067\u904b\u7528\u3059\u308b\u65b9\u6cd5\u3068\u306f\uff1f", "body": "\u30cf\u30e0\u7121\u7dda\u3092\u30ea\u30e2\u30fc\u30c8\u904b\u7528\u3059\u308b\u65b9\u6cd5\u3068\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\u3092\u7d39\u4ecb\u3002", "titles": ["\u30cf\u30e0\u7121\u7dda\u3092\u30ea\u30e2\u30fc\u30c8\u3067\u904b\u7528\u3059\u308b\u65b9\u6cd5\u3068\u306f\uff1f", "\u81ea\u5b85\u3067\u30ea\u30e2\u30fc\u30c8\u7121\u7dda\u5c40\u3092\u8a2d\u5b9a\u3059\u308b\u7c21\u5358\u306a\u624b\u9806", "\u30c7\u30b8\u30bf\u30eb\u4fe1\u53f7\u3092\u5229\u7528\u3057\u305f\u7121\u7dda\u901a\u4fe1\u306e\u9b45\u529b", "wfview\u3092\u4f7f\u7528\u3057\u305f\u7121\u7dda\u64cd\u4f5c\u306e\u65b0\u3057\u3044\u30a2\u30d7\u30ed\u30fc\u30c1", "\u30e2\u30c0\u30f3\u7121\u7dda\u6a5f\u3067\u306e\u30ea\u30e2\u30fc\u30c8\u63a5\u7d9a\u306e\u5229\u70b9\u3068\u6ce8\u610f\u70b9"]}