{"pubDate": "2025-06-30T08:00:18", "original_title": "Preserve your Plants with an Automated Terrarium", "link": "https://hackaday.com/2025/06/30/preserve-your-plants-with-an-automated-terrarium/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/06/oasis_terrarium.png", "original_content": "\nFor those of us who aren\u2019t blessed with a green thumb and who are perhaps a bit forgetful, plants can be surprisingly difficult to keep alive. In those cases, some kind of automation, such as [Justin Buchanan]\u2019s Oasis smart terrarium, is a good way to keep our plants from suffering too much.\nThe Oasis has an ultrasonic mister to water the plants from a built-in tank, LED grow lights, fans to control airflow, and a temperature and humidity sensor. It connects to the local WiFi network and can set up recurring watering and lighting schedules based on network time. Most of the terrarium is 3D-printed, with a section of acrylic tubing providing the clear walls. Before installing the electronics, it\u2019s a good idea to waterproof the printed parts with low-viscosity epoxy, particularly since the water tank is located at the top of the terrarium, where a leak would drip directly onto the control electronics.\n\nAn ESP32-C3 controls the terrarium; it uses a MOSFET circuit to drive the ultrasonic mister, an SHT30 sensor to measure humidity and temperature, and a PWM driver circuit to control the LEDs. Conveniently, [Justin] also wrote a piece of command-line client software that can find online terrariums on the local network, configure WiFi, set the terrarium\u2019s schedule, control its hardware, and retrieve data from its sensors. Besides this, Oasis also exposes a web interface that performs the same functions as the command-line client.\nThis isn\u2019t the first automated terrarium we\u2019ve seen, though it is the most aesthetically refined. They aren\u2019t just for plants, either; we\u2019ve seen a system to keep geckos comfortable.", "title": "- \u81ea\u52d5\u5316\u3055\u308c\u305f\u30aa\u30a2\u30b7\u30b9\uff1a\u690d\u7269\u3092\u80b2\u3066\u308b\u30b9\u30de\u30fc\u30c8\u30c6\u30e9\u30ea\u30a6\u30e0", "body": "\u30aa\u30a2\u30b7\u30b9\u30b9\u30de\u30fc\u30c8\u30c6\u30e9\u30ea\u30a6\u30e0\u306f\u690d\u7269\u3092\u81ea\u52d5\u7684\u306b\u7ba1\u7406\u3059\u308b\u88c5\u7f6e\u3067\u3059\u3002", "titles": ["- \u81ea\u52d5\u5316\u3055\u308c\u305f\u30aa\u30a2\u30b7\u30b9\uff1a\u690d\u7269\u3092\u80b2\u3066\u308b\u30b9\u30de\u30fc\u30c8\u30c6\u30e9\u30ea\u30a6\u30e0", "- ESP32-C3\u3092\u4f7f\u3063\u305f\u7c21\u5358\u306a\u690d\u7269\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u4f5c\u308a\u65b9", "- 3D\u30d7\u30ea\u30f3\u30c8\u3068\u96fb\u5b50\u90e8\u54c1\u3092\u4f7f\u3063\u305f\u7f8e\u3057\u3044\u30c6\u30e9\u30ea\u30a6\u30e0\u306e\u8a2d\u8a08", "- IoT\u3067\u690d\u7269\u306e\u751f\u80b2\u3092\u52a9\u3051\u308b\u81ea\u52d5\u6c34\u3084\u308a\u88c5\u7f6e", "- \u690d\u7269\u3060\u3051\u3067\u306a\u304f\u722c\u866b\u985e\u306b\u3082\u5bfe\u5fdc\uff01\u9032\u5316\u3057\u305f\u81ea\u52d5\u30c6\u30e9\u30ea\u30a6\u30e0\u306e\u7d39\u4ecb"]}