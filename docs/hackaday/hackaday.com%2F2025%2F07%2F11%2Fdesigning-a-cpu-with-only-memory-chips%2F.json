{"pubDate": "2025-07-11T20:00:27", "original_title": "Designing a CPU with only Memory Chips", "link": "https://hackaday.com/2025/07/11/designing-a-cpu-with-only-memory-chips/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/07/epromint_cpu.png", "youtube": "https://www.youtube.com/watch?v=xBB1nAUvuqU", "original_content": "\nBuilding a simple 8-bit computer is a great way to understand computing fundamentals, but there\u2019s only so much you can learn by building a system around an existing processor. If you want to learn more, you\u2019ll have to go further and build the CPU yourself, as [MINT] demonstrated with his EPROMINT project (video in Polish, but with English subtitles).\nThe CPU began when [MINT] began experimenting with uses for his collection of old memory chips, and quickly realized that they could do quite a bit more than store data. After building a development board for single-chip based programmable logic, he decided to build a full CPU out of (E)EPROMs. The resulting circuit spans four large pieces of perfboard, weighs in at over half a kilogram, and took several weeks of soldering to create.\nThe star of the system is the ALU, which runs an instruction set inspired by the Z80, but with some optimizations and added features. In particular, it has new operations for multiplication, division, bitstream operations, more advanced bit shifting, and a wide range of mathematical functions, including exponents, roots, and trigonometric functions. [MINT] documented all of this in a nicely-formatted offline booklet, available under the projects GitHub repository. It\u2019s currently only possible to program for the CPU using opcodes or a custom flavor of assembly, but there are plans to write a C compiler for it.\nEven without being able to write in a higher-level language than assembly, [MINT] was able to drive a VFD screen with the EPROMINT, which he used to display some clips from The Matrix. This provided an opportunity to demonstrate basic debugging methods, which involved dumping and analyzing the memory contents after a failed program execution.\nUsing memory chips as programmable logic gates is an interesting hack, and we\u2019ve seen Lisp programs written to make this easier. Of course, this isn\u2019t the first CPU we\u2019ve seen built without any chips intended for logic operations.\n\nThanks to [Piotr] for the tip!", "title": "- \u53e4\u3044\u30e1\u30e2\u30ea\u30c1\u30c3\u30d7\u3092\u6d3b\u7528\u3057\u305f\u81ea\u4f5cCPU\u306e\u6311\u6226", "body": "\u81ea\u4f5c\u306eCPU\u3092EPROM\u3067\u69cb\u7bc9\u3057\u305f[MINT]\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3002\u65b0\u305f\u306a\u6a5f\u80fd\u3092\u6301\u3064ALU\u3092\u5099\u3048\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3082\u691c\u8a0e\u4e2d\u3002", "titles": ["- \u53e4\u3044\u30e1\u30e2\u30ea\u30c1\u30c3\u30d7\u3092\u6d3b\u7528\u3057\u305f\u81ea\u4f5cCPU\u306e\u6311\u6226", "- EPROM\u3092\u4f7f\u3063\u305f8\u30d3\u30c3\u30c8\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u69cb\u7bc9\u65b9\u6cd5", "- Z80\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6301\u3064\u81ea\u4f5cALU", "- VFD\u30b9\u30af\u30ea\u30fc\u30f3\u3067\u300e\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u300f\u3092\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "- \u30d7\u30ed\u30b0\u30e9\u30e0\u53ef\u80fd\u306a\u30ed\u30b8\u30c3\u30af\u30b2\u30fc\u30c8\u3068\u3057\u3066\u306e\u30e1\u30e2\u30ea\u30c1\u30c3\u30d7\u306e\u5229\u7528"]}