{"pubDate": "2023-11-30T00:00:14", "original_title": "Converting Bluetooth Sensors to Zigbee", "link": "https://hackaday.com/2023/11/29/converting-bluetooth-sensors-to-zigbee/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/11/zigbee-main.jpg", "original_content": "With the increase in popularity of Internet of Things (IoT) devices and their need to communicate wirelessly,\u00a0 theres been a corresponding explosion of wireless protocols to chose from. Of course theres Wi-Fi and Bluetooth, but for more specialized applications there are some other options like Z-Wave, LoRa, Sigfox, and Thread. Theres a decent amount of overlap in their capabilities too, so when [SHS] was investigating some low-cost Xiaomi sensors it was discovered that it is possible to convert them from their general purpose Bluetooth protocol over to the more IoT-specialized Zigbee protocol instead.\nThese combination temperature and humidity sensors have already been explored by [Aaron Christophel] who found that its possible to flash these devices with custom firmware. With that background, converting them from Bluetooth to Zigbee is not a huge leap. All thats needed is the Zigbee firmware from [Ivan Belokobylskiy] aka [devbis] and to follow the steps put together by [SHS] which include a process for flashing the firmware using an over-the-air update and another using UART if the wireless updates go awry. Then its just a short process to pair the new Zigbee device to the network and the sensor is back up and running.\nConverting from one wireless protocol to another might not seem that necessary, but using Bluetooth as an IoT network often requires proxy nodes as support devices, whereas Zigbee can communicate directly from the sensor to a hub like Home Assistant. Other Zigbee devices themselves can also act as a mesh network of sorts without needing proxy nodes. The only downside of this upgrade is that once the Bluetooth firmware has been replaced, the devices no longer has any Bluetooth functionality.\nThanks to [RoganDawes] for the tip!"}