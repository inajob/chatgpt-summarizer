{"pubDate": "2023-12-28T06:00:25", "original_title": "A High-End Studio Multiplexer Surrenders To An Arduino", "link": "https://hackaday.com/2023/12/27/a-high-end-studio-multiplexer-surrenders-to-an-arduino/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/12/arduino-matrix-featured.jpg", "original_content": "The equipment used in professional radio and TV studios is both extremely high quality and very expensive indeed, and thus out of the reach of an experimenter. Happily as studios are refurbished theres a steady supply of second-hand equipment which can be surprisingly cheap, but as [Nathan] found out with a Quartz audio router, comes with no control software. Whats to be done with whats essentially a piece of junk? Remove its brain and replace it with one that can be controlled, of course!\nOn the PCB alongside a bank of switch matrices is an FPGA which does the heavy lifting. Thats heavy in a limited sense, because all it does is handle the chip select lines for the matrices and write data to their registers. This is a task that can be handled by a microcontroller, so in goes an Arduino Nano, which along with a few other board modifications delivers a serial-controlled studio router.\nThe interesting part for us in this project comes from a look at the date codes on the board, theyre from the early 2000s. This is (roughly) contemporary with the ATmega chip on the Arduino, so were curious as to why the designers saw fit to use an FPGA when the microcontrollers of the day were clearly up to the task for much less outlay. We suspect a touch of millennium-era price inflation, but we cant be sure.\nMeanwhile, old broadcast kit has featured here before.", "title": "\u5b89\u4fa1\u306a\u90e8\u54c1\u3067\u4f5c\u3063\u305f\u30b7\u30ea\u30a2\u30eb\u5236\u5fa1\u53ef\u80fd\u306a\u30b9\u30bf\u30b8\u30aa\u30eb\u30fc\u30bf\u30fc\u306e\u4f5c\u308a\u65b9", "body": "\u653e\u9001\u30b9\u30bf\u30b8\u30aa\u306e\u9ad8\u54c1\u8cea\u306a\u6a5f\u5668\u306f\u975e\u5e38\u306b\u9ad8\u4fa1\u3067\u3042\u308a\u3001\u30df\u30eb\u30af\u30cb\u30fc\u30c8\u0435\u043a\u306f\u624b\u306b\u5165\u308a\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u3001\u518d\u5229\u7528\u53ef\u80fd\u306a\u53e4\u3044\u6a5f\u5668\u3092\u624b\u306b\u5165\u308c\u3066\u5236\u5fa1\u53ef\u80fd\u306b\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u53e4\u3044\u30aa\u30fc\u30c7\u30a3\u30aa\u30eb\u30fc\u30bf\u30fc\u306bArduino\u3092\u642d\u8f09\u3057\u3066\u5236\u5fa1\u3059\u308b\u65b9\u6cd5\u304c\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002", "titles": ["\u5b89\u4fa1\u306a\u90e8\u54c1\u3067\u4f5c\u3063\u305f\u30b7\u30ea\u30a2\u30eb\u5236\u5fa1\u53ef\u80fd\u306a\u30b9\u30bf\u30b8\u30aa\u30eb\u30fc\u30bf\u30fc\u306e\u4f5c\u308a\u65b9", "FPGA\u304b\u3089\u76f4\u63a5\u5236\u5fa1\u3059\u308b\u4ee3\u308f\u308a\u306bArduino\u3092\u4f7f\u3063\u305f\u30b9\u30bf\u30b8\u30aa\u30eb\u30fc\u30bf\u30fc\u306e\u6539\u9020", "\u65e7\u5f0f\u306e\u653e\u9001\u6a5f\u5668\u3092\u6d3b\u7528\u3057\u305fDIY\u30b9\u30bf\u30b8\u30aa\u30eb\u30fc\u30bf\u30fc\u306e\u88fd\u4f5c\u624b\u9806", "2000\u5e74\u4ee3\u306e\u30dc\u30fc\u30c9\u3092\u518d\u5229\u7528\u3057\u305f\u30b9\u30bf\u30b8\u30aa\u30eb\u30fc\u30bf\u30fc\u306e\u6539\u826f\u65b9\u6cd5", "\u5b89\u4fa1\u306a\u4e2d\u53e4\u6a5f\u5668\u3092\u4f7f\u3063\u3066\u30b9\u30bf\u30b8\u30aa\u30eb\u30fc\u30bf\u30fc\u3092\u81ea\u4f5c\u3057\u3088\u3046"]}