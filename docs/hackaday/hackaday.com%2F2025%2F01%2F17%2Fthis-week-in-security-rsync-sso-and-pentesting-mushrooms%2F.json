{"pubDate": "2025-01-17T15:00:56", "original_title": "This Week in Security: Rsync, SSO, and Pentesting Mushrooms", "link": "https://hackaday.com/2025/01/17/this-week-in-security-rsync-sso-and-pentesting-mushrooms/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/01/darkarts.jpg", "original_content": "Up first, go check your machines for the rsync version, and your servers for an exposed rsync instance. While there are some security fixes for clients in release 3.4.0, the buffer overflow in the server-side rsync daemon is the definite standout. The disclosure text includes this bit of nightmare fuel: an attacker only requires anonymous read access to a rsync server, such as a public mirror, to execute arbitrary code on the machine the server is running on.\nA naive search on Shodan shows a whopping 664,955 results for rsync servers on the Internet. Red Hats analysis gives us a bit more information. The checksum length is specified by the remote client, and an invalid length isnt properly rejected by the server. The effect is that an attacker can write up to 48 bytes into the heap beyond the normal checksum buffer space. The particularly dangerous case is also the default: anonymous access for file retrieval. Red Hat has not identified a mitigation beyond blocking access.\nIf you run servers or forward ports, its time to look at ports 873 and 8873 for anything listening. And since thats not the only problem fixed, its really just time to update to rsync 3.4.0 everywhere you can. While there arent any reports of this being exploited in the wild, it seems like attempts are inevitable. As rsync is sometimes used in embedded systems and shipped as part of appliances, this particular bug threatens to have quite the long tail.\nMy Gmail is My Passport, Verify Me\nHeres an interesting question. What happens to those Log In With Google accounts that we all have all over the Internet, when the domain changes hands? And no, were not talking about gmail.com. Were talking about myfailedbusiness.biz, or any custom domain that has been integrated with a Google Workspace. The business fails, the domain reverts back to unclaimed, someone else purchases it, and re-adds the admin@myfailedbusiness.biz Google Workspace account. Surely that doesnt register as the same account for the purpose of Google SSO, right?\nThe answer to this question is to look at what actually happens when a user uses Google Oauth to log in. The service sends a message to Google, asking Google to identify the user. Google asks the user for confirmation, and if granted will send an ID token to the service. That token contains three fields that are interesting for this purpose. The domain and email are straightforward, and importantly dont make any distinction between the original and new users. So when the domain and email change hands, so does ownership of the token.\nOauth does provide a sub (subject) field, that is a unique token for a given user/service combination. Seems like that solves the issue, right? The problem is that while that identifier is guaranteed to be unique, its not guaranteed to be consistent, and thus isnt widely used as a persistent user identifier. Google is aware of the issue, and while they initially closed it as a Wont fix issue, the concept did eventually earn [Dylan Ayrey] a nifty $1337 bounty and a promise that Google is working on unspecified fixes. There is no immediate solution, and its not entirely clear that this is strictly a Google problem. Other SSO solutions may have the same quirk.\nFortigate Under Attack\nFortiguard has reported that a vulnerability in FortiOS and FortiProxy is under active exploitation. Fortiguard lists quite a few Indicators of Compromise (IoCs), but as far as the nature of the vulnerability, all we know is that it is an authentication bypass in an Node.js websocket module that allows a remote attacker to gain super-admin privileges. Yoiks.\nActic Wolf has more details on the exploit campaign, which was first found back in early December, but appears to have begun with widespread scanning for the vulnerability as early as November 16. Attackers moved slowly, with the goal of establishing VPN access into the networks protected behind the vulnerable devices. Arctic Wolf has provided additional IoCs, so time to go hunting.\nIvanti Connect, Too\nTheres another security device under attack this week, as watchTowr labs has yet another fun romp through vendor mis-security. This time its a two-part series on Ivanti Connect Secure, and the two buffer overflows being used in the wild.\nIvanti has already released a patch, so the researchers ran a diff on the strings output for the patched and unpatched binary of interest. Three new error messages are in the new version, complaining about client data exceeding a size limit. The diaphora binary diffing tool found some interesting debbuging data, like Too late for IFT_PREAUTH_INIT. IF-T turns out to be an open VPN standard, and that term led to a statement about backwards compatibility in Ivanti code that had terrible code smell.\nThe IF-T protocol includes the optional clientCapabilities field, and Ivantis implementation used a fixed length buffer to store it when parsing incoming connections. The client code almost gets it right, using a strlen() check on the data, and strncpy() to ensure the right number of bytes are copied. Except both of those best-practices are completely useless when the result from strlen() is fed directly into strncpy() as the maximum byte count, without checking whether it overflows the buffer.\nThe second watchTowr article goes through the steps of turning the vulnerability into a real exploit, but doesnt actually give away any exploit code. Which hasnt really mattered, as Proof of Concepts (PoCs) are now available. The takeaway is that Ivanti still has security problems with their code, and this particular exploit is both fully known, and being used in the wild.\nPentesting Mushrooms\nThe folks at Silent Signal have an off-the-beaten-path write-up for us: How to get hired as a pentester. Or alternatively, the story of hacking Mushroom Inc. See, they built an intentionally vulnerable web application, and invited potential hires to find flaws. This application included cross-site scripting potential, SQL injection, and bad password handling, among other problems. The test was to take 72 hours, and find and document problems.\nPart of the test was to present the findings, categorize each vulnerabilitys severity, and even make recommendations for how the fictional business could roll out fixes. Along the way, we get insights on how to get your job application dismissed, and what theyre really looking for in a hire. Useful stuff.\nBits and Bytes\nSecure Boot continues to be a bit of a problem. Microsoft signed a UEFI application that in turn doesnt actually do any of the Secure Boot validation checks. This is only an issue after an attacker has admin access to a machine, but it does completely defeat the point of Secure Boot. Microsoft is finally rolling out fixes, revoking the signature on the application.\nAnd if compromising Windows 11 is of interest to you, HN Security has just wrapped a four-part series that covers finding a vulnerability in an old Windows kernel driver, and turning it into a real read/write exploit that bypasses all of Microsofts modern security hardening.\nDo you have a website, and are you interested in how your API is getting probed? Want to mess with attackers a bit? You might be interested in the new baitroute tool. Put simply, its a honeypot for web APIs.\nAnd finally, the minds behind Top10VPN have released another vulnerability, this time in tunneling protocols like IPIP, GRE, and 6in4. The problem is a lack of validation on incoming tunnel packets. This allows for easy traffic injection, and using the tunnel servers as easy proxies. One of the worst cases is where this flaw allows accessing an internal network protected behind a consumer router.", "title": "- rsync\u30b5\u30fc\u30d0\u30fc\u306e\u8106\u5f31\u6027\u3068\u305d\u306e\u5bfe\u7b56", "body": "rsync\u306e\u8106\u5f31\u6027\u304c\u767a\u898b\u3055\u308c\u3001\u533f\u540d\u30a2\u30af\u30bb\u30b9\u3067\u30b3\u30fc\u30c9\u5b9f\u884c\u304c\u53ef\u80fd\u306b\u3002\u65e9\u6025\u306a\u66f4\u65b0\u304c\u63a8\u5968\u3055\u308c\u308b\u3002", "titles": ["- rsync\u30b5\u30fc\u30d0\u30fc\u306e\u8106\u5f31\u6027\u3068\u305d\u306e\u5bfe\u7b56", "- Google\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30c9\u30e1\u30a4\u30f3\u79fb\u884c\u554f\u984c", "- FortiOS\u3068FortiProxy\u306e\u8105\u5a01\u3068\u5bfe\u7b56", "- Ivanti Connect\u306e\u30d0\u30c3\u30d5\u30a1\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u554f\u984c", "- \u30da\u30cd\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u30c6\u30b9\u30c8\u306e\u6c42\u4eba\u6848\u5185\u3068\u305d\u306e\u624b\u6cd5"]}