{"pubDate": "2025-10-24T11:00:46", "original_title": "Robot Phone Home\u2026Or Else", "link": "https://hackaday.com/2025/10/24/robot-phone-home-or-else/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/10/vac.png", "original_content": "We would have enjoyed [Harishankars] tear down of a robot vacuum cleaner, even if it didnt have a savage twist at the end. Turns out, the company deliberately bricked his smart vacuum.\nLike many of us, [Harishankar] is suspicious of devices beaming data back to their makers. He noted a new vacuum cleaner was pinging a few IP address, including one that was spitting out logging or telemetry data frequently. Of course, he had the ability to block the IP address which he did. End of story, right?\nNo. After a few days of working perfectly, the robot wouldnt turn on. He returned it under warranty, but the company declared it worked fine. They returned it and, indeed, it was working. A few days later, it quit again. This started a cycle of returning the device where it would work, it would come home and work for a few days, then quit again.\nYou can probably guess where this is going, but to be fair, we gave you a big hint. The fact that it would work for days after blocking the IP address wouldnt seem like a smoking gun in real time.\n\nThe turning point was when the company refused to have any further service on the unit. So it was time to pull out the screwdriver. Inside was a dual-CPU AllWinner SoC running Linux and a microcontroller to run the hardware. Of course, there were myriad sensors and motors, too. The same internals are used by several different brands of vacuum cleaners, so these internals arent just one brand.\nEssentially, he wrote his own software to read all the sensors and drive all the motors using his own computers, bypassing the onboard CPU. But he found one thing interesting. The Android Debug Bridge was wide open on the Linux computer. Sort of.\nThe problem was, you could only get in a few seconds after booting up. After that, it would disconnect. A little more poking fixed that. The software stack was impressive, using Google Cartographer to map the house, for example.\nBut what wasnt impressive was the reason for the repeated failures. A deliberate command was sent to kill the robot when it quit phoning home with telemetry. Of course, at the service center, it was able to report and so it worked fine.\nThe hardware and the software are impressive. The enforcement of unnecessary data collection is not. It does, however, make us want to buy one of these just for the development platform. [Harishankar] has already done the work to make it useful.\nIt isnt just vacuums. Android phones spew a notorious amount of data. Even your smart matress  yes, there are smart matresses  can get into the act.", "title": "\u30b9\u30de\u30fc\u30c8\u6383\u9664\u6a5f\u306e\u88cf\u5074\uff1a\u30c7\u30fc\u30bf\u53ce\u96c6\u306e\u95c7\u3068\u306f", "body": "\u30ed\u30dc\u30c3\u30c8\u6383\u9664\u6a5f\u304c\u30c7\u30fc\u30bf\u56de\u53ce\u3092\u3084\u3081\u308b\u3068\u6545\u969c\u3059\u308b\u5de7\u5999\u306a\u4ed5\u7d44\u307f\u304c\u3042\u308a\u3001\u4fee\u7406\u5f8c\u3082\u540c\u69d8\u306e\u554f\u984c\u304c\u7d9a\u3044\u305f\u3002", "titles": ["\u30b9\u30de\u30fc\u30c8\u6383\u9664\u6a5f\u306e\u88cf\u5074\uff1a\u30c7\u30fc\u30bf\u53ce\u96c6\u306e\u95c7\u3068\u306f", "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u5206\u89e3\u3068\u65b0\u305f\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u4f5c\u6210", "\u6545\u969c\u3059\u308b\u30ed\u30dc\u30c3\u30c8\u6383\u9664\u6a5f\u3001\u30c7\u30fc\u30bf\u9001\u4fe1\u304c\u539f\u56e0\u304b\uff1f", "\u81ea\u4f5c\u30bd\u30d5\u30c8\u3067\u6383\u9664\u6a5f\u3092\u518d\u751f\uff1a\u4e2d\u8eab\u306e\u63a2\u6c42", "\u96fb\u5b50\u5de5\u4f5c\u306e\u559c\u3073\u3068\u82e6\u60a9\uff1a\u30b9\u30de\u30fc\u30c8\u30c7\u30d0\u30a4\u30b9\u306e\u771f\u5b9f"]}