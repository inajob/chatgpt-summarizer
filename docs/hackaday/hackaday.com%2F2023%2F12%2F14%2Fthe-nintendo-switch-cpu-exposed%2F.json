{"pubDate": "2023-12-14T16:30:32", "original_title": "The Nintendo Switch CPU Exposed", "link": "https://hackaday.com/2023/12/14/the-nintendo-switch-cpu-exposed/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/12/tegra.png", "original_content": "Ever wonder whats inside a Nintendo Switch? Well, the chip is an Nvidia Tegra X1. However, if you peel back a layer, there are four ARM CPU cores inside  specifically Cortex A57 cores, which take up about two square millimeters of space on the die. The whole cluster, including some cache memory, takes up just over 13 square millimeters. [ClamChowder] takes us inside the Cortex A57 inside the Nintendo Switch in a recent post.\nInterestingly, the X1 also has four A53 cores, which are more power efficient, but according to the post, Nintendo doesnt use them. The 4 GB of DRAM is LPDDR4 memory with a theoretical bandwidth of 25.6 GB/s.\nThe post details the out-of-order execution and branch prediction used to improve performance. We cant help but marvel that in our lifetime, weve seen computers go from giant, expensive machines to the point where a game console has 8 CPU cores and advanced things like out-of-order execution. Still, [ClamChowder] makes the point that the Switchs processor is anemic by todays standards, and cant even compare with an outdated desktop CPU.\nWant to program the ARM in assembly language? We can help you get started. You can even do it on a breadboard, though the LPC1114 is a pretty far cry from what even the Switch is packing under the hood."}