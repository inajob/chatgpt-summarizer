{"pubDate": "2024-08-29T17:00:00", "original_title": "Walking the Plank: Add-Ons for the Bus Pirate", "link": "https://hackaday.com/2024/08/29/walking-the-plank-add-ons-for-the-bus-pirate/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/08/planks_feat.jpg", "original_content": "The Bus Pirate multi-tool has held a place of honor in many a hardware hackers toolbox for years, and the latest generation of the gadget powered by the Raspberry Pi RP2040/RP2350 offers significantly enhanced capabilities over the original PIC versions. We took a look at the new Bus Pirate when it started shipping back in February, and while the firmware was still in the early stages back then, it was already clear that creator [Ian Lesnet] and his team had put together a compelling product.\nOver the last several months, the Bus Pirate software has improved dramatically. New features have started showing off the hardwares capabilities, and the user experience is far improved over where it was at release. Following the firmware development is a roller coaster ride, with [Ian] sometimes pushing out several updates a day. Luckily, like the Pi Pico itself, updating the new Bus Pirate only takes a second.\nBut as impressive and important as those software updates have been, thats not what were talking about today. In this post, well take a look at one of the most exciting aspects of the new Bus Pirate  the ability to easily develop add-on modules for it.\n\nBus Pirate Versions\nBefore we get too far, I should mention that there are now a couple of new Bus Pirate versions on the market, which makes talking about the product a little confusing.\nThe new Bus Pirate 6\nThe Bus Pirate 5, which started shipping in February and remains available, is powered by the RP2040. It is the first major version of the hardware to see a wide release since the Bus Pirate 3. Since the team got early access to the RP2350 chip, they were also able to produce two new variants: the 5XL and the 6.\nWhat are the differences between them all? The 5XL uses the RP2350A and is essentially just a faster version of the 5 thanks to the more powerful cores and additional RAM offered by the new Raspberry Pi silicon. The 6 is based on the RP2350B and takes advantage of the additional GPIO pins by deleting some of the I/O expander chips that were necessary on the 5 and 5XL. This not only makes I/O faster but frees up space on the board to implement a \u201cfollow along\u201d logic analyzer that automatically records everything thats happening on the bus.\nAll that being said, for the purposes of this article, it doesnt actually matter.\nOne Port To Rule Them All\nRegardless of which version of the Bus Pirate you get (5/5XL/6), they all feature the same 10-pin connector on the side. This is where youd normally connect up your probes, and thanks to the display on the top of the Bus Pirate, you dont even have to remember the pinout  when you switch modes on the device, the screen will be updated to show which pin does what.\n\nThis is where things start to get interesting. Since the connector on the side is nothing more exotic than a male 2.54 mm pitch header, interfacing with it through custom hardware is incredibly simple. You dont need to hunt down some special connector  making a board that can plug into the BP5 (or beyond) can be as easy as soldering a female header onto a scrap of perfboard. Even better, since you dont have to worry about creating a custom footprint, developing your own add-on PCBs is a breeze.\nDesigning Custom Expansions\nCreating your own piece of hardware that plugs into the Bus Pirate is as easy as adding a right-angle 2.54 mm female header to the edge of your PCB. You might think the fact that the pinout changing depending on what mode the device is in would be a problem, but in practice, your add-on is likely going to require the user to set a corresponding mode anyway (I2C, SPI, UART, etc).\nOver on the Bus Pirate forums, user [grymoire] is responsible for coming up with the idea of calling these expansions planks after drawing comparisons with the hats and shields used by other development boards. Why a plank? Well, for one, it fits the pirate theme. When plugged into the Bus Pirate, the expansions also look a bit like a plank hanging out over the side of a pirate ship.\nAs an example, I recently put together the SAO Plank: a small adapter that lets me connect three Simple Add-Ons to the Bus Pirate. This is not only a convenient way of powering the badge expansions and monitoring their current consumption using the Bus Pirates onboard display, but it also provides a way to debug and test I2C communications between several SAOs  a capability that will become more useful as we get closer to Supercon 2024.\nTheres really not much going on in the SAO Plank, and frankly, I could have wired the thing up on a perfboard. Even the power LED I added is technically superfluous, as the technicolor lights produced by the Bus Pirate leave no question as to whether or not its turned on. But it was so cheap and easy to turn this into its own board, so why not?\n\nIm eager to see what the community comes up with when presented with such a low-friction path to coming up with custom Bus Pirate expansions.\nCollect Em All\nBus Pirate planks arent just limited to DIY. Since releasing the Bus Pirate 5, a number of official planks have been introduced. Some of these are still in development, such as the IR Toy that [Ian] has been documenting in a thread on the forums. Others are already available for purchase, such as an assortment of adapters that make it easier to work with SPI flash chips and one for interfacing with SLE4442 Secure Memory Cards.\n\n\n\n\n\nOne of the advantages of the official planks is that the firmware is likely to get baked-in support for any special functions they may have. Even though the IR Toy hasnt officially been released, last week a new mode was added to the stable build of the firmware that can interface with it and send NEC IR codes. Then again, as the firmware is open source, even DIY planks could get their own modes should somebody be so inclined to write the code for them.\nWhether theyre an official product or a homebrew project from the community, the Bus Pirate Planks are a very exciting addition to an already fantastic tool. If you happen to see an interesting Plank in the wild, or end up making one yourself, be sure to let us know.", "title": "Raspberry Pi RP2040/RP2350\u3092\u642d\u8f09\u3057\u305f\u65b0\u3057\u3044Bus Pirate\u306e\u6a5f\u80fd\u3068\u62e1\u5f35\u6027", "body": "Bus Pirate\u306f\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30cf\u30c3\u30ab\u30fc\u306b\u4eba\u6c17\u306e\u30de\u30eb\u30c1\u30c4\u30fc\u30eb\u3067\u3042\u308a\u3001RP2040/RP2350\u306b\u3088\u3063\u3066\u5f37\u5316\u3055\u308c\u3001\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u958b\u767a\u3057\u3084\u3059\u304f\u306a\u3063\u305f\u3002\u516c\u5f0f\u3084DIY\u306ePlank\u304c\u5229\u7528\u3067\u304d\u3001\u4f7f\u7528\u4f8b\u3082\u3042\u308b\u3002\u8981\u671b\u306b\u3088\u308a\u81ea\u4f5c\u3082\u53ef\u80fd\u3002", "titles": ["Raspberry Pi RP2040/RP2350\u3092\u642d\u8f09\u3057\u305f\u65b0\u3057\u3044Bus Pirate\u306e\u6a5f\u80fd\u3068\u62e1\u5f35\u6027", "Bus Pirate\u306e\u65b0\u6a5f\u80fd\u3068\u30ab\u30b9\u30bf\u30e0\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u958b\u767a\u65b9\u6cd5", "Bus Pirate 5/5XL/6\u306e\u9055\u3044\u3068\u6a5f\u80fd\u7d39\u4ecb", "Bus Pirate Plank: \u30ab\u30b9\u30bf\u30e0\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u7c21\u5358\u306a\u8a2d\u8a08\u3068\u62e1\u5f35", "\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u3068DIY\u306eBus Pirate Plank\u306e\u6d3b\u7528\u65b9\u6cd5"]}