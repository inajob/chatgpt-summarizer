{"pubDate": "2023-12-10T12:00:53", "original_title": "Nyan Keys: Because Your Keyboard is Painfully Slow", "link": "https://hackaday.com/2023/12/10/nyan-keys-because-your-keyboard-is-painfully-slow/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/12/nyan-keys-800.jpg", "original_content": "You probably dont notice keyboard latency when typing or doing mundane tasks, but if you start gaming, thats also when you might start complaining. Every millisecond counts in that arena. Think your keyboard is fast? Think again. Because unfortunately, no matter what youve got in there, that key matrix is slowing you down. What you need is an FPGA-based keyboard with an overkill MCU. You need Nyan Keys.\n[Portland.HODL] set out to make the lowest-latency mechanical keyboard possible that would accept any Cherry-compatible switches, and boy howdy, is this thing fast.\nCoupled with the STM32F723VET6 MCU is USB 2.0 HS, which has an 8000Hz polling rate. At worst, key latency measures 30\u03bcS, which blows the 1mS average out of the water.\nBecause it uses a Lattice Semi iCE40HX 4k FPGA, each key switch can connect to its own I/O pin, which also eliminates the need for diodes.\nIt also means that each key switch can have its own core  an 8-bit timer that is always counting up to 255. The key can only change its state when the timer reads 255. This acts as a rather clever debounce mechanism.\nIf all thats not enough, [Portland.HODL] built an operating system called NyanOS written in C to avoid any performance-reducing overhead. Oh, and it has an opt-in Bitcoin miner.\nWeve seen a lot of keyboards, the fast ones are fast because of the input side  they are chording keyboards that take combinations to type, rather than using one key (or so) per character. The Characorder is so fast that it was banned from competition.", "title": "\u9045\u5ef6\u3092\u6700\u5c0f\u5316\u3057\u305fFPGA\u30d9\u30fc\u30b9\u306e\u30ad\u30fc\u30dc\u30fc\u30c9\u300cNyan Keys\u300d\u306e\u4f5c\u308a\u65b9", "body": "\u30ad\u30fc\u30dc\u30fc\u30c9\u306e\u9045\u5ef6\u6642\u9593\u306f\u30b2\u30fc\u30e0\u3067\u6c17\u3065\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u6700\u901f\u306e\u6a5f\u68b0\u5f0f\u30ad\u30fc\u30dc\u30fc\u30c9\u300cNyan Keys\u300d\u306f\u3001\u30ad\u30fc\u3054\u3068\u306bFPGA\u3068\u72ec\u81ea\u306e\u30b3\u30a2\u3092\u6301\u3061\u3001\u9ad8\u901f\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3082\u642d\u8f09\u3055\u308c\u3001Bitcoin\u30de\u30a4\u30ca\u30fc\u3082\u9078\u629e\u3067\u304d\u307e\u3059\u3002", "titles": ["\u9045\u5ef6\u3092\u6700\u5c0f\u5316\u3057\u305fFPGA\u30d9\u30fc\u30b9\u306e\u30ad\u30fc\u30dc\u30fc\u30c9\u300cNyan Keys\u300d\u306e\u4f5c\u308a\u65b9", "\u500b\u3005\u306e\u30ad\u30fc\u30b9\u30a4\u30c3\u30c1\u306b\u30aa\u30fc\u30d0\u30fc\u30ad\u30ebMCU\u3092\u642d\u8f09\u3057\u305f\u8d85\u9ad8\u901f\u30e1\u30ab\u30cb\u30ab\u30eb\u30ad\u30fc\u30dc\u30fc\u30c9\u306e\u958b\u767a", "\u30ad\u30fc\u3054\u3068\u306b\u500b\u5225\u306eI/O\u30d4\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u9045\u5ef6\u3092\u6392\u9664\u3057\u305f\u30ad\u30fc\u30dc\u30fc\u30c9\u306e\u4ed5\u7d44\u307f", "C\u8a00\u8a9e\u3067\u66f8\u304b\u308c\u305fNyanOS\u3068\u3044\u3046\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u642d\u8f09\u306e\u9ad8\u901f\u30ad\u30fc\u30dc\u30fc\u30c9", "\u7af6\u6280\u304b\u3089\u7981\u6b62\u3055\u308c\u308b\u307b\u3069\u901f\u3044\u300cCharacorder\u300d\u30ad\u30fc\u30dc\u30fc\u30c9\u306e\u79d8\u5bc6\u3068\u306f"]}