{"pubDate": "2024-12-14T00:00:17", "original_title": "Flashy Paper Christmas Tree Does It With a 555", "link": "https://hackaday.com/2024/12/13/flashy-paper-christmas-tree-does-it-with-a-555/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/12/flashy-tree-800.png", "original_content": "Tis the season for holiday hacks, and [Ben Emmett] is here to remind us that we dont necessarily need a fancy microcontroller in order to make flashy fun things happen.\nSmoothing down the copper traces with a guitar pick.\nTake this Christmas tree for example, which uses a 555 timer and a CB4017 decade counter in order to drive some blinking LEDs. The ICs are through-hole, making the circuit fairly accessible to new players, but there are a few SMD components that need soldering as well. (More on that later.)\nHere, the 555 acts like a clock and drives a square wave. Using the clock as input, the decade counter toggles the output pins one after the other, driving the LEDs to blink in turn. Since there are only eight lights, there is a pause in the light-up pattern, but that could be fixed by wiring decade counter output #9 to the reset pin.\nAlthough function was the main focus circuit-wise, [Ben] managed to lay the traces in the shape of a Christmas tree, which looks great. Having done a similar project in the past, he discovered that the craft cutting machine prefers thick traces and wider spaces between them. This is largely why [Ben] chose to use through-hole ICs.\nAfter laying everything out in KiCad, [Ben] exported the copper layer image for use on the cutting machine. Once it was all cut out, he put it on transfer tape to weed out the extra copper, and get the traces onto cardstock, the final substrate.\nThis is such a fun project, and we love that the CR2032 that powers it also acts as the stand in its vertical holder. Hit up GitHub if you want to make one for yourself. Want something even more 3D? Check out this hollow tree we saw a few years ago.", "title": "- 555\u30bf\u30a4\u30de\u30fc\u3092\u4f7f\u3063\u305f\u30af\u30ea\u30b9\u30de\u30b9\u30c4\u30ea\u30fc\u96fb\u5b50\u5de5\u4f5c", "body": "\u30af\u30ea\u30b9\u30de\u30b9\u30c4\u30ea\u30fc\u578b\u306eLED\u56de\u8def\u306f\u3001555\u30bf\u30a4\u30de\u30fc\u3092\u4f7f\u7528\u3002\u697d\u3057\u307f\u306a\u304c\u3089\u4f5c\u308c\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3002", "titles": ["- 555\u30bf\u30a4\u30de\u30fc\u3092\u4f7f\u3063\u305f\u30af\u30ea\u30b9\u30de\u30b9\u30c4\u30ea\u30fc\u96fb\u5b50\u5de5\u4f5c", "- \u7c21\u5358\u306a\u56de\u8def\u3067\u5149\u308bLED\u3092\u697d\u3057\u3080\u65b9\u6cd5", "- \u30cf\u30f3\u30c9\u30e1\u30a4\u30c9\u306e\u30af\u30ea\u30b9\u30de\u30b9\u30c4\u30ea\u30fc\u3092\u4f5c\u308d\u3046", "- KiCad\u3092\u4f7f\u3063\u305f\u30ab\u30c3\u30c6\u30a3\u30f3\u30b0\u30de\u30b7\u30f3\u306b\u3088\u308b\u88fd\u4f5c\u30d7\u30ed\u30bb\u30b9", "- CR2032\u96fb\u6c60\u304c\u30b9\u30bf\u30f3\u30c9\u306b\u306a\u308b\u697d\u3057\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8"]}