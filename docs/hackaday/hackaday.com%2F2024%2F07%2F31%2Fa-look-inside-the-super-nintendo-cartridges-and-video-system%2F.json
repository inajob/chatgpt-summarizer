{"pubDate": "2024-07-31T08:00:00", "original_title": "A Look Inside the Super Nintendo Cartridges and Video System", "link": "https://hackaday.com/2024/07/31/a-look-inside-the-super-nintendo-cartridges-and-video-system/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/07/snes_gsu2_pcb.jpg", "original_content": "Despite being effectively sold as a toy in the 1990s, the Super Nintendo Entertainment System (SNES) was pretty bleeding-edge as far its computing chops were concerned. This was especially apparent with its cartridges, such as in this excellent summary article by [Fabien Sanglard]. In addition to the mask ROM that stored the game data and (optionally) battery-backed SRAM to store save data, a wide range of enhancement processors existed that upgraded the base SNES system with additional processors for more CPU performance, enhanced graphics and so on. Imagine sticking a game cartridge in a Playstation 4 today that boosted CPU speed by 5x and gave it a much better GPU, this was the world of SNES games.\nOn the other side of the video game cartridges was the video output system, which seems easy enough in todays world of digital HDMI and DisplayPort output. In the 90s video output did however mean NTSC and SECAM/PAL, which means playing nice with frequencies, different resolutions (lines) and squeezing as much as possible into a single frame in a way that works with the game consoles rendering pipeline. As a result of this the PAL version of Super Mario World has a larger vertical resolution than the NTSC version (240 vs 224 lines), even if its still squashed into the same 4:3 format. For the physical video output side, European gamers were spoiled with an AV connector to (RGB) SCART output, while the rest of the world dealt with some variety of RF composite or S-video.\nAlthough the SNESs successor in the form of the N64 would not take cartridges to the same extremes, it was this flexible architecture that gave the SNES such an amazing game library.", "title": "\u30b9\u30fc\u30d1\u30fc\u30d5\u30a1\u30df\u30b3\u30f3\u306e\u30ab\u30fc\u30c8\u30ea\u30c3\u30b8\u306f\u4e00\u4f53\u4f55\u3092\u3057\u3066\u3044\u305f\u306e\u304b\uff1f", "body": "\u300c90\u5e74\u4ee3\u306b\u306f\u304a\u3082\u3061\u3083\u3068\u3057\u3066\u58f2\u3089\u308c\u3066\u3044\u305f\u304c\u3001\u30b9\u30fc\u30d1\u30fc\u30d5\u30a1\u30df\u30b3\u30f3\u306f\u5f53\u6642\u3068\u3057\u3066\u306f\u975e\u5e38\u306b\u5148\u7aef\u7684\u3067\u3042\u308a\u3001\u30b2\u30fc\u30e0\u306e\u30ab\u30fc\u30c8\u30ea\u30c3\u30b8\u306b\u306f\u30b2\u30fc\u30e0\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u30de\u30b9\u30afROM\u3084\u30bb\u30fc\u30d6\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308bSRAM\u304c\u3042\u308a\u3001\u57fa\u672c\u306eSNES\u30b7\u30b9\u30c6\u30e0\u3092\u8ffd\u52a0\u30d7\u30ed\u30bb\u30c3\u30b5\u3067\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3059\u308b\u3082\u306e\u3082\u3042\u3063\u305f\u3002\u3053\u306e\u67d4\u8edf\u306a\u69cb\u9020\u304c\u3001SNES\u306b\u7d20\u6674\u3089\u3057\u3044\u30b2\u30fc\u30e0\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u3089\u305b\u305f\u3002\u300d", "titles": ["\u30b9\u30fc\u30d1\u30fc\u30d5\u30a1\u30df\u30b3\u30f3\u306e\u30ab\u30fc\u30c8\u30ea\u30c3\u30b8\u306f\u4e00\u4f53\u4f55\u3092\u3057\u3066\u3044\u305f\u306e\u304b\uff1f", "\u30b9\u30fc\u30d1\u30fc\u30d5\u30a1\u30df\u30b3\u30f3\u306e\u30ab\u30fc\u30c8\u30ea\u30c3\u30b8\u304c\u3082\u305f\u3089\u3057\u305f\u9769\u65b0\u3068\u306f\uff1f", "\u30b9\u30fc\u30d1\u30fc\u30d5\u30a1\u30df\u30b3\u30f3\u306e\u30d3\u30c7\u30aa\u51fa\u529b\u30b7\u30b9\u30c6\u30e0\u306e\u88cf\u5074\u3092\u63a2\u308b", "90\u5e74\u4ee3\u306e\u30b2\u30fc\u30df\u30f3\u30b0\u30ef\u30fc\u30eb\u30c9\uff1aNTSC\u3068SECAM/PAL\u306e\u6642\u4ee3", "SNES\u306e\u67d4\u8edf\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u304c\u3082\u305f\u3089\u3057\u305f\u7d20\u6674\u3089\u3057\u3044\u30b2\u30fc\u30e0\u30e9\u30a4\u30d6\u30e9\u30ea"]}