{"pubDate": "2024-03-03T18:00:45", "original_title": "Bring Linux To CH32V003 Through, Yes, RISC-V Emulation", "link": "https://hackaday.com/2024/03/03/bring-linux-to-ch32v003-through-yes-risc-v-emulation/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/02/hadimg_ch23v003_linux_feat.jpg", "original_content": "Like playing around with Linux on low-power devices? Youd be hard pressed to find a better example than the [tvlad1234]s linux-ch32v003 project. Its not just a one-off  its something you could build right now, since it requires hardly any extra parts.\nWith help of a 8 MB PSRAM chip for RAM supplementation purposes and an SD card, plus some careful tailoring of the Linux .config parameters, you get Linux on a chip never meant to even come close to handling this much power. The five minutes it takes to boot up to a prompt is part of the experience.\nAs usual with [tvlad1234]s projects, theres a fun twist to it! Running Linux on this chip is only possible thanks to [chlohr]s mini-rv32ima project, which, as you might remember, is a RISC-V emulator. Yes, this runs Linux by running a RISC-V emulator on a RISC-V chip. The main reason for that is because the MCU cant map the PSRAM chip into RAM, but if you use an emulator, memory mapping is only a matter of software. Having applied a fair amount of elbow grease, [tvlad1234] brings us buildroot and mainline Linux kernel configs you can compile to play with this  as well as a single-layer-ready KiCad board project on GitHub. Yep, you could literally etch a PCB for this project from single-sided copper-clad FR4 with a bit of FeCl3.\nWhile the CH32V003 is undoubtedly a more impressive target for Linux, the RP2040 Linux project might be more approachable in terms of having most of the parts in your parts box. At least, up until we start valuing the CH32V003 for all the cool stuff it can do!", "title": "Linux-ch32v003\u30d7\u30ed\u30b8\u30a7\u30af\u30c8: 8MB PSRAM\u30c1\u30c3\u30d7\u3092\u4f7f\u7528\u3057\u3066Linux\u3092\u30c1\u30c3\u30d7\u4e0a\u3067\u5b9f\u884c", "body": "Linux\u3092\u4f4e\u6d88\u8cbb\u96fb\u529b\u30c7\u30d0\u30a4\u30b9\u3067\u8a66\u3059\u3053\u3068\u306f\u597d\u304d\u3067\u3059\u304b\uff1f[tvlad1234]\u306elinux-ch32v003\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u6700\u9069\u3067\u3059\u30028 MB\u306ePSRAM\u30c1\u30c3\u30d7\u3084SD\u30ab\u30fc\u30c9\u3092\u4f7f\u3044Linux\u3092\u52d5\u304b\u3059\u3053\u3068\u304c\u53ef\u80fd\u306b\u3002CH32V003\u5411\u3051\u306e\u30d3\u30eb\u30c9\u30eb\u30fc\u30c8\u3068\u30e1\u30a4\u30f3\u30e9\u30a4\u30f3Linux\u30ab\u30fc\u30cd\u30eb\u8a2d\u5b9a\u3082\u63d0\u4f9b\u3002", "titles": ["Linux-ch32v003\u30d7\u30ed\u30b8\u30a7\u30af\u30c8: 8MB PSRAM\u30c1\u30c3\u30d7\u3092\u4f7f\u7528\u3057\u3066Linux\u3092\u30c1\u30c3\u30d7\u4e0a\u3067\u5b9f\u884c", "CH32V003\u30c1\u30c3\u30d7\u306bLinux\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u65b9\u6cd5", "RISC-V\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u305fLinux\u30c1\u30c3\u30d7\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "\u30b7\u30f3\u30b0\u30eb\u30b5\u30a4\u30c9\u57fa\u677f\u3067\u5b9f\u88c5\u53ef\u80fd\u306aLinux\u30c1\u30c3\u30d7\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "RP2040 Linux\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068CH32V003\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u6bd4\u8f03"]}