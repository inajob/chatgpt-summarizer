{"pubDate": "2025-08-29T05:00:53", "original_title": "Why Super Mario 64 Wastes So Much Memory", "link": "https://hackaday.com/2025/08/28/why-super-mario-64-wastes-so-much-memory/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/08/mario64-featured.jpg", "youtube": "https://www.youtube.com/watch?v=oZcbgNdWL7w", "original_content": "The Nintendo 64 was an amazing video game console, and alongside consoles like the Sony PlayStation, helped herald in the era of 3D games. That said, it was new hardware, with new development tools, and thus creating those early N64 games was a daunting task.In an in-depth review of Super Mario 64s\u00a0code, [Kaze Emanuar] goes over the curious and wasteful memory usage, mostly due to unused memory map sections, unoptimized math look-up tables and greedy asset loading.\nThe game as delivered in the Japanese and North-American markets also seems to have been a debug build, with unneeded code everywhere. That said, within the context of the three-year development cycle, its not bad at all  with twenty months spent by seven programmers on actual development for a system whose hardware and tooling were still being finalized, with few examples available of how to do aspects like level management, a virtual camera, etc. Over the years [Kaze] has probably spent more time combing over SM64s code than the original developers, as evidenced by his other videos.\nAs noted in the video, later N64 games like Legend of Zelda: Ocarina of Time are massively more optimized and streamlined, as lessons were learned and tooling improved. For the SM64 developers, however, they had a gargantuan 4 MB of fast RDRAM to work with, so optimization and memory management likely got kicked down to the bottom on the priority list. Considering the absolute smash hit that SM64 became, it seems that these priorities were indeed correct.\n\n"}