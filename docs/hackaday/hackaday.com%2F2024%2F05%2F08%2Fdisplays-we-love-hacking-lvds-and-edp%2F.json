{"pubDate": "2024-05-08T17:00:48", "original_title": "Displays We Love Hacking: LVDS and eDP", "link": "https://hackaday.com/2024/05/08/displays-we-love-hacking-lvds-and-edp/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/05/lcd_lennart_tangle.jpg", "original_content": "There are times when tiny displays no longer cut it. Whether you want to build a tablet or reuse some laptop displays, you will eventually deal with LVDS and eDP displays. To be more exact, these are displays that want you to use either LVDS or eDP signaling to send a picture.\nOf the two, LVDS is the older standard for connecting displays, and eDP is the newer one. In fact, eDP has mostly replaced LVDS for things like laptop and tablet displays. Nevertheless, you will still encounter both of these in the wild, so lets start with LVDS.\nThe name LVDS actually comes from the LVDS signaling standard, which is a fairly generic data transfer standard over differential pairs, just like RS485. Using LVDS signaling for embedded display purposes is covered by a separate standard called FPD-Link, and when people say LVDS, what theyre actually talking about is FPD-Link. In this article, I will also use LVDS while actually talking about FPD-Link. Barely anyone uses FPD-Link except some datasheets, and Ill use LVDS because thats what people actually use. Its just that you deserve to know the distinction so that youre not confused when someone mentions LVDS when talking about, say, industrial machinery.\n\nBoth LVDS and eDP run at pretty high frequencies  theyre commonly used for color displays with pretty large resolutions, so speed can no longer be a constraint. eDP, as a successor technology, is a fair bit more capable, but LVDS doesnt pull punches either  if you want to make a 1024 x 768 color LCD panel work, you will use LVDS, sometimes parallel RGB  at this point, SPI just wont cut it. Theres a lot of overlap  and thats because LVDS is basically parallel RGB, but serialized and put onto diffpairs. Let me show you how that happened, and why its cool.\n\nParallel RGB In A Trenchcoat\nLVDS is simple enough  for a 1024 x7 68 panel, you have either three or four data diffpairs, and one clock diffpair. Comparing it to parallel RGB, thats 4-5 diffpairs (8-10 wires) instead of 18-27 single-ended wires, which greatly reduces the amount of cabling, and the differential signals make for way better noise immunity and significantly decreased electromagnetic footprint. Whats not to love?\nIn addition, LVDS is easy to convert to parallel RGB, and vice-versa. This is because LVDS is essentially just a transport for parallel RGB signals. All the things about parallel RGB, like porch rates, still apply  even HSYNC and VSYNC are embedded as separate bits in each packet.\nThe display pixel bytes packed into bits transmitted as a serial stream  you might remember these bits from the parallel RGB article!\nThe diagram shows it better than I could explain in text. For those who cant see the diagram, LVDS carries those same parallel RGB signals, arranged into pseudo-packets  during six periods of the LVDS clock, each diffpair carries one defined bit of a particular pixel. Youd think that transferring a pixel now would take six to eight times as long, but since we have differential pairs, we can increase the frequency six times without consequence!\nOf course, with LVDS making its way, it had to adapt to the manufacturers desire to raise the bar on display resolutions. You could just barely update a 1280 x 1024 display through parallel RGB  but on LVDS, we went up to 1920 x 1080. How? Simple, we put a second LVDS link in parallel, and interlaced the columns theyre responsible for. So, first link would carry pixels for columns 0, 2, 4, 6 etc., and second link would carry pixels for columns 1, 3, 5, 7  sometimes theyre even called odd and even, and sometimes theyre called A and B.\nLets Hack\nThis is what happens if you accidentally swap the odd and even channels on a high-res panel  the vertical lines are swapped.\nIf you want to drive a LVDS display from a laptop or a desktop monitor, eBay and Aliexpress have $20 kits that do everything for you  driving the panel from VGA/DVI/HDMI, powering the backlight, and sometimes even a TV tuner  only give it like 12V of power. Those dont have any jumpers, the resolution is pre-flashed, but if youre stuck with the wrong resolution board, you can likely reflash the firmware, and maybe you can even hack on the controller itself.\nTheres also a cheaper and more flexible but effortful way to drive an LVDS display  one of the MT561 MT6820 driver boards that take VGA and output LVDS. It has about twenty combinations of resolution x LVDS configuration programmed into it that you can toggle with jumpers, and all you might need to do for a laptop or desktop panel is rewire the included LVDS cable according to one of the somewhat-standardized LVDS pinouts. Give it 5 V, take care of the backlight somehow, and youll be golden. For HDMI use, put a $3 HDMI to VGA converter into there, and thatll be all you could need.\nMost panels run at 3.3V  please switch the corresponding jumper on the driver board or youll kill your panel like Ive killed some of mine. Sometimes the EDID is screwy, but nothing that you couldnt fix with a hardcoded one, or by, again, reflashing the firmware. $20 boards are great if all you need is a specific display, but if you have multiple panels you want to play with, having a configurable board like the MT561 is a must.\n\nThe 2 mm pinheader LVDS output connector on these kinds of boards is, funnily enough, non-formally standardized itself  Ive even seen a mass-manufactured display which used this kind of header for its internal panel connection. You can get tons of cables for this 2 mm pin header standard, so if you need an LVDS connector on your project and dont want to bother with cabling, you might just want to use this one  the MXM immobilizer project Ive recently highlighted, has such a header implemented, though its not yet fully tested.\nFor display and laptop panels, the pinouts are also often fairly standardized  heres an assortment of common LVDS pinouts that Ive compiled. In more embedded displays, LVDS will often be on FPCs  theres a few common pinouts for these as well, and therefore a few adapter boards and cables from the 2 mm standard LVDS header to an FFC connector, often with backlight drivers for the kinds of displays that need them. If your LVDS display doesnt have a known pinout but you can probe it in a running system, you can try and short out pins to figure out which pairs correspond to which parallel RGB signals. Of course, probing it with a scope will also work, as long as your scope is fast enough.\nAn LVDS link reverse-engineering example from a pretty impressive Hackaday.io project  and, weve got more!\nMany SBCs, FPGAs and even industrial motherboards have LVDS outputs. If parallel RGB is what you have, you can always convert parallel RGB to LVDS, and back if you ever need to  this is how people have made LVDS HATs for a Raspberry Pi, including the one that I recently gave design review to; that ones open-source and were currently doing bringup on it, check it out! Ive seen pricey chips from Texas Instruments like SN74LVDS84A and SN65LVDS93A and theres got to be cheaper ones, I dont know part numbers because I havent had to look into it, but I trust that you can find them, and please do share them when you do!\nTransition To Greatness\nAs you might notice, LVDS has problems. For tomorrows devices, LVDS is pretty limited tech shoved into a diffpair trenchcoat, and while it worked for decades, at some point the problems became too much. For instance, if youve wired a LVDS display up and found the colors to be wildly off, youll discover that theres at least two ways to put RGB bits into a LVDS link for the same configuration, and it might be that your display expects a different one than your transmitter. Also, LVDS doesnt have any mechanism for discovering the panels parameters  EDID can be used for LVDS panels, but is not required by any means and is hardly ever used in reality. Lack of link training means that running a LVDS link at higher speeds quickly becomes tricky. Last but not least, high resolutions of today require a lot of diffpairs.\nAt some point, we had to let LVDS go, and for most purposes where LVDS used to reign supreme, embedded DisplayPort (dDP) took hold. In laptop space, this happened about 2012-2014, with many laptops gradually switching from LVDS to eDP and some having connectors for both. eDP is a version of DisplayPort designed to be the successor for LVDS, which brings a good number of advantages by rethinking the way we send data to displays. It matters that you know about LVDS because you still might encounter it today, but for todays purposes, eDP is where its at.\n\nWhat LVDS needs ten diffpairs for, eDP can achieve with three  in fact, an eDP connection for an average 720P panel only needs two diffpairs (AUX and L0), where LVDS needs four-five. This comes at a cost of increasing layout requirements, but modern PCB technologies, connectors and wiring dont struggle with that. eDP has a sideband channel for automatic discovery of displays, link training, and display parameter adjustments  which helps make it all that more flexible. For many purposes, eDP is indistinguishable from desktop DisplayPort, which makes it easy to find  if your system has a DisplayPort connection, it can drive an eDP panel. Lets go through what makes eDP great and how it achieves that greatness.\nIve talked about DisplayPort extensively in an introduction article, but Ill recap. DP (and, subsequently, eDP) uses packets to transfer pixels data, as opposed to every widely available video interface before it (yes, even HDMI), and the packets help rid of a lot of cruft. It also removes a few base DisplayPort requirements to make eDP more embedded-friendly  for instance, better support for 1-lane and 2-lane links as opposed to mandatory 4-lane connections, as well as dropping the requirement the audio channel. Despite that, eDP is still fundamentally compatible with DisplayPort transmitters  Ive heard of a few cases where there was incompatibility, but it was more of a behaviour of a specific panel kind of thing.\nWith DisplayPort, you can achieve way faster speeds and get more features while using less diffpairs than LVDS, and its also a reasonably open, straightforward to implement and easy to find standard. Sure, with eDP, the display panels themselves have to be smarter, but thats not much of a tradeoff considering that electronics are getting more and more compact! The advancement of compact microcoax cabling into consumer electronics has also helped  in a typical eDP cable, every wire is a microcoax line that is individually shielded, so the wires dont even have to be twisted or shielded, and theres a ground return channel for every line.\nThe DisplayPort Greatness, Embedded\nNow, about eDP hacking! eDP panel reuse is very similar, except you can also use desktop- and USB-C-obtained DisplayPort links to wire up a panel to your board of choice, and seamless parallel RGB conversion is no longer a thing  you need a controller chip. If you want to convert HDMI or VGA to eDP, theres, again, controller boards, some configurable but most are pre-flashed. As a rule, a HDMI to eDP controller board with 1080p panel firmware will work with all 1080p screens  but Ive encountered exceptions, which are not unlikely to be due to things like inadequate link training. Given how well eDP tends to work outside of these controller boards, I cant help but blame the controller firmware writers on this one  Ive had some controller boards which work wonders with many chips, and other boards which only function for one kind of panel. Again, the firmware is typically (even if not always) on an external SPI-connected flash chip, you can reflash it or hack on it  its all 8051, always has been.\nTheres three common pinouts for eDP panels  its even simpler than LVDS, and that makes it very nice to hack on. One is 30-pin which supports 1- and 2-lane panels, another is 40-pin that simply extends the 30-pin pinout but defines a few pins for touchscreens (I call it touchscreen 40-pin), and another 40-pin pinout that has 4 DisplayPort lanes (high-res 40-pin) which is has a very different pin mapping compared to 30-pin and touchscreen 40-pin. There are FPC adapters on eBay/Aliexpress that extend 30-pin into touchscreen 40-pin and vice-versa, but none that work with high-res 40-pin  beware! Also, my friend once encountered a 30-pin panel in a Wacom tablet that had a fully reversed pinout, pin 1 on pin 30 and so on  shes yet to replace all the burnt parts. However, this is highly unlikely to happen to you with a laptop panel, and a quick multimeter check will help you ensure this isnt the case.\nThe controller boards also bring us somewhat hackable cabling  pass-through FFCs with either a 30-pin or 40-pin IPEX connector on one end, perfectly suited for hacker-friendly eDP use. Theyre not noise-proof in the slightest, but if you want an eDP connector, putting a 30-pin FFC connector on your board is a good substitute in a pinch. If you want a smaller EMC footprint, better noise immunity, or dont want to deal with a flat cable in your build, you can just get a cable thats a microcoax assembly and put the corresponding connector on your board  more expensive, sure, but you can expect it to be reliable and slim.\nThis article is an explainer on LVDS and eDP, but its also a story about how parallel RGB became reborn into LVDS and powered our laptops and desktop monitors for two decades, and when LVDS became too much to bear, eDP took hold. On your journeys, you might encounter both of these, and I hope that now you know about all the options that can help you.\nIf youd like to know more about embedded DisplayPort hacking, Ive done an article about that in the DisplayPort series. And, a new article is incoming, with heaps of examples and references for DisplayPort wireup  stay tuned!\n[Featured image: Colours by Lennart Tange]"}