{"pubDate": "2024-01-17T18:00:05", "original_title": "Linux Fu: Where\u2019s That Darn File?", "link": "https://hackaday.com/2024/01/17/linux-fu-wheres-that-darn-file/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2020/05/LinuxFu.jpg", "original_content": "Disk storage has exploded in the last 40 years. These days, even a terabyte drive is considered small. There is one downside, though. The more stuff you have, the harder it is to find it. Linux provides numerous tools to find files when you cant remember their name. Each has plusses and minuses, and choosing between them is often difficult.\nDefinitions\nDifferent tools work differently to find files. There are several ways you might look for a file:\n\nFind a file if you know its name but not its location.\nFind a file when you know some part of its name.\nFind a file that contains something.\nFind a file with certain attributes (e.g., larger than 100 kB)\n\nYou might combine these, too. For example, it is reasonable to query all PDF files created in the last week that are larger than 100 kB.\nThere are plenty of different types of attributes. Some file systems support tags, too. So, you might have a PERSONAL tag to mark files that apply to you personally. Unfortunately, tool support for tags is somewhat lacking, as youll see later.\nAnother key point is how up-to-date your search results are. If you sift through terabytes of files for each search, that will be slow. If you keep an index, thats fast, but the index will quickly be out of date. Do you periodically refresh the index? Do you watch the entire file system for changes and then update the index? Different tools do it differently.\nFind\nThe most common tool is, in fact, no tool at all. The find command just does what you would do. It does directory listings and searches through them for whatever you want. The most common way to use the command is:\nfind . -name 'hackaday.txt' -print\nYou can probably leave off the -print as thats the default action. However, find can do so many things like filter by dates, attributes, and even execute commands using the file names it finds, which can be dangerous.\nTheres no index to build and store which is nice, but that also means it can be slow. If you do a find / youll get a search across the entire file system. However, find is fast for reasonable directory depths.\nIf you are lazy, you can ask a website to generate your find commands for you. If you want a faster, more modern find, try fd, which is called fd-find on Ubuntu; you execute it with fdfind.\n\n\nLocate/Rlocate/Mlocate/Plocate\nIf you use find a lot on entire filesystems, youll eventually tire of waiting for it to search everywhere. What then? Well, you arent the first one to get tired of it, so back in the dawn of Unix, the locate command appeared. The idea is simple: Periodically the updatedb command builds at least one index file then locate searches that index. You can create multiple indices, say one for user files, one for system files, or maybe one for a network drive produced on the network drives local machine.\nThere have been many improved versions of locate, although the latest appears to be plocate. If you want to use locate, you should probably use this version, which is very similar to the original. There are options to search without case comparison, for example. You can use regular expressions, limit the search to the file name (and not the path), and control the output format to some extent.\nNo matter what version you use, you should look at /etc/updatedb.conf and try to control the indexing process. For example, you might not want to index remote filesystems. Dropping the index for transient files like browser caches is also good.\nOf course, locate and its sister commands can only find what youve indexed. If you index once a month, you will have trouble finding recent files. Of course, you can reissue the index command manually, but still. In addition, locate doesnt look inside your files or help you with attribute searches.\nThere was a time when nearly every Linux system had some form of locate preinstalled. These days, many distros make you install it manually and have a GUI-based search as the default. If you want to use a GUI with locate-like tools, there are a few options. Krusader, one of the KDE file managers, can perform locate searches. There is also catfish. However, the GUIs often cant handle all the options that locate provides.\nBaloo\nIf you use KDE, then you certainly have seen Baloo. This is the default KDE file indexer. It is very powerful but also very intrusive. Early versions were infamous for chewing up huge amounts of resources while indexing large files. Worse, there were few ways to control what it was doing.\nHonestly, I use Baloo, but I have a set of scripts that only allows it to index while my computer is idle and in the wee hours of the morning. Is that still necessary? I dont know. Im afraid to unleash Baloo on my system.\nSo why use Baloo? It integrates perfectly with KDE. It also indexes file system tags and, if you dont turn it off, file contents. It uses KDEs metadata extractors to look inside files like archives, for example.\nYou can use the baloosearch: kio to get a search from many places inside KDE. Normally, you search the Baloo database from Dolphin or KRunner, but there are command line tools, too. The balooctl program gives you some options for working with the database and the daemon. The baloosearch tool lets you find files from the command line. The database can be large, so even a query can take a long time. Remember that Baloo indexes content, so you will sometimes see a result that doesnt appear to match in the file name. That probably means the search string appears in the file. You can see more about what Baloo knows about a file using the balooshow program with the -x option.\nThe query language is very complete. For example, you can search for MP3 files from a particular album or images with a certain aspect ratio. You can also use operators like the less than or greater than sign.\nYou definitely want to configure Baloo. Ive found that any remote file system or loop in the file system will bring it to its knees.\nRecoll\nRecoll is another file searcher that can either update its index periodically or watch the file system constantly. Like baloo, it can decode several file types natively and with external programs. It is actively developed and tries to dig through as much as possible (although indexing inside tar files is off by default).\nAs noted on the programs homepage, Recoll will index an MS Word document stored as an attachment to an e-mail message inside a Thunderbird folder archived in a Zip file. Wow.\n\nOther Programs\nThere are some other search programs that are either obscure or were popular at one time but are less popular today:\n\nTracker and MetaTracker\nBeagle\nSearchMonkey\nAngry Search\nFSearch\n\nOf course, there are doubtless many more. Do you use a program we missed? Let us know in the comments. An example of a remote file system you might to exclude from indexing? Hackaday. Want to build your own system? Be sure you know about incron and the file system watches.", "title": "40\u5e74\u9593\u3067\u30c7\u30a3\u30b9\u30af\u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u7206\u767a\u7684\u306b\u5897\u3048\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u5927\u91cf\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u307b\u3069\u898b\u3064\u3051\u308b\u306e\u304c\u96e3\u3057\u304f\u306a\u308a\u307e\u3059\u3002", "body": "\u30c7\u30a3\u30b9\u30af\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u5bb9\u91cf\u304c40\u5e74\u3067\u7206\u767a\u7684\u306b\u5897\u52a0\u3057\u3066\u3044\u308b\u3002\u3057\u304b\u3057\u3001\u591a\u304f\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3068\u898b\u3064\u3051\u306b\u304f\u304f\u306a\u308b\u3002Linux\u306b\u306f\u3001\u540d\u524d\u3092\u601d\u3044\u51fa\u305b\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u898b\u3064\u3051\u308b\u305f\u3081\u306e\u30c4\u30fc\u30eb\u304c\u3044\u304f\u3064\u304b\u3042\u308b\u3002\u305d\u308c\u305e\u308c\u306b\u5229\u70b9\u3068\u6b20\u70b9\u304c\u3042\u308a\u3001\u9078\u3076\u306e\u306f\u96e3\u3057\u3044\u3002", "titles": ["40\u5e74\u9593\u3067\u30c7\u30a3\u30b9\u30af\u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u7206\u767a\u7684\u306b\u5897\u3048\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u5927\u91cf\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u307b\u3069\u898b\u3064\u3051\u308b\u306e\u304c\u96e3\u3057\u304f\u306a\u308a\u307e\u3059\u3002", "Linux\u306f\u3001\u540d\u524d\u3092\u899a\u3048\u3066\u3044\u308b\u304c\u5834\u6240\u304c\u308f\u304b\u3089\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u898b\u3064\u3051\u308b\u305f\u3081\u306e\u6570\u591a\u304f\u306e\u30c4\u30fc\u30eb\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002", "\u30d5\u30a1\u30a4\u30eb\u3092\u898b\u3064\u3051\u308b\u305f\u3081\u306b\u3042\u3089\u3086\u308b\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002\u540d\u524d\u3092\u77e5\u3063\u3066\u3044\u308b\u5834\u5408\u3001\u90e8\u5206\u7684\u306b\u540d\u524d\u304c\u5206\u304b\u3063\u3066\u3044\u308b\u5834\u5408\u3001\u7279\u5b9a\u306e\u5c5e\u6027\u3092\u6301\u3064\u30d5\u30a1\u30a4\u30eb\u3092\u898b\u3064\u3051\u308b\u65b9\u6cd5\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002", "find\u30b3\u30de\u30f3\u30c9\u3068\u306f\u3001\u30ea\u30b9\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3089\u3092\u691c\u7d22\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3067\u3059\u3002", "locate, rlocate, mlocate, plocate\u306f\u3001\u5b9a\u671f\u7684\u306b\u691c\u7d22\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u3092\u691c\u7d22\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3067\u3059\u3002"]}