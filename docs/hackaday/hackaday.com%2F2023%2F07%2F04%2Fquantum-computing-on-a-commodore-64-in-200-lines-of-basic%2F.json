{"pubDate": "2023-07-04T23:00:12", "original_title": "Quantum Computing on a Commodore 64 in 200 Lines of BASIC", "link": "https://hackaday.com/2023/07/04/quantum-computing-on-a-commodore-64-in-200-lines-of-basic/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/07/quantum_computing_commodore_64.jpeg", "original_content": "The term quantum computer gets usually tossed around in the context of hyper-advanced, state-of-the-art computing devices, but much as how a 19th century mechanical computer, a discrete computer created from individual transistors, and a human being are all computers, the important quantifier is how fast and accurate the system is at the task, whether classical or quantum computing. This is demonstrated succinctly by [Davide dakk Gessa] with 200 lines of BASIC code on a Commodore 64 (GitHub), implementing a range of quantum gates.\nMuch like a transistor in classical computing, the qubit forms the core of quantum computing, and we have known for a long time that a qubit can be simulated, even on something as mundane as an 8-bit MPU. Ergo [Davide]s simulations of various quantum gates on a C64, ranging from Pauli-X, Pauli-Y, Pauli-Z, Hadamard, CNOT and SWAP, all using a two-qubit system running on a system that first saw the light of day in the early 1980s.\nNaturally, the practical use of simulating a two-qubit system on a general-purpose MPU running at a blistering ~1 MHz is quite limited, but as a teaching tool its incredibly accessible and a fun way to introduce people to the world of quantum computing.", "title": "\u300c\u30b3\u30e2\u30c9\u30fc\u30eb64\u4e0a\u3067\u91cf\u5b50\u30b2\u30fc\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u697d\u3057\u3044\u65b9\u6cd5\u300d", "body": "\u300cDavide dakk Gessa\u300d\u306f\u3001Commodore 64\u4e0a\u3067200\u884c\u306eBASIC\u30b3\u30fc\u30c9\u3067\u91cf\u5b50\u30b2\u30fc\u30c8\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3044\u3001\u53e4\u3044\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067\u3082\u91cf\u5b50\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u304c\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u8a3c\u660e\u3057\u307e\u3057\u305f\u3002\u305d\u306e\u5b9f\u7528\u6027\u306f\u9650\u3089\u308c\u307e\u3059\u304c\u3001\u91cf\u5b50\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u4e16\u754c\u306b\u8208\u5473\u3092\u6301\u3064\u4eba\u3005\u306b\u306f\u6559\u80b2\u30c4\u30fc\u30eb\u3068\u3057\u3066\u697d\u3057\u3044\u3082\u306e\u3067\u3059\u3002", "titles": ["\u300c\u30b3\u30e2\u30c9\u30fc\u30eb64\u4e0a\u3067\u91cf\u5b50\u30b2\u30fc\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u697d\u3057\u3044\u65b9\u6cd5\u300d", "\u300c8\u30d3\u30c3\u30c8\u30de\u30a4\u30af\u30ed\u30d7\u30ed\u30bb\u30c3\u30b5\u3067\u91cf\u5b50\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u300d", "\u300cQuantum\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u3078\u306e\u5165\u9580\u306b\u6700\u9069\u306a\u30c6\u30a3\u30fc\u30c1\u30f3\u30b0\u30c4\u30fc\u30eb\u300d", "\u300c\u91cf\u5b50\u30b2\u30fc\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306e200\u884c\u306eBASIC\u30b3\u30fc\u30c9\u300d", "\u300c1980\u5e74\u4ee3\u306e\u30de\u30a4\u30af\u30ed\u30d7\u30ed\u30bb\u30c3\u30b5\u3067\u91cf\u5b50\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3092\u518d\u73fe\u3059\u308b\u300d"]}