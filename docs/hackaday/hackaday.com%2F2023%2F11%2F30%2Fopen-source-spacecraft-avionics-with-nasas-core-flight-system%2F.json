{"pubDate": "2023-11-30T09:00:07", "original_title": "Open Source Spacecraft Avionics With NASA\u2019s Core Flight System", "link": "https://hackaday.com/2023/11/30/open-source-spacecraft-avionics-with-nasas-core-flight-system/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/11/cfs_software_layers_and_components_nasa.jpg", "original_content": "One thing about developing satellites, spacecraft, rovers and kin is that they have a big overlap in terms of functionality. From communication, to handling sensors, propulsion, managing data storage, task scheduling and so on, the teams over at NASA have found over the years that with each project there was a lot of repetition.\nBlock diagram of a simplified avionics system. (Credit: NASA)\nEither they were either copy-pasting code from old projects, or multiple teams were essentially writing the same code.\nTo resolve this inefficiency NASA developed the Core Flight System (cFS), a common software framework for spacecraft, based on code and lessons from various space missions. The framework, which the space agency has released under the Apache license, consists of an operating system abstraction layer (OSAL), the underlying OS (VxWorks, FreeRTOS, RTEMS, POSIX, etc.), and the applications that run on top of the OSAL alongside the Core Flight Executive (cFE) component. Here cFS apps can be loaded and unloaded dynamically, along with cFS libraries, as cFS supports both static and dynamic linking.\nThere are a few sample applications to get started with, and documentation is available, should you wish to use cFS for your own projects. Admittedly, its a more complex framework than youd need for a backyard rover. But who knows? As access to space gets cheaper and cheaper, you might actually get the chance to put together a DIY CubeSat someday  might as well start practicing now."}