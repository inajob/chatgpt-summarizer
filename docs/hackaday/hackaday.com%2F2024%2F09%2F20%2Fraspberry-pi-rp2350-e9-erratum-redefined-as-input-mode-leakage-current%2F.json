{"pubDate": "2024-09-20T20:00:43", "original_title": "Raspberry Pi RP2350-E9 Erratum Redefined as Input Mode Leakage Current", "link": "https://hackaday.com/2024/09/20/raspberry-pi-rp2350-e9-erratum-redefined-as-input-mode-leakage-current/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/09/rp2350.jpg", "original_content": "Although initially defined as an issue with GPIO inputs when configured with the internal pull-downs enabled, erratum RP2350-E9 has recently been redefined in the datasheet (page 1341) as a case of increased leakage current. As it is now understood since we previously reported, the issue occurs when a GPIO (0  47) is configured as input, the input buffer is enabled, and the pad voltage is somewhere between logic LOW and HIGH. In that case leakage current can be as high as 120 \u00b5A with IOVDD = 3.3 V. This leakage current is too much for the internal pull-up to overcome, ergo the need for an external pull-down: 8.2 k\u03a9 or less, per the erratum. Disabling the input buffer will stop the leakage current, but reading the input requires re-enabling the buffer.\nGPIO Pad leakage for IOVDD=3.3 V (Credit: Raspberry Pi)\nThe upshot of this issue is that for input applications, the internal pull-downs are useless, and since PIO applications cannot toggle pad controls, the input buffer toggling workaround is not an option. ADC usage requires one to clear the GPIO input enable. In general any circuit that relies on floating pins or an internal pull-down resistor will be affected.\nAlthough this should mean that the affected A2 stepping of the RP2350 MCU can still be used for applications where this is not an issue, and external pull-downs can be used as a fix at the cost of extra power usage, it makes what should have been a drop-in replacement a troubled chip at best. At this point there have still been no definite statements from Raspberry Pi regarding a new (B0) stepping, leaving RP MCU users with the choice between the less flashy RP2040 and the buggy RP2350 for the foreseeable future.\nHeader: Thomas Amberg, CC BY-SA 2.0.", "title": "RP2350-E9\u30a8\u30e9\u30fc\u30bf\u30e0\u306e\u554f\u984c\u3068\u5bfe\u7b56", "body": "GPIO\u5165\u529b\u306b\u95a2\u3059\u308b\u554f\u984c\u3060\u3063\u305f\u304c\u3001RP2350-E9\u306e\u8aa4\u308a\u306f\u6700\u8fd1\u30ea\u30fc\u30af\u96fb\u6d41\u5897\u52a0\u3068\u518d\u5b9a\u7fa9\u3055\u308c\u305f\u3002\u5165\u529b\u30d0\u30c3\u30d5\u30a1\u3092\u7121\u52b9\u306b\u3059\u308c\u3070\u30ea\u30fc\u30af\u96fb\u6d41\u306f\u505c\u6b62\u3059\u308b\u304c\u3001\u5165\u529b\u3092\u8aad\u3080\u305f\u3081\u306b\u30d0\u30c3\u30d5\u30a1\u3092\u518d\u6709\u52b9\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002RP2350 MCU\u306e\u6539\u5584\u306f\u672a\u5b9a\u3002", "titles": ["RP2350-E9\u30a8\u30e9\u30fc\u30bf\u30e0\u306e\u554f\u984c\u3068\u5bfe\u7b56", "GPIO\u30d1\u30c3\u30c9\u306e\u6f0f\u308c\u96fb\u6d41\u3068\u305d\u306e\u5f71\u97ff", "RP2350 MCU\u306e\u5185\u90e8\u30d7\u30eb\u30c0\u30a6\u30f3\u306e\u7121\u7528\u6027", "\u5916\u90e8\u30d7\u30eb\u30c0\u30a6\u30f3\u62b5\u6297\u306e\u8ffd\u52a0\u3068\u6d88\u8cbb\u96fb\u529b", "Raspberry Pi MCU\u30e6\u30fc\u30b6\u30fc\u306e\u9078\u629e\u80a2\uff1aRP2040\u3068RP2350"]}