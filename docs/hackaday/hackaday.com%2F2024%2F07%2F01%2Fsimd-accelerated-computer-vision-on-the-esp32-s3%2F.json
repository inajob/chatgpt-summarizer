{"pubDate": "2024-07-02T02:00:52", "original_title": "SIMD-Accelerated Computer Vision on the ESP32-S3", "link": "https://hackaday.com/2024/07/01/simd-accelerated-computer-vision-on-the-esp32-s3/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/07/esp32-s3-devkitc-1-v1.1-isometric.png", "original_content": "One of the fun parts of the ESP32-S3 microcontroller is that it got upgraded to the newer Cadence Xtensa LX7 processor core, which turns out to have a range of SIMD instructions that can help to significantly speed up a range of tasks.\u00a0[Shranav Palakurthi] recently used this to speed up the processing of video frames to detect corners using the FAST method. By moving some operations that benefit from SIMD over to an optimized version written in LX7 ASM, the algorithms throughput was increased by 220%, from 5.1 MP/s to 11.2 MP/s, albeit with some caveats.\nThe problem with the SIMD instructions in the LX7 other than them being very poorly documented  unless you sign an NDA with Cadence \u00a0 is that it misses many instructions that would be really useful. For [Shranav] the lack of support for direct misaligned reads and comparing of unsigned 8-bit numbers were hurdles, but could be worked around, with the results available on GitHub.\nMuch of the groundwork for this SIMD implementation was laid by [Larry Bank], who reverse-engineered the SIMD instructions from available documentation and code samples, finding that the ESP32-S3 misses quite a few common SIMD instructions, including various shifts and unaligned reads and writes. Still, its good enough for quite a few tasks, as long as you can make it work with the available instructions.", "title": "ESP32-S3\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u65b0\u3057\u3044Cadence Xtensa LX7\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u30b3\u30a2\u306b\u3088\u308b\u9ad8\u901f\u51e6\u7406", "body": "ESP32-S3\u306e\u9762\u767d\u3044\u70b9\u306f\u3001\u65b0\u3057\u3044Cadence Xtensa LX7\u30d7\u30ed\u30bb\u30c3\u30b5\u30b3\u30a2\u306b\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3055\u308c\u305f\u3053\u3068\u3002SIMD\u547d\u4ee4\u306e\u4f7f\u7528\u306b\u3088\u308a\u3001\u30d3\u30c7\u30aa\u30d5\u30ec\u30fc\u30e0\u51e6\u7406\u306e\u30b9\u30d4\u30fc\u30c9\u304c220%\u5411\u4e0a\u3057\u3001\u51e6\u7406\u304c\u9ad8\u901f\u5316\u3002\u3057\u304b\u3057\u306a\u304c\u3089\u3001LX7\u306eSIMD\u547d\u4ee4\u306f\u5341\u5206\u306b\u6587\u66f8\u5316\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u7279\u5b9a\u306e\u6a5f\u80fd\u304c\u4e0d\u8db3\u3057\u3066\u3044\u308b\u3002", "titles": ["ESP32-S3\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u65b0\u3057\u3044Cadence Xtensa LX7\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u30b3\u30a2\u306b\u3088\u308b\u9ad8\u901f\u51e6\u7406", "SIMD\u547d\u4ee4\u3092\u6d3b\u7528\u3057\u3066\u6620\u50cf\u30d5\u30ec\u30fc\u30e0\u306e\u51e6\u7406\u901f\u5ea6\u3092\u5411\u4e0a\u3055\u305b\u308b\u65b9\u6cd5", "LX7 ASM\u3092\u5229\u7528\u3057\u3066\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u51e6\u7406\u901f\u5ea6\u3092220%\u5411\u4e0a\u3055\u305b\u308b", "LX7\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306eSIMD\u547d\u4ee4\u306e\u8ab2\u984c\u3068\u5bfe\u7b56", "ESP32-S3\u306eSIMD\u5b9f\u88c5\u306b\u304a\u3051\u308b\u8ab2\u984c\u3068\u6709\u7528\u6027"]}