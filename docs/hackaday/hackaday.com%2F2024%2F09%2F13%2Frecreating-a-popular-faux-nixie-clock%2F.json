{"pubDate": "2024-09-13T15:30:20", "original_title": "Recreating a Popular Faux-Nixie Clock", "link": "https://hackaday.com/2024/09/13/recreating-a-popular-faux-nixie-clock/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/09/ipsclock_feat.jpg", "original_content": "Theres a good chance youve seen Nixie clocks on the Internet that replace the classic cold cathode tubes with similarly sized LCD panels. The hook is that the LCDs can show pictures and animations of Nixie tubes  or pretty much anything else for that matter  to recreate the look of the real thing, while being far cheaper and easier to produce. Its a hack for sure, and thats the way we like it.\n[Trung Tran] liked the idea, but didnt just want to buy a turn-key clock. So hes decided to build his own version based on the ESP32-S3. The WiFi-enabled microcontroller syncs up to the latest time via NTP, then uses a PCF8563 real-time clock (RTC) module to keep from drifting too far off the mark. The six displays, which plug into the custom PCB backplane, can then show the appropriate digits for the time. Since theyre showing image files, you can use any sort of font or style you wish. Or you could show something else entirely  the demo video below shows off each panel running the Matrix digital rain effect.\n\n\nUnfortunately, [Trung Tran] hasnt shared a whole lot of technical info about this project yet. But between the Open Source Hardware logo on the PCB, and the fact that project page says Part 1 at the top, were hopeful that more information is forthcoming.\nWe first saw the commercial version of this concept back in 2021, and had to admit, it was a pretty cool idea. Its good to see the community creating their own versions, and if they end up being open hardware so that others can reproduce and improve the design, even better.", "title": "Nixie\u30c1\u30e5\u30fc\u30d6\u98a8\u306e\u6642\u8a08DIY\uff1aESP32-S3\u3092\u4f7f\u7528\u3057\u305f\u88fd\u4f5c\u65b9\u6cd5", "body": "\u30cd\u30c3\u30c8\u3067\u4eba\u6c17\u306e\u30cb\u30af\u30b7\u30fc\u30af\u30ed\u30c3\u30af\u3092\u81ea\u4f5c\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u8a71\u984c\u3002ESP32-S3\u3092\u4f7f\u3044\u3001NTP\u3067\u6642\u523b\u540c\u671f\u3001PCF8563 RTC\u3067\u5236\u5fa1\u30026\u3064\u306e\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3067\u306f\u6642\u523b\u3092\u8868\u793a\u3002\u30d5\u30a9\u30f3\u30c8\u3084\u30b9\u30bf\u30a4\u30eb\u3082\u81ea\u7531\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u53ef\u3002\u30aa\u30fc\u30d7\u30f3\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306b\u671f\u5f85\u3002", "titles": ["Nixie\u30c1\u30e5\u30fc\u30d6\u98a8\u306e\u6642\u8a08DIY\uff1aESP32-S3\u3092\u4f7f\u7528\u3057\u305f\u88fd\u4f5c\u65b9\u6cd5", "ESP32-S3\u3092\u6d3b\u7528\u3057\u305fNixie\u98a8\u30af\u30ed\u30c3\u30af\u306e\u4f5c\u6210\u624b\u9806", "Nixie\u98a8\u30af\u30ed\u30c3\u30afDIY\uff1aESP32-S3\u3068PCF8563 RTC\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b", "Nixie\u98a8\u30af\u30ed\u30c3\u30af\u306eESP32-S3\u81ea\u4f5c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "DIY\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\uff1aESP32-S3\u3092\u4f7f\u3063\u305fNixie\u98a8\u30af\u30ed\u30c3\u30af"]}