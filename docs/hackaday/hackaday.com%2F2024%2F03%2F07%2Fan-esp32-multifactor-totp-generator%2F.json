{"pubDate": "2024-03-07T21:00:14", "original_title": "An ESP32 MultiFactor TOTP Generator", "link": "https://hackaday.com/2024/03/07/an-esp32-multifactor-totp-generator/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/03/309566735-4323be9d-6abe-4873-81f7-417203a3e340-featured.png", "original_content": "MFA, or multifactor authentication, is a standard security feature these days. However, it can be a drag to constantly reach into ones pocket, scroll to Google Authenticator (other MFA applications are available!), and find the correct TOTP code to log in to a site for a short while. [Allan Oricil] felt this pain point, so they took the problem by the horns and created a desktop MFA TOTP generator to make life just that little bit easier.\nTOTP, which stands for Time-based One-Time Password, is a security measure that uses a device or application to provide unique codes that expire after a short time. Two-factor authentication requires a physical item (something you have), such as a key or swipe card, and knowledge of a fact (something you know), like a password, rather than relying on a single factor. This approach ensures a higher level of security. [Allan]s project is a physical thing one would use with a password or key file.\n\nUtilising the snappily titled Sunton ESP32-2432S028 EVB, based around the Espressif ESP32-WROVER-32 module and a generic touch screen, the neat little package is intended for custom IoT projects. However, we can use it for practically anything. The project uses the PlatformIO infrastructure and associated plugins for VSCode, which are a winning combination if you ask us. The service details and associated secret strings are stored as plain text files on an SD card, so moving from one physical device to another and adding new services is simple. If youre wondering why a physical device needs a Wi-Fi connection, this is to sync the RTC (the local measure of time for that TOTP) with a downstream NTP server. If you dont do this, you quickly get out of sync with your target services, and your codes could expire prematurely or even fail outright.\nIf you want to read more, see our guide to Two-Factor Authentication. Regarding hardware implementations, heres a sweet macropad-based solution, and a tiny one using a BadUSB for good.", "title": "\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u7528MFA TOTP\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u4f5c\u6210\u65b9\u6cd5", "body": "MFA\u306f\u6a19\u6e96\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6a5f\u80fd\u3060\u304c\u3001Google Authenticator\u3067TOTP\u30b3\u30fc\u30c9\u3092\u63a2\u3059\u624b\u9593\u304c\u304b\u304b\u308b\u3002[Allan Oricil]\u306f\u624b\u9593\u3092\u611f\u3058\u3001\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u7528MFA TOTP\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u3092\u4f5c\u6210\u3057\u3001IoT\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u7528\u53ef\u80fd\u306aESP32\u30c7\u30d0\u30a4\u30b9\u3092\u6d3b\u7528\u3057\u3066\u3044\u308b\u3002", "titles": ["\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u7528MFA TOTP\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u4f5c\u6210\u65b9\u6cd5", "ESP32\u3092\u5229\u7528\u3057\u305f\u30ab\u30b9\u30bf\u30e0IoT\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3078\u306e\u6d3b\u7528", "\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0IO\u3068VSCode\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5229\u7528\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u69cb\u7bc9", "\u7269\u7406\u30c7\u30d0\u30a4\u30b9\u306bWi-Fi\u63a5\u7d9a\u304c\u5fc5\u8981\u306a\u7406\u7531\u3068\u305d\u306e\u5f79\u5272", "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u5b9f\u88c5\u306b\u304a\u3051\u308b\u4e8c\u8981\u7d20\u8a8d\u8a3c\u306e\u89e3\u8aac"]}