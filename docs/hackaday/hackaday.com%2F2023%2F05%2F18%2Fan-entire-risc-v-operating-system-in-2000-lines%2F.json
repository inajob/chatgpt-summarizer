{"pubDate": "2023-05-19T02:00:05", "original_title": "An Entire RISC-V Operating System in 2000 Lines", "link": "https://hackaday.com/2023/05/18/an-entire-risc-v-operating-system-in-2000-lines/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/05/egos-2000-main.jpg", "original_content": "While Microsoft and Apple dont release the source code for their operating systems, a good estimate is that it takes around 50 million lines of code to run these software behemoths. The Linux kernel alone holds around 30 million lines, with systemd containing over one million lines on its own, which doesnt include estimates for the desktop environment or other parts of a standard installation. But millions of lines of code, or even hundreds of thousands, arent necessary for building a fully functioning operating system. This one sets up a complete OS in exactly 2000 lines of code.\nCalled egos-2000, short for Earth and Grass Operating System, the diminutive operating system is written for RISC-V computers and while it does contain most of the tools we would recognize in an OS, it was built specifically for computer science students by PhD candidate Yunhao Zhang. The slimmed-down operating system makes it possible for students to easily read and understand every feature of an operating system without it becoming too overwhelming, and can be easily used and modified to experiment with. The name itself comes from its design principles, where parts of the operating system that interact with hardware directly are part of the Earth layer and parts that dont depend on hardware being placed in the Grass layer, with applications taking up a third layer.\nThe OS is available on this GitHub page under an MIT license and works on real RISC-V hardware as well as within various emulators. Building a complete operating system in so few lines of code is an impressive feat, and making it comprehensive enough to teach students with goes well beyond that accomplishment as well. Often when concepts in computer science are reduced to their bare minimum components, we end up with completely illegible (but interesting) experiments like this programming language instead."}