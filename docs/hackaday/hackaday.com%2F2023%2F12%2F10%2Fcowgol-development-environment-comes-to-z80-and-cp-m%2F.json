{"pubDate": "2023-12-11T06:00:34", "original_title": "Cowgol Development Environment Comes to Z80 and CP/M", "link": "https://hackaday.com/2023/12/10/cowgol-development-environment-comes-to-z80-and-cp-m/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2015/01/retro1.jpg", "original_content": "Cowgol on Z80 running CP/M ties together everything needed to provide a Cowgol development environment (including C and assembler) on a Z80 running the CP/M operating system, making it easier to get up and running with a language aimed to be small, bootstrapped, and modern.\nCowgol is an experimental modern language for (very) small systems.\nThe Zilog Z80 was an 8-bit microprocessor common in embedded systems of the 1970s and 1980s, and CP/M was a contemporary mass-market operating system. As for Cowgol? Its an Ada-inspired compiler toolchain and programming language aimed at very small systems, such as the Z80.\nWhats different about Cowgol is that it is intended to be self-hosted on these small systems; Cowgol is written in itself, and is able to compile itself. Once one has compiled the compiler for a particular target architecture (for example, the Z80) one could then use that compiler on the target system to compile and run programs for itself.\nThankfully, theres no need to start from scratch. The Cowgol on Z80 running CP/M repository (see the first link of this post) contains the pre-compiled binaries and guidance on using them.\nCowgol is still under development, but it works. It is a modern language well-suited to (very) small systems, and thanks to this project, getting it up and running on a Z80 running CP/M is about as easy as such things can get.\nThanks to [feinfinger] for the tip!"}