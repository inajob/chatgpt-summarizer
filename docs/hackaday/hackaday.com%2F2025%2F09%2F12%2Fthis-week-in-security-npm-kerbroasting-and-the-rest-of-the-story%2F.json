{"pubDate": "2025-09-12T14:00:13", "original_title": "This Week in Security: NPM, Kerbroasting, and The Rest of the Story", "link": "https://hackaday.com/2025/09/12/this-week-in-security-npm-kerbroasting-and-the-rest-of-the-story/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/01/darkarts.jpg", "youtube": "https://www.youtube.com/watch?v=by53T03Eeds", "original_content": "Two billion downloads per week. Thats the download totals for the NPM packages compromised in a supply-chain attack this week. Ninety-nine percent of the cloud depends on one of the packages, and one-in-ten cloud environments actually included malicious code as a result of the hack. Take a moment to ponder that. In a rough estimate, ten percent of the Internet was pwned by a single attack.\nWhat extremely sophisticated technique was used to pull off such an attack? A convincing-looking phishing email sent from the newly registered npmjs.help domain. [qix] is the single developer of many of these packages, and in the midst of a stressful week, fell for the scam. We could refer to the obligatory XKCD 2347 here. Its a significant problem with the NPM model that a single developer falling for a phishing email can expose the entire Internet to such risk.\nAnd once that account was compromised, it didnt take long for the mystery attacker to push malicious code. Within an hour, cryptocurrency stealing code was added to two dozen packages. Within a couple hours, the compromise was discovered and the cleanup effort began.\n\nBREAKING\nLARGEST SUPPLY CHAIN ATTACK IN HISTORY PULLS OFF MASSIVE CRYPTO HEIST\nATTACKS STEAL $20.05 OF ETH. ENTIRE WORLD CRUMBLING\n vx-underground (@vxunderground) September 8, 2025\n\nWhile the attack was staggering in its breadth, in the end only a few hundred dollars worth of cryptocurrency was actually stolen as a result. Why was such a successful attack, when measured by deployment, so minimal in actual theft? Two reasons: First, the malware was only live for two hours before takedowns began. And a related second reason, the malicious code was specifically aimed at developer and end-user machines, while the majority of the installs were on servers and cloud deployments, where cryptocurrency transactions werent happening.\nIt brings to mind the question, what could have happened? Instead of looking for cryptocurrency to steal, if the malicious code was tailored to servers and stealth, how long would it have taken to detect? And is there malicious code on NPM and in other places that we just havent discovered yet?\nSAP ERP CVEs\nLets break down this Alphabet soup. SAP is an acronym for Systems, Applications and Products in Data Processing, a German company providing business software. ERP is their Enterprise Resource Planning software, and of course a CVE is a Common Vulnerabilities and Exposure. So to translate the acronyms, SAPs accounting software has vulnerabilities. And in this case, CVE-2025-42944 is a ten out of ten on the CVSS severity scale.\nIn fact, there are four vulnerabilities altogether, all CVSS of nine or higher, and all in the underlying NetWeaver platform. SAP owned up to the problems, commenting that they operated as a backdoor, allowing unauthorized access. Patches are available for all of these issues, but some of them have been found in use in the wild.\nKerbroasting\nYou know its bad when a sitting US Senator can tell that your security has problems. Though before I read the article, I had a feeling it would be [Ron Wyden].\nThe issue here is Microsofts support for RC4 encryption in Active Directory. RC4, also known as ARC4, is a pseudorandom number generator developed at RSA in 1987. This continuing support leads to an attack known as kerberoasting.\nKerberos is one of the protocols that powers Active Directory. It works through a sort of ticket signing system. The server doing the signing takes a hash of a password and uses that hash as an encryption key to encrypt the Kerberos ticket. There are two possible problems. First, that password may be a human generated password, and therefore a weak password. And second, the legacy combination of RC4 and original NT hashing makes for extremely fast offline password guessing.\nSo heres the kerberoasting attack: Take any account in the Active Directory, and request a Kerberos ticket, specifying the legacy RC4 encryption. Take this offline ticket to a modern CPU/GPU, and use Hashcat to crack that password, at a guess rate measured in the billions per second. Once that password is discovered, arbitrary Kerberos tickets can be signed, providing access to basically any account on the AD system.\nThis was part of the 2024 ransomware attack on Ascension health, and why the US senate is taking notice. Whats strange is how resistant Microsoft has been to fixing this issue. Microsoft states that RC4 only makes up .1% of traffic, which is nonsense, since the attack doesnt rely on traffic. Finally in 2026, new installs of Windows server 2025 will disable RC4 by default.\nReverse Engineering and TLS Hacking\nWe get a great primer from [f0rw4rd] on how to defeat TLS certificates, in a very specific scenario. That scenario is reverse engineering an embedded or industrial Linux system. One of the tools you might want to use is to intercept traffic from the embedded system to some web server, but if that system uses HTTPS, it will fail to verify that certificate. What is a researcher to do?\nOne possible solution is to abuse LD_PRELOAD to poison the application. This approach uses dynamic library loading to insert a malicious library before program execution. tls-preloader is a tool to do exactly this, and supports multiple SSL/TLS libraries, allowing sniffing all that useful TLS data.\nThe Rest of the Story\nJust recently we mentioned several 0-day vulnerabilities that were being used for in-the-wild attacks. This week we have updates on a couple of those. First is the iOS and macOS vulnerability in DNG image file processing. The basic issue is that this file type has a TIFF header that includes a SamplesPerPixel metadata, and a SOF3 section with a component count. A properly formatted file will have consistency between these two elements, and the Apple file processing didnt handle such an inconsistency correctly, leading to memory corruption and potentially Remote Code Execution (RCE).\nThe other recent 0-day is a FreePBX flaw that was discovered through the presence of a clean.sh script on multiple FreePBX installs. The flaw was an automatic class loader that allowed an unauthenticated user to include module files when calling the ajax.php endpoint. One way to turn this into an exploit is SQL injection in one of the modules. This is what has been patched, meaning there are likely more exploits to find using this php injection quirk.\nBits and Bytes\nThe Apple CarPlay SDK had a buffer overflow that was reachable by a device connecting to the vulnerable head unit. Researchers from oligo discovered this flaw, and presented it at Def Con this year. The end result is root-level RCE, and while Apple has already published an SDK update, most cars are still vulnerable to this one.\nAnd finally, enjoy [LaurieWired] taking a look at this years International Obfuscated C Code Contest (IOCCC) winners. This contest is all about pushing the limits in how terrifying C code can be, while still compiling and doing something interesting. And these entries dont disappoint.\n", "title": "- \u53f2\u4e0a\u6700\u5927\u306e\u30b5\u30d7\u30e9\u30a4\u30c1\u30a7\u30fc\u30f3\u653b\u6483\u304c\u5f15\u304d\u8d77\u3053\u3057\u305f\u5927\u898f\u6a21\u306a\u6697\u53f7\u8cc7\u7523\u5f37\u596a", "body": "NPM\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30b5\u30d7\u30e9\u30a4\u30c1\u30a7\u30fc\u30f3\u653b\u6483\u3067\u30012\u5104\u56de\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u5f71\u97ff\u3092\u53d7\u3051\u3001\u6697\u53f7\u901a\u8ca8\u304c\u76d7\u307e\u308c\u308b\u4e8b\u4ef6\u304c\u767a\u751f\u3002", "titles": ["- \u53f2\u4e0a\u6700\u5927\u306e\u30b5\u30d7\u30e9\u30a4\u30c1\u30a7\u30fc\u30f3\u653b\u6483\u304c\u5f15\u304d\u8d77\u3053\u3057\u305f\u5927\u898f\u6a21\u306a\u6697\u53f7\u8cc7\u7523\u5f37\u596a", "- NPM\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30cf\u30c3\u30ad\u30f3\u30b0\u3068\u305d\u306e\u5f71\u97ff\uff1a\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306e\u5371\u6a5f", "- SAP ERP\u306e\u6df1\u523b\u306a\u8106\u5f31\u6027\uff1a\u30a2\u30af\u30bb\u30b9\u30d0\u30c3\u30af\u30c9\u30a2\u306e\u5b58\u5728", "- Kerberoasting\u653b\u6483\u306e\u4ed5\u7d44\u307f\u3068Microsoft\u306e\u5bfe\u5fdc\u306e\u9045\u308c", "- TLS\u30cf\u30c3\u30ad\u30f3\u30b0\u3068\u9006\u30a2\u30bb\u30f3\u30d6\u30ea\uff1a\u57cb\u8fbc\u30b7\u30b9\u30c6\u30e0\u3078\u306e\u65b0\u305f\u306a\u4fb5\u5165\u624b\u6cd5"]}