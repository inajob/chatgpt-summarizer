{"pubDate": "2024-03-20T20:00:32", "original_title": "DIY RC Controller Built With Old-School Parts", "link": "https://hackaday.com/2024/03/20/diy-rc-controller-built-with-old-school-parts/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/03/FHBA80DLSSY5T0U-e1710935709200.jpg", "original_content": "Once upon a time, RC transmitters were expensive units that cost hundreds of dollars even at the low end. Now, you can get them pretty cheaply, or, you can choose to build your own. [Phytion] did just that.\nThe design isnt based around a modern microcontroller, nor does it rely on WiFi or Bluetooth connections. Instead, its a little more old school. Its built using the HT12E parallel-to-serial encoder chip, and the HT12D decoder chip for the receiver. The controller uses a pair of HT12Es on the transmitter, and a pair of HT12Ds on the receiver. These accept inputs from a pair of analog joysticks and encode them as serial data. However, they essentially just act as digital joysticks in this design. The HT12Es feed into an STX882 module which transmits the data from the HT12Es over 433 MHz. Another STX882 module receives this signal, and passes it through HT12Ds for decoding.\nAt the receiving end, one joystick can turn four outputs on or off depending on whether it is pushed up, down, left or right. A channel select switch then allows it to do the same for four further outputs. The second joystick just mirrors the operation of the first. Its just intended to make controlling something like an RC car easier by allowing one stick to be pushed forwards and backwards, and the other left and right.\nYou dont see many designs like this anymore. Realistically, its possible to get far more functionality out of a design based on an ESP32 or similar wireless-capable chip. However, this one doesnt require any complicated handshaking and powers up instantly, which is a nice bonus. Plus, its always interesting to see alternative designs tried out in the wild. Video after the break.\n\n"}