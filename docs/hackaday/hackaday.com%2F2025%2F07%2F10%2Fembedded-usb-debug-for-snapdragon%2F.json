{"pubDate": "2025-07-10T20:00:00", "original_title": "Embedded USB Debug for Snapdragon", "link": "https://hackaday.com/2025/07/10/embedded-usb-debug-for-snapdragon/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2017/03/tux-on-htop-featured.jpg", "original_content": "According to [Casey Connolly], Qualcomms release of how to interact with their embedded USB debugging (EUD) is a big deal. If you havent heard of it, nearly all Qualcomm SoCs made since 2018 have a built-in debugger that connects to the onboard USB port. The details vary by chip, but you write to some registers and start up the USB phy. This gives you an oddball USB interface that looks like a seven-port hub with a single device EUD control interface.\nSo what do you do with that? You send a few USB commands, and youll get a second device. This one connects to an SWD interface. Of course, we have plenty of tools to debug using SWD.\n\nIn particular, theres a fork of OpenOCD that knows how to use EUD, although it required a library that wasnt available to us mere mortals. But now it is, so smooth sailing, right?\nUm, no. Unless you have a very specific build configuration, the code wont compile. Luckily, the fixes are not that hard and are available. The OpenOCD fork is a bit out of date, too. But with perseverance, it all worked.\nIn addition to the SWD device, there appears to be a COM and trace peripheral available, although those may need more work to be usable. If you make progress on those, let us know.\nSWD debugging can be very handy. While not everyone likes debuggers, weve been a fan of hardware-based debugging for a long time."}