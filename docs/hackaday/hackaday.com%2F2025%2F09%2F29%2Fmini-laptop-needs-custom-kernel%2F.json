{"pubDate": "2025-09-29T11:00:31", "original_title": "Mini Laptop Needs Custom Kernel", "link": "https://hackaday.com/2025/09/29/mini-laptop-needs-custom-kernel/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/09/laptop.png", "youtube": "https://www.youtube.com/watch?v=6iqRg_rB6lQ", "original_content": "These days, you rarely have to build your own Linux kernel. You just take what your distribution ships, and it usually works just fine. However, [Andrei] became enamored with a friends cyberdeck and decided that hed prefer to travel with a very small laptop. The problem is, it didnt work well with a stock kernel. So, time to build the kernel again.\nOf course, he tried to simply install Linux. The installer showed a blank screen. You might guess that you need to add nomodeset to the kernel options. But the screen was still a bit wacky. [Andrei] likens troubleshooting problems like this to peeling an onion. There are many layers to peel back, and you are probably going to shed some tears.\n\nHe did turn to ChatGPT for some help, but found there were many hallucinations, so it was sometimes helpful and sometimes not. What follows is a detective story with many twists and turns.\nHe finally decided he needed a custom kernel and had to learn the steps. If you havent done it, it really isnt that hard. If you are trying to get close to another existing kernel, you can read /proc/config.gz to get a list of how the person who built your kernel set it up (even if that someone was you).\nThe custom kernel worked. Sort of. The screen finally turned on, but it was rotated 90 degrees. Not too convenient. A few more options paid off. Along the way, he mentions a few common debugging procedures, like divide and conquer or testing kernels on a virtual machine before moving to real hardware.\nThe culprit turned out to be an errant video module. But there was still no sound or touchpad. That caused even more detective work that uncovered some confusing documentation. At the end, he has a mostly working machine, although he didnt have sleep mode, and the machine tends to run hot. Hes ok with that. We often find that we have similar problems with things like orientation sensors, although the situation is improving.\nOf course, building the kernel is a far cry from writing new code for it. If you want to get your feet wet, maybe start with an old version. You can even find some automation scripts that help you get straight to debugging your code.\n"}