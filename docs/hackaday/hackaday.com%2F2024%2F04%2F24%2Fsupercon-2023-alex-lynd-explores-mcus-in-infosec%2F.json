{"pubDate": "2024-04-24T17:00:00", "original_title": "Supercon 2023: Alex Lynd Explores MCUs in Infosec", "link": "https://hackaday.com/2024/04/24/supercon-2023-alex-lynd-explores-mcus-in-infosec/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/04/lynd23_feat.jpg", "youtube": "https://www.youtube.com/watch?v=FjKcJBw0gWc", "original_content": "The average Hackaday reader hardly needs to be reminded of the incredible potential of the modern microcontroller. While the Arduino was certainly transformative when it hit the scene, those early 8-bit MCUs were nothing compared to whats on the market now. Multiple cores with clock speeds measured in the hundreds of megahertz, several MB of flash storage, and of course integrated WiFi capability mean todays chips are much closer to being fully-fledged computers than their predecessors.\nIts not hard to see the impact this has had on the electronics hobby. In the early 2000s, getting your hardware project connected to the Internet was a major accomplishment that probably involved bringing some hacked home router along for the ride. But today, most would consider something like an Internet-connected remote environmental monitor to be a good starter project. Just plug in a couple I2C sensors, write a few lines of Python, and youve got live data pouring into a web interface that you can view on your mobile device  all for just a few bucks worth of hardware.\nBut just because were keenly aware of the benefits and capabilities of microcontrollers like the ESP32 or the Pi Pico, doesnt mean theyve made the same impact in other tech circles. In his talk Wireless Hacking on a $5 Budget, Alex Lynd goes over some examples of how hes personally put these devices to work as part of his information security (infosec) research.\n\nWhen Less is More\nLike so many before him, Alex started his journey with Linux on the Raspberry Pi. It was, at least in the days before the chip shortage, a cheap and easy way to start exploring the intersection of hardware and software. But once they got too rare and expensive for a young hacker to experiment with, he started looking for alternatives.\nThis lead him to the work of security researchers such as Spacehuhn, who had used the ESP8266 to perform various attacks and techniques (such as WiFi deauthentication) which could previously only be done on a computer. While a Linux box filled with all the latest offensive and defensive security tools would of course always have its place, Alex immediately saw the appeal in developing these sort of single-purpose infosec gadgets.\nDumping the firmware from an ESP32-based smart bulb.\nThe most obvious one, naturally, is cost. Most modern microcontrollers are so cheap that theyre essentially disposable  something that can be a huge benefit while performing reconnaissance or other penetration testing tasks. If you dont have to go and retrieve your deployed gear, thats one less chance to get caught. In a similar vein, the fact that a microcontroller is so much smaller than even a Raspberry Pi makes it easier to hide.\nOn the subject of covert operations, Alex also points out the potential to commandeer an existing IoT device that may very well already have your favorite chip onboard. Weve seen plenty of smart light bulbs that used some member of the ESP family internally, and hackers have demonstrated how easily they can be reprogrammed. Crafting a custom firmware for one of these devices that maintains its original functionality while adding in some malicious functions is certainly within the realm of possibility.\nHidden or otherwise, Alex also believes MCUs can be easier to configure and deploy in the wild. If youre just looking to perform a single task, such as logging all of the devices going into or out of a particular building, you dont need to configure and run a whole operating system. Without the added complexity of that OS, your deployment can be faster and potentially more reliable. It can also be easier and faster to replicate. Whether your goal is to share your work with others, or simply spin up multiple instances of your own personal tool, it doesnt get much easier than flashing a firmware file to a fresh MCU.\nTargeted Applications\nAlex quickly move from the theoretical to the practical, showing off a number of devices hes built and operated over the last several years.\nThe first was a discreet reconnaissance tool made up of an ESP-01 hidden inside of a USB phone charger. It could detect when particular WiFi devices were present or had joined a particular network, and alert him with email and SMS notifications. In his case, Alex was just keeping tabs on his fathers comings and goings, but its not difficult to see how this capability could be put to use during a penetration test.\nHe then goes on to describe an expedient WiFi capture device made from nothing more than an ESP32, an SD card, and a salvaged lithium ion battery tucked into an inconspicuous enclosure. Alex explains that the more powerful ESP32 has the ability to perform full WiFi packet capture, which is dumped to a Wireshark-compatible file on the SD card. The device, which looked like any other piece of trash laying on the street, was then able to intercept the communications of a nearby wireless security camera.\nThe $10 wardriving rig uses public WiFi to return its results, and is cheap enough to be disposable.\nAlex also describes his experiments with a technique known as warshipping, which is when a device is physically shipped to a destination (such as an office building) for the purposes of surveillance or penetration testing. The idea is to send the package to an employee or department that doesnt exist  you want it to be in the building long enough to capture useful data, but then have it ultimately returned to sender. The catch here is that you need a lightweight device that can run for as long as possible on an internal battery pack. A Raspberry Pi can do it, but in terms of runtime per milliwatt-hour, theres no beating a modern microcontroller with a properly configured sleep routine.\nGoing Beyond WiFi\nAlex ends the presentation by talking about whats he has planned for the future. Thus far hes limited himself largely to WiFi, but hed really like to start experimenting with other wireless protocols using similar low-cost hardware.\nBluetooth is the next logical step, as several microcontrollers have that built-in. This offers some interesting potential for tracking assets and even individuals, as Bluetooth Low Energy (BLE) has become essentially the defacto communications method for wearable devices. Tracking a targets phone is one thing, but if you can keep tabs on where their smart watch or earbuds are, youll really be able to zero in on their movement.\nBeyond that hed like to start working with radio modules (or even software defined radio) that will let him tap into the unlicensed frequencies such as 433 MHz, as theres a whole world of interesting devices out there just waiting to hear the right signal. But Alex is also interested in the potential for using microcontrollers to physically interface with devices, which is where I/O powerhouse platforms like the Pi Pico come into play.\nUltimately, Alex sees nothing but potential for the use of microcontrollers in information security. Each year they get faster and more capable, while still remaining affordable enough that you can buy a handful just to play around with the various platforms. His high water mark is the Sensor Watch from Joey Castillo: he reasons that if an individual hacker can pack a programmable microcontroller and sensors into such a constrained platform while having the device remain completely inconspicuous externally, imagine what else is possible if youre willing to really lean into the minimalist approach.\n", "title": "\u73fe\u4ee3\u306e\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u53ef\u80fd\u6027", "body": "\u73fe\u4ee3\u306e\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u9a5a\u304f\u3079\u304d\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u3068\u305d\u306e\u5f71\u97ff\u306b\u3064\u3044\u3066\u89e3\u8aac\u3002\u65e7\u5f0f\u306e8\u30d3\u30c3\u30c8MCU\u3068\u6bd4\u3079\u3066\u3001\u73fe\u5728\u306e\u5e02\u5834\u3067\u306f\u30de\u30eb\u30c1\u30b3\u30a2\u3084WiFi\u6a5f\u80fd\u304c\u642d\u8f09\u3055\u308c\u305f\u9ad8\u901f\u30c1\u30c3\u30d7\u304c\u4e00\u822c\u7684\u3067\u3042\u308a\u3001\u96fb\u5b50\u30db\u30d3\u30fc\u306b\u9769\u65b0\u3092\u3082\u305f\u3089\u3057\u3066\u3044\u308b\u3002 Alex Lynd\u306e\u60c5\u5831\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u7814\u7a76\u306b\u304a\u3051\u308b\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u4f7f\u7528\u4f8b\u3082\u7d39\u4ecb\u3002", "titles": ["\u73fe\u4ee3\u306e\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u53ef\u80fd\u6027", "$5\u306e\u4e88\u7b97\u3067\u306e\u30ef\u30a4\u30e4\u30ec\u30b9\u30cf\u30c3\u30ad\u30f3\u30b0", "\u60c5\u5831\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3078\u306e\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5fdc\u7528", "\u96fb\u5b50\u5de5\u4f5c\u3068\u60c5\u5831\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u30af\u30ed\u30b9\u30aa\u30fc\u30d0\u30fc", "\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u6d3b\u7528\u3057\u305f\u96a0\u308c\u305f\u60c5\u5831\u53ce\u96c6"]}