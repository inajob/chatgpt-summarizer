{"pubDate": "2023-12-02T03:00:00", "original_title": "Cat-o-Matic 3000 Serves Your Feline Masters", "link": "https://hackaday.com/2023/12/01/cat-o-matic-3000-serves-your-feline-masters/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/11/cat-o-matic-800.jpeg", "original_content": "When you have three cats and three humans, you have one problem: feeding them on a schedule without over or under feeding them. Even if there was only one human in the equation, the Cat-o-Matic 3000 would still be a useful tool.\nEssentially, its a traffic light for cats  where green means you are go for feeding, and red means the cat was just fed. Yellow, of course, means the cat is either half-full or half-empty, depending on your outlook.\nThe brains of this operation is an ATmega88PA leftover from another project. Theres a no-name voltage regulator that steps up the two AA cells to 5 volts. Timing comes from a 32 kHz crystal that allows the microcontroller to stay in power-saving sleep mode for long periods of time.\nCreator [0xCAFEAFFE] says the firmware was cobbled together from other projects. Essentially, it wakes up once per second to increment the uptime counter and then goes back to sleep. Short-pressing a button shows the feeding status, and long-pressing it will reset the timer.\nWanna make a cat status indicator without electronics? Give flexures a try.", "title": "\u300cCat-o-Matic 3000\u300d: \u30da\u30c3\u30c8\u306e\u98df\u4e8b\u7ba1\u7406\u306b\u4fbf\u5229\u306a\u30c4\u30fc\u30eb\u306e\u7d39\u4ecb ", "body": "3\u5339\u306e\u732b\u30683\u4eba\u306e\u4eba\u9593\u306e\u305f\u3081\u306b\u3001\u904e\u98df\u3084\u5c11\u98df\u3092\u305b\u305a\u306b\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u306b\u5408\u308f\u305b\u3066\u30a8\u30b5\u3092\u3084\u308b\u306e\u306f\u554f\u984c\u3067\u3059\u3002Cat-o-Matic 3000\u306f\u3001\u30a8\u30b5\u3092\u3042\u3052\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u793a\u3059\u4fe1\u53f7\u6a5f\u3067\u3059\u3002AEttiny88PA\u30682\u3064\u306eAA\u96fb\u6c60\u3092\u4f7f\u3044\u300132kHz\u306e\u6c34\u6676\u3067\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u5236\u5fa1\u3057\u307e\u3059\u3002\u30dc\u30bf\u30f3\u3067\u72b6\u614b\u3092\u78ba\u8a8d\u3067\u304d\u3001\u9577\u62bc\u3057\u3059\u308b\u3068\u30bf\u30a4\u30de\u30fc\u304c\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u307e\u3059\u3002\u96fb\u5b50\u6a5f\u5668\u306a\u3057\u3067\u732b\u306e\u72b6\u614b\u3092\u8868\u793a\u3059\u308b\u306a\u3089\u3001\u30d5\u30ec\u30af\u30c1\u30e3\u30fc\u30ba\u3092\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002", "titles": ["\u300cCat-o-Matic 3000\u300d: \u30da\u30c3\u30c8\u306e\u98df\u4e8b\u7ba1\u7406\u306b\u4fbf\u5229\u306a\u30c4\u30fc\u30eb\u306e\u7d39\u4ecb ", "\u300c\u81ea\u4f5c\u30ad\u30e3\u30c3\u30c8\u30d5\u30a3\u30fc\u30c0\u30fc\u300d: ATmega88PA\u3092\u4f7f\u7528\u3057\u305f\u30ab\u30b9\u30bf\u30e0\u30da\u30c3\u30c8\u30d5\u30a3\u30fc\u30c0\u30fc\u306e\u4f5c\u308a\u65b9 ", "\u300c\u7c21\u5358\u306a\u96fb\u5b50\u5de5\u4f5c\u3067\u732b\u306e\u98df\u4e8b\u7ba1\u7406\u300d: \u30b0\u30ea\u30fc\u30f3\u30e9\u30a4\u30c8\u3067\u7d66\u990c\u53ef\u80fd\u3001\u30ec\u30c3\u30c9\u30e9\u30a4\u30c8\u3067\u7d66\u990c\u6e08\u307f\u3092\u8868\u793a ", "\u300c\u7701\u30a8\u30cd\u96fb\u5b50\u5de5\u4f5c\u3067\u732b\u306e\u98df\u4e8b\u7ba1\u7406\u300d: 32 kHz\u30af\u30ea\u30b9\u30bf\u30eb\u3092\u4f7f\u7528\u3057\u7701\u96fb\u529b\u3067\u7d66\u990c\u30bf\u30a4\u30de\u30fc\u3092\u4f5c\u6210 ", "\u300c\u30d5\u30ec\u30af\u30b7\u30e3\u30fc\u3092\u4f7f\u3063\u305f\u96fb\u5b50\u5de5\u4f5c\u3067\u732b\u306e\u72b6\u614b\u8868\u793a\u300d: \u96fb\u5b50\u90e8\u54c1\u4e0d\u8981\u306e\u732b\u306e\u72b6\u614b\u8868\u793a\u65b9\u6cd5\u306e\u7d39\u4ecb"]}