{"pubDate": "2024-04-08T11:00:15", "original_title": "Fortran and WebAssembly: Bringing Zippy Linear Algebra to NodeJS & Browsers", "link": "https://hackaday.com/2024/04/08/fortran-and-webassembly-bringing-zippy-linear-algebra-to-nodejs-browsers/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2015/10/fortran-card.jpg", "original_content": "With the rise of WebAssembly (wasm) its become easier than ever to run native code in a browser. As mostly just another platform to target, it would be remiss if Fortran was not a part of this effort, which is why a number of projects have sought to get Fortran supported on wasm.\nFor the why, [George Stagg] makes the point that software packages like BLAS and LAPACK for Fortran are still great for scientific computing, while the how is a bit more hairy, but getting better courtesy of the still-in-development LLVM front-end for Fortran (flang-new). Using it for wasm is not straightforward yet, due to the lack of a wasm32 target, but as [George] demonstrates, this is easily patched around.\nWe reported on Fortran and wasm back in 2016, with things having changed somewhat in the intervening eight years (yes, that long). The Fortran-to-C translator utility (f2c) is effectively EOL, while LFortran is coming along but still missing many features. The Dragonegg GCC-frontend-for-LLVM project was the best shot in 2020 for Fortran and WebAssembly, but obsolete now. Classic Flang has been in LLVM for a while, but is to be replaced with what is now called flang-new. The wish by [George] is now to find a way to get his patched flang-new code for wasm support into the project.\nIn the article, the diff for patching the flang-new toolchain to target wasm is provided. During compilation of the standard Fortran runtime it was then found that the flang-new code assumes that target system sizeof() results are identical to those of the host system, which of course falls flat for wasm32. One more patch (or hardcoded hack, rather) later the Hello World example in Fortran was up and running, clearing the way to build the BLAS (Basic Linear Algebra Subprograms) and LAPACK (Linear Algebra Package) libraries and create a few example projects in Fortran-for-wasm32 which uses them.\nThe advantage of being able to use extremely well-optimized software packages like these when limited to a browser environment should be obvious, in addition to the benefit of using existing codebases. It is certainly [George]s hope that flang-new will soon officially support wasm (32 and 64-bit) as targets, and he actively seeks help with making this a reality.", "title": "WebAssembly\u4e0a\u3067Fortran\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u53d6\u308a\u7d44\u307f", "body": "Fortran\u306fWebAssembly\uff08wasm\uff09\u306b\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3064\u3064\u3042\u308a\u3001BLAS\u3084LAPACK\u306e\u3088\u3046\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5229\u7528\u3067\u304d\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\u3057\u304b\u3057\u3001\u307e\u3060\u624b\u63a2\u308a\u6bb5\u968e\u3067\u3001 George Stagg\u6c0f\u306f\u3053\u306e\u53d6\u308a\u7d44\u307f\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u3002", "titles": ["WebAssembly\u4e0a\u3067Fortran\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u53d6\u308a\u7d44\u307f", "Fortran\u3068WebAssembly\u306e\u6700\u65b0\u60c5\u5831", "Fortran\u306e\u65b0\u3057\u3044\u30b3\u30fc\u30c9\u3067wasm32\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u65b9\u6cd5", "Fortran\u306eBLAS\u3068LAPACK\u30e9\u30a4\u30d6\u30e9\u30ea\u3092wasm32\u3067\u4f7f\u7528\u3059\u308b", "\u9ad8\u5ea6\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30d6\u30e9\u30a6\u30b6\u74b0\u5883\u3067\u4f7f\u7528\u3059\u308b - Fortran\u306e\u53ef\u80fd\u6027"]}