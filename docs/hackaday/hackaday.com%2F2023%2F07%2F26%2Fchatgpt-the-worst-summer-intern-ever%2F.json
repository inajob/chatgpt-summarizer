{"pubDate": "2023-07-26T14:00:05", "original_title": "ChatGPT, the Worst Summer Intern Ever", "link": "https://hackaday.com/2023/07/26/chatgpt-the-worst-summer-intern-ever/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/07/ChatGPTintern.jpg", "original_content": "Back when I used to work in the pharma industry, I had the opportunity to hire summer interns. This was a long time ago, long enough that the fresh-faced college students who applied for the gig are probably now creeping up to retirement age. The idea, as I understood it, was to get someone to help me with my project, which at the time was standing up a distributed data capture system with a large number of nodes all running custom software that I wrote, reporting back to a central server running more of my code. It was more work than I could manage on my own, so management thought theyd take mercy on me and get me some help.\nThe experience didnt turn out quite like I expected. The interns were both great kids, very smart, and I learned a lot from them. But two months is a very tight timeframe, and getting them up to speed took up most of that time. Add in the fact that they were expected to do a presentation on their specific project at the end of the summer, and the whole thing ended up being a lot more work for me than if I had just done the whole project myself.\nI thought about my brief experience with interns recently with a project I needed a little help on. Its nothing that hiring anyone would make sense to do, but still, having someone to outsource specific jobs to would be a blessing, especially now that its summer and theres so much else to do. But this is the future, and the expertise and the combined wisdom of the Internet are but a few keystrokes away, right? Well, maybe, but as youll see, even the power of large language models has its limit, and trying to loop ChatGPT in as a low-effort summer intern leaves a lot to be desired.\n\nLock Up Those Chickens\nThis chicken coop door needs a latch to prevent raccoons from sliding the aluminum door up. And yes, I could have built the whole thing from scratch, but I was in a hurry.\nThe specific task I needed help with was simple: a latch on the automatic door of my chicken coop. The details of why I need this are better left unsaid, but I will say that the latch is my attempt to deal with the cruel equation 11 Chickens + 1 Raccoon = 8 Chickens. The first part for the latch that I had in mind was a simple bracket  something with two arms rising from a base that could be attached to the coop door (a sheet of 2-mm aluminum). This bracket will support a spring-loaded arm to engage a crossbar in the frame of the coop door, and hopefully prevent anything with clever little claws and a taste for take-out chicken from working under the lower edge of the sliding door and getting into the coop.\nFrom my experience with Fusion 360, I knew it would be pretty easy to whip up a couple of sketches, extrude the arms up from the base, drill some holes, and tidy things up with the proper chamfers and fillets. The trouble with that is that I moved to Linux quite a few years ago, so Fusion 360 isnt really a viable option. Yes, I know there are workarounds using Wine or VMs, but Im also not interested in playing in Autodesks cloud. Of course, theres FreeCAD, too; in fact, just prior to this project I had started fiddling with it, but Im still in the early part of the learning curve and not terribly productive with it yet.\nThat final point gets to the crux of the matter, though. When I was learning Fusion 360, I found that it quickly became the case that perfecting the 3D model was mentally more important to me than what I was designing. I would spend hours getting everything just right, only to find out that something didnt quite line up, or I had some constraint wrong, and Id have to start all over again. I have every expectation that my mind will treat FreeCAD the exact same way, not as a means to an end but as the end itself. Thats a slippery slope, especially when theres so much else I have to do.\nThe Mysteries of OpenSCAD\nThis is when I had the idea to outsource my design to someone  or something  else. Credit where its due; I got the idea to enlist ChatGPT after seeing [ROFLhoff]s Hackaday.io project about repairing a broken Toyota speedometer. The project required a knob to easily spin the speed sensor that drives the speedo for bench testing. With just a brief description of the part needed, [ROFLhoff] was able to prompt ChatGPT to generate OpenSCAD code to create a model of the knob.\nI thought that was pretty slick and decided to do the same. The bracket seemed like the best place to start, so I gave ChatGPT the following prompt:\nMy first attempt at getting ChatGPT to do my dirty work. Sorry if the units upset you  its how I think.\nI know I wasnt terribly specific  I didnt say how far in from the corners the mounting holes should be, for instance  but I figured that was something I could tweak later. And besides, when you hand a job over to a subordinate, you should be able to just vaguely describe what you want, and let them run with it. Right?\nMaybe not, because heres what I got back from ChatGPT:\n\n\n// Bracket dimensions\nbase_size = 1; // One inch square base\nhole_radius = 1/16; // 1/8 inch hole radius\narm_width = 1/4; // 1/4 inch arm width\narm_height = 1/2; // 1/2 inch arm height\narm_gap = 1/4; // 1/4 inch gap between arms\n\n// Base\nbase = cube([base_size, base_size, 1]); // 1 unit height\n\n// Holes\nhole_offset = hole_radius + 1/16; // Offset from base edges\nhole = cylinder(h = 1, r = hole_radius);\n\n// Calculate arm positions\narm_x = (base_size - arm_width) / 2;\narm_y = (base_size - arm_height) / 2;\n\n// Arms\narm1 = cube([arm_width, arm_height, 1]); // 1 unit height\narm2 = translate([arm_width + arm_gap, 0, 0]) cube([arm_width, arm_height, 1]);\n\n// Combine all parts\nbracket = base - translate([hole_offset, hole_offset, 0]) hole +\n          translate([hole_offset, base_size - hole_offset, 0]) hole +\n          translate([base_size - hole_offset, hole_offset, 0]) hole +\n          translate([base_size - hole_offset, base_size - hole_offset, 0]) hole +\n          translate([arm_x, arm_y, 1]) arm1 +\n          translate([arm_x, arm_y, 1]) arm2;\n\n// Render the bracket\nrender(bracket);\n\n\n\nNow, its important to note that at the time, I had even less experience with OpenSCAD than I did with FreeCAD. And by less, I mean zero  Id never used OpenSCAD before. So the code ChatGPT created didnt mean all that much to me. But it sure looked reasonable, especially to someone who used to code for a living  I could see all the parameters up at the top like constants, the calculations used to figure out where to put the arms, and the creation of the cylindrical holes. But I had no idea what translate was, and I couldnt really see how the holes would be punched through the base.\nStrictly speaking, though, that wasnt my problem. In the ideal world, I would just copy the AI-generated code into OpenSCAD and get a 3D model ripe for tweaking, right? Perhaps, but in the reality-based world, I had no such luck. The code ChatGPT generated didnt work in OpenSCAD  it just threw a syntax error on line 21. I told ChatGPT about the error and asked to have it fixed, but the code that came back was essentially the same and threw the same error. Disappointing.\nIf You Want Something Done Right\nAt this point, I figured I had two choices: either keep fiddling with the ChatGPT prompt, or start learning enough OpenSCAD to figure out what ChatGPT was doing wrong. All things considered, the latter seemed like the smarter route, so thats the way I went. It was quickly apparent that ChatGPT didnt have the slightest idea how to program OpenSCAD  for example, note the complete lack of difference() commands, which are needed to make the holes, from the AI-generated code. This led me down the very rabbit hole I was trying to avoid, and I spent a few hours learning enough OpenSCAD to do the job myself:\n\n\n// dimensions in mm [width, depth, height]\nbase_size = 25;\nbase_thickness = 3;\nupper_size = base_size - 10;\nupper_height = upper_size;\nbase = [base_size,base_size,base_thickness];\nupper = [upper_size,upper_size,upper_height];\nslot_width = upper_size/3;\nslot = [upper_size + 2,slot_width, upper_height];\nhole_dm     = 3;\nhole_margin = 1.5;\naxle_dm = 4;\n\nmodule bracket() {\n    difference() {\n\n        cube( base );\n\n        abs_margin  = hole_margin + hole_dm / 2;\n        x_hole_dist = base.x - 2 * abs_margin;\n        y_hole_dist = base.y - 2 * abs_margin;\n        x_values    = [abs_margin : x_hole_dist : base.x - abs_margin];\n        y_values    = [abs_margin : y_hole_dist : base.y - abs_margin];\n\n        // holes\n        $fn = 25;\n        for (x = x_values, y = y_values)\n        translate( [x, y, -1] )\n        cylinder( d = hole_dm, h = base.z + 2);\n\n    }\n\n    translate([(base_size-upper_size)/2, (base_size-upper_size)/2,0])\n    difference() {\n            \n        cube( upper );\n        translate([-1,upper_size/3,upper_size/3]) cube( slot );\n        translate([(upper_size/2),-1, (base_size/2)-2])\n        {\n            $fn = 25;\n            rotate([-90,0,0]) cylinder(d=axle_dm, upper_size + 2 );\n        }\n            \n    }\n          \n}\nmodule latch() {\n    $fn=25;\n    difference() {\n        union() {\n            cube([35.5, (axle_dm + 5)/2,slot_width-1]); // main arm\n            translate([35.5,(axle_dm + 5)/2 -0.8,0]){\n                rotate([0,0,-185]) cube([(axle_dm + 5)/2, 10, slot_width-1]);\n            }    \n            translate([0,(axle_dm + 5)/2,0]){         // lever\n                rotate([0,0,135]) cube([15, (axle_dm + 5)/2,slot_width-1]);\n                \n            }   \n            cylinder(d=axle_dm + 5, h= slot_width-1); // pivot body\n            \n        }    \n        cylinder(d=axle_dm, h=slot_width+1);          // pivot hole  \n    }    \n}\n\nbracket();\ntranslate([0,50,0])\nlatch();\n\n\nHeres what I finally came up with in OpenSCAD.\nWas It Worth It?\nGranted, my OpenSCAD code has both the bracket and the latch, but even accounting for the added complexity, I feel like ChatGPTs first pass at doing what I wanted was half-assed at best. This is about the point where I realized that ChatGPT was behaving like an earnest and eager-to-please but somewhat clueless summer intern. Given the same instructions, such an intern might go off and spend a few hours Googling how to do the job, maybe hitting StackExchange or r/openscad for some help, and coming up with some code that they figured would do the job. That they didnt even bother to see if OpenSCAD would interpret the code would be grounds for a Stern Talking-To with a meatspace intern; but with a virtual intern, what recourse did I have?\nHonestly, although I didnt get the magic help from ChatGPT that I was hoping for, this experiment in AI-assisted design wasnt a complete loss. The original code may have been crap, but it at least gave me the impression that OpenSCAD programming wasnt entirely foreign territory for me; flawed though it was, I could see that its just a combination of coding and 3D modeling, and intuitive enough to take a stab at. So now I know just enough OpenSCAD to be dangerous, all thanks to ChatGPT  the worst summer intern ever.\nAnd as for the coop door latch, that project went in an entirely different direction once I realized that I could make the bracket and the latch from bent sheet aluminum  which forced me to learn not only FreeCAD but the Sheet Metal workbench as well. So ChatGPT actually forced me down two rabbit holes Id hoped to avoid."}