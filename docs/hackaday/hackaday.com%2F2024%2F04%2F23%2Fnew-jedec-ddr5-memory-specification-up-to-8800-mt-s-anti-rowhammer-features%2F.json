{"pubDate": "2024-04-24T02:00:27", "original_title": "New JEDEC DDR5 Memory Specification: Up To 8800 MT/s, Anti-Rowhammer Features", "link": "https://hackaday.com/2024/04/23/new-jedec-ddr5-memory-specification-up-to-8800-mt-s-anti-rowhammer-features/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/04/DDR5_SDRAM_IMGP6304_smial_wp.jpg", "original_content": "Row hammer by Dsimic  Own work. Licensed under CC BY-SA 4.0 via Wikimedia Commons.\nAs DDR SDRAM increases in density and speed, so too do new challenges and opportunities appear. In the recent DDR5 update by JEDEC  as reported by Anandtech  we see not only a big speed increase from the previous maximum of 6800 Mbps to 8800 Mbps, but also the deprecation of Partial Array Self Refresh (PASR) due to security concerns, and the introduction of Per-Row Activation Counting (PRAC), which should help with row hammer-related (security) implications.\nIncreasing transfer speeds is primarily a matter of timings within the limits set by the overall design of DDR5, while the changes to features like PASR and PRAC are more fundamental. PASR is mostly a power-saving feature, but can apparently be abused for nefarious means, which is why its now gone. As for PRAC, this directly addresses the issue of row hammer attacks. Back in the 2014-era of DDR3, row hammer was mostly regarded as a way to corrupt data in RAM, but later it was found to be also a way to compromise security and effect exploits like privilege escalation.\nThe way PRAC seeks to prevent this is by keeping track of how often a row is being accessed, with a certain limit after which neighboring memory cells get a chance to recover from the bleed-over that is at the core of row hammer attacks. All of which means that theoretically new DDR5 RAM and memory controllers should be even faster and more secure, which is good news all around.", "title": "DDR5 RAM\u306e\u901f\u5ea6\u5411\u4e0a\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316", "body": "DDR SDRAM\u306e\u65b0\u305f\u306a\u66f4\u65b0\u306b\u3088\u308a\u3001DDR5\u306e\u901f\u5ea6\u304c8800 Mbps\u306b\u5411\u4e0a\u3057\u3001PASR\u304c\u5ec3\u6b62\u3055\u308cPRAC\u304c\u5c0e\u5165\u3055\u308c\u3001Row Hammer\u653b\u6483\u306b\u5bfe\u51e6\u3057\u3066\u3044\u308b\u3002\u3053\u308c\u306b\u3088\u308a\u3001DDR5\u306f\u3088\u308a\u9ad8\u901f\u3067\u30bb\u30ad\u30e5\u30a2\u306b\u306a\u308a\u3001\u5229\u7528\u7bc4\u56f2\u304c\u5e83\u304c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002", "titles": ["DDR5 RAM\u306e\u901f\u5ea6\u5411\u4e0a\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316", "DDR5\u306e\u65b0\u6a5f\u80fd\uff1aPer-Row Activation Counting", "DDR5\u306e\u9032\u5316\u3068\u884c\u30cf\u30f3\u30de\u30fc\u653b\u6483\u5bfe\u7b56", "\u30e1\u30e2\u30ea\u306e\u9032\u5316\uff1aDDR5\u306e\u901f\u5ea6\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3", "DDR5\u3068\u884c\u30cf\u30f3\u30de\u30fc\u653b\u6483\uff1a\u65b0\u305f\u306a\u5c55\u958b"]}