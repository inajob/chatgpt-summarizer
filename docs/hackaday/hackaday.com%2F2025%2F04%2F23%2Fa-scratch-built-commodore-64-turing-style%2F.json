{"pubDate": "2025-04-23T08:00:53", "original_title": "A Scratch-Built Commodore 64, Turing Style", "link": "https://hackaday.com/2025/04/23/a-scratch-built-commodore-64-turing-style/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/04/turing_c64.jpeg", "youtube": "https://www.youtube.com/watch?v=MG3j_6DBCIE", "original_content": "Building a Commodore 64 is among the easier projects for retrocomputing fans to tackle. Thats because the C64s core chipset does most of the heavy lifting; source those and youre probably 80% of the way there. But what if you cant find those chips, or if you want more of a challenge than plugging and chugging? Are you out of luck?\nHardly. The video below from [DrMattRegan] is the first in a series on his scratch-built C64 that doesnt use the core chipset, and it looks pretty promising. This video concentrates on building a replacement for the 6502 microprocessor  actually the 6510, but close enough  using just a couple of EPROMs, some SRAM chips, and a few standard logic chips to glue everything together. He uses the EPROMs as a rulebook that contains the code to emulate the 6502  derived from his earlier Turing 6502 project  and the SRAM chips as a notebook for scratch memory and registers to make a Turing-complete random access machine.\n[DrMatt] has made good progress so far, with the core 6502 CPU built on a PCB and able to run the Apple II version of Pac-Man as a benchmark. Were looking forward to the rest of this series, but in the meantime, a look back at his VIC-less VIC-20 project might be informative.\n\n\nThanks to [Clint] for the tip."}