{"pubDate": "2025-04-23T08:00:53", "original_title": "A Scratch-Built Commodore 64, Turing Style", "link": "https://hackaday.com/2025/04/23/a-scratch-built-commodore-64-turing-style/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/04/turing_c64.jpeg", "youtube": "https://www.youtube.com/watch?v=MG3j_6DBCIE", "original_content": "Building a Commodore 64 is among the easier projects for retrocomputing fans to tackle. Thats because the C64s core chipset does most of the heavy lifting; source those and youre probably 80% of the way there. But what if you cant find those chips, or if you want more of a challenge than plugging and chugging? Are you out of luck?\nHardly. The video below from [DrMattRegan] is the first in a series on his scratch-built C64 that doesnt use the core chipset, and it looks pretty promising. This video concentrates on building a replacement for the 6502 microprocessor  actually the 6510, but close enough  using just a couple of EPROMs, some SRAM chips, and a few standard logic chips to glue everything together. He uses the EPROMs as a rulebook that contains the code to emulate the 6502  derived from his earlier Turing 6502 project  and the SRAM chips as a notebook for scratch memory and registers to make a Turing-complete random access machine.\n[DrMatt] has made good progress so far, with the core 6502 CPU built on a PCB and able to run the Apple II version of Pac-Man as a benchmark. Were looking forward to the rest of this series, but in the meantime, a look back at his VIC-less VIC-20 project might be informative.\n\n\nThanks to [Clint] for the tip.", "title": "- \u81ea\u4f5c\u306e\u30b3\u30e2\u30c9\u30fc\u30eb64\uff1a\u30b3\u30a2\u30c1\u30c3\u30d7\u306a\u3057\u3067\u306e\u6311\u6226", "body": "\u30b3\u30e2\u30c9\u30fc\u30eb64\u306e\u30c1\u30c3\u30d7\u30bb\u30c3\u30c8\u3092\u4f7f\u308f\u305a\u306b\u81ea\u4f5c\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3002EPROM\u3068SRAM\u3092\u4f7f\u3044\u3001\u9032\u6357\u3082\u9806\u8abf\u3002", "titles": ["- \u81ea\u4f5c\u306e\u30b3\u30e2\u30c9\u30fc\u30eb64\uff1a\u30b3\u30a2\u30c1\u30c3\u30d7\u306a\u3057\u3067\u306e\u6311\u6226", "- EPROM\u3068SRAM\u3092\u4f7f\u3063\u305f6502\u30de\u30a4\u30af\u30ed\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u518d\u69cb\u7bc9", "- \u30c9\u30af\u30bf\u30fc\u30de\u30c3\u30c8\u306e\u30aa\u30ea\u30b8\u30ca\u30ebC64\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8feb\u308b", "- \u81ea\u4f5c\u30d1\u30bd\u30b3\u30f3\u3067\u300e\u30d1\u30c3\u30af\u30de\u30f3\u300f\u3092\u518d\u73fe\u3059\u308b\u65b9\u6cd5", "- VIC-20\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304b\u3089\u5b66\u3076\u96fb\u5b50\u5de5\u4f5c\u306e\u30a2\u30a4\u30c7\u30a2"]}