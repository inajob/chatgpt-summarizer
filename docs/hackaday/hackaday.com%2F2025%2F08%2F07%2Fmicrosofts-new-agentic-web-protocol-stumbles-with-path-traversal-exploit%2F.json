{"pubDate": "2025-08-08T02:00:35", "original_title": "Microsoft\u2019s New Agentic Web Protocol Stumbles With Path Traversal Exploit", "link": "https://hackaday.com/2025/08/07/microsofts-new-agentic-web-protocol-stumbles-with-path-traversal-exploit/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2021/08/GithubCopilot.jpg", "original_content": "If the term NLWeb first brought to mind an image of a Dutch internet service provider, youre probably not alone. What it actually is  or tries to become  is Microsofts vision of a parallel internet protocol using which website owners and application developers can integrate whatever LLM-based chatbot they desire. Unfortunately for Microsoft, the NLWeb protocol just suffered its first major security flaw.\nThe flaw is an absolute doozy, involving a basic path traversal vulnerability that allows an attacker to use appropriately formatted URLs to traverse the filesystem of the remote, LLM-hosting, system to extract keys and other sensitive information. Although Microsoft patched it already, no CVE was assigned, while raising the question of just how many more elementary bugs like this may be lurking in the protocol and associated software.\nAs for why a website or application owner might be interested in NLWeb, the marketing pitch appears to be as an alternative to integrating a local search function. This way any website or app can have their own ChatGPT-style search functionality that is theoretically restricted to just their website, instead of chatbot-loving customers going to the ChatGPT or equivalent site to ask their questions there.\nEven aside from the the strong solution in search of a problem vibe, its worrying that right from the outset it seems to introduce pretty serious security issues that suggest a lack of real testing, never mind a strong ignorance of the fact that a lack of user input sanitization is the primary cause for widely exploited CVEs. Unknown is whether GitHub Copilot was used to write the affected codebase.", "title": "- NLWeb: \u30de\u30a4\u30af\u30ed\u30bd\u30d5\u30c8\u306e\u65b0\u3057\u3044\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u8ab2\u984c", "body": "Microsoft\u306eNLWeb\u306f\u30c1\u30e3\u30c3\u30c8\u30dc\u30c3\u30c8\u7d71\u5408\u306e\u65b0\u30d7\u30ed\u30c8\u30b3\u30eb\u3060\u304c\u3001\u91cd\u5927\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6b20\u9665\u304c\u898b\u3064\u304b\u3063\u305f\u3002", "titles": ["- NLWeb: \u30de\u30a4\u30af\u30ed\u30bd\u30d5\u30c8\u306e\u65b0\u3057\u3044\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u8ab2\u984c", "- \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u8106\u5f31\u6027\u304c\u660e\u3089\u304b\u306b\uff01NLWeb\u306e\u521d\u671f\u554f\u984c", "- \u96fb\u5b50\u5de5\u4f5c\u611b\u597d\u8005\u5fc5\u898b\uff01NLWeb\u306b\u3088\u308b\u30c1\u30e3\u30c3\u30c8\u6a5f\u80fd\u306e\u53ef\u80fd\u6027", "- \u30b5\u30a4\u30c8\u72ec\u81ea\u306e\u691c\u7d22\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308bNLWeb\u306e\u5229\u70b9\u3068\u5371\u967a\u6027", "- \u30de\u30a4\u30af\u30ed\u30bd\u30d5\u30c8\u306eNLWeb\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u554f\u984c\u304c\u4f7f\u7528\u306b\u5f71\u3092\u843d\u3068\u3059"]}