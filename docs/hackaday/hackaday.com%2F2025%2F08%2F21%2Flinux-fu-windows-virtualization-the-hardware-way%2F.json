{"pubDate": "2025-08-21T17:00:26", "original_title": "Linux Fu: Windows Virtualization the Hard(ware) Way", "link": "https://hackaday.com/2025/08/21/linux-fu-windows-virtualization-the-hardware-way/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2020/05/LinuxFu.jpg", "original_content": "As much as I love Linux, there are always one or two apps that I simply have to run under Windows for whatever reason. Sure, you can use wine, Crossover Office, or run Windows in a virtual machine, but its clunky, and Im always fiddling with it to get it working right. But I recently came across something that  when used improperly  makes life pretty easy. Instead of virtualizing Windows or emulating it, I threw hardware at it, and it works surprisingly well.\nOnce Upon a Time\nFirst, a story. Someone gave me a Surface Laptop 2 that was apparently dead. It wouldnt charge, and you cant remove the keyboard without power. Actually, you can with a paper clip, and I suggested pulling it to see if the screen would charge by itself. They said they had already bought a new computer, so they didnt care.\nUnsurprisingly, once I popped the keyboard off, the computer charged and was fine. You just have to replace the keyboard or use another one. Or use it as a tablet, which it is set up for anyway. But I have plenty of laptops and computers of every description. What was I going to do with this nice but keyboardless computer?\nCoincidence\nAbout this same time, Id been moving my VirtualBox Windows installs over to KVM. Thats a pain if youve ever done it, but it performs well and works well. Then I found WinApps. This is a simple script setup that runs Windows in your choice of virtual machine and can pull a single application into an RDP client on your desktop. The effect is that you can have, for example, Microsoft Word just sitting on your desktop like any other program. It also wires up the application so you can, say, open a PowerPoint directly using a real copy of PowerPoint running in the virtual machine.\nIt works great, except for one thing. When Windows is running, your disk thrashes like crazy. Thats probably not very surprising since the Windows VM image is in a file, so everything goes through the Windows file system and then the Linux file system. Between my SSD cache and my RAID array, theres a lot going on there. The performance wasnt bad, but the disk going wild was annoying, and it would freeze up here and there while the drive was overwhelmed.\nVirtually Reality, for Real\nBut what about WinApps? It points to a virtual machine in KVM or Docker. Why not let it point to a real piece of hardware on the network? I could put the Surface out of the way and then run my choice of Windows software right on my desktop with hardware speeds only limited by the network.\nRather than keep you in suspense, it worked. The program allows you to set your virtualization type and one of them is manual. Presumably, youd usually start a VM yourself, but in this case, just the IP address of the remote Windows box is all you need.\nIs it that Easy?\nWell, almost. There were two small issues. For one thing, you need to run an install script on the Windows box. You can do that before you set up, while you enable Remote Desktop. Heres what the directions say:\nNext, you will need to make some registry changes to enable RDP Applications to run on the system. Start by downloading the RDPApps.reg file, right-clicking on the Raw button, and clicking on Save target as. Repeat the same thing for the install.bat and the NetProfileCleanup.ps1. Do not download the Container.reg.\nThe other issue is that I have two monitors that are separated, with one at the bottom left and one at the top right of a large rectangle, and lots of blank wall between them. The xfreerdp program hates that. I had to fiddle with the settings quite a bit, and you may have different results.\nOne thing I did to be safe was to go get the latest version of xfreerdp and install it. You can point to it in the WinApps configuration file. Sometimes, the programs in your distros repositories can be pretty old. I wanted to make sure I had the latest RDP client.\nFor normal operations, these options worked:\n\nRDP_FLAGS=\"/cert:tofu /sound /microphone +home-drive /span /multimon:force /mouse-relative /dynamic-resolution\"\nI also had to edit ~/.local/bin/winapps to change the options for the windows run (which starts a full-screen windows session) to:\n\n\n# Open Windows RDP session.\ndprint\"WINDOWS\"\n$FREERDP_COMMAND \\\n/d:\"$RDP_DOMAIN\"\\\n/u:\"$RDP_USER\"\\\n/p:\"$RDP_PASS\"\\\n/scale:\"$RDP_SCALE\"\\\n+auto-reconnect\\\n/monitors:0\\\n/wm-class:\"Microsoft Windows\"\\\n/t:\"Windows RDP Session [$RDP_IP]\"\\\n/v:\"$RDP_IP\"/dev/null \n\nBugs!\nWhile I was in there, I also fixed a bug. The script (and the installation script) cant figure out that my user is in the right group to run virtual machines, so if you plan on using real virtualization, you might have to fix it or, do what I did, and comment that test out of the main program and the installer. However, if you are using manual mode, that shouldnt be a problem. The installer also tells me that ~/.local/bin isnt on my path, but it is. Thats safe to ignore.\n\nThere seem to be some other issues. For example, while the installer sets up the ~/local/bin directory, it didnt add any links to my start menu. I think it was supposed to. Of course, it is trivial to just add your own menu items, which youll need to do for non-standard programs, anyway.\nProof in the Pudding\nWord on Linux the hard way!\nDoes it work? Well, theres Microsoft Word running on my KDE desktop. You might have to rearrange or resize a Window when you first launch it. If that bothers you, write a rule to fix the window position. Most of the time, it works well enough. You can also go full screen and back (Control+Alt+Enter). Anything you can normally do in a RDP session, you can do here.\nIs it perfect? Nope. You can, in theory, redirect USB devices, but it will be kludgy and probably slow. I still use KVM for things that have to talk to a USB device. Of course, you can also hang the USB device off the Windows machine. The default setup maps your home directory to Windows, but you can fix it to map other places, too (and make sure the config file knows where your removable media mounts, too). The system autodetects many apps, but there is a manual mode that can, in theory, run anything. Or, you can pull up Windows Explorer and run any application you want.\nThis would be a perfect thing to use an old computer sitting around or a junk store small form factor PC that you can pick up for nearly nothing. You wont be gaming on it or anything, but it is perfectly usable for that strange Word document or EPROM programmer software.\nHonestly, its gotten to the point where having WSL on Windows means I barely notice which OS Im on 99% of the time. Most of the apps I use will run on either system, but I still prefer the control I have on Linux and find it easier to fix issues there. At least dual booting is mostly a thing of the past.", "title": "Linux\u3067Windows\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7c21\u5358\u306b\u4f7f\u3046\u65b9\u6cd5", "body": "Linux\u304b\u3089Windows\u30a2\u30d7\u30ea\u3092\u7c21\u5358\u306b\u4f7f\u3046\u65b9\u6cd5\u3092\u7d39\u4ecb\u3002\u30b5\u30fc\u30d5\u30a7\u30b9\u30e9\u30c3\u30d7\u30c8\u30c3\u30d7\u3092\u6d3b\u7528\u3057\u3001WinApps\u3067\u52b9\u7387\u7684\u306b\u52d5\u304b\u3059\u3002", "titles": ["Linux\u3067Windows\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7c21\u5358\u306b\u4f7f\u3046\u65b9\u6cd5", "Surface Laptop 2\u306e\u518d\u751f\u3068Windows\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6d3b\u7528", "WinApps\u3092\u4f7f\u3063\u305fWindows\u30bd\u30d5\u30c8\u306e\u30ea\u30e2\u30fc\u30c8\u5b9f\u884c", "RDP\u3067\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u8d8a\u3048\u305f\u5b9f\u6a5f\u306e\u5229\u7528\u6cd5", "\u53e4\u3044PC\u3092\u6d3b\u7528\u3057\u305f\u5b9f\u8df5\u7684\u306aWindows\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u904b\u7528"]}