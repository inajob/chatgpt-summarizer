{"pubDate": "2023-10-12T15:30:52", "original_title": "Keypad Interface Module Reverse Engineers Pinouts So You Don\u2019t Have To", "link": "https://hackaday.com/2023/10/12/keypad-interface-module-reverse-engineers-pinouts-so-you-dont-have-to/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/10/keygo-feature.png", "original_content": "If youve scavenged some random keypads and want to reuse them in a project without the hassle of figuring out the pinouts, then [Cliff Biffle] has an interface module for you. The Keypad Go connects to the mystery keypad via an 8-pin 0.1 inch header, and talks to your own project using I2C and/or serial.\nYou could categorize the mechanism at work as machine learning of a sort, though its stretching definitions a bit, as there is no ChatGPT or GitHub Copilot wizardry going on here. But you must teach the module during an initial calibration sequence, assigning a 7-bit ASCII character to each key as you press it. Once trained, it responds to key presses by sending the pre-assigned character over the interface. Likewise, key releases send the same character but with the 8th bit set.\nThe heart of the board is either an STM32G030 or STM32C011/31, depending on parts availability we presume. I2C connectivity is over a four-pin STEMMA connector, and logic-level serial UART data is over a four-pin 0.1 inch pin header. [Cliff] plans to release the firmware and schematics as open source soon, after cleaning up the code a bit. The device is also for sale on Tindie, though it looks like they wont be back in stock until later on in the month.\nLongtime readers might recognize [Cliff] from his impressive m4vga project which we covered back in 2015, where he manages to generate 800600 VGA signals at 60 Hz from an STM32F4-family microcontroller.\n\n", "title": "\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u4f7f\u3044\u3084\u3059\u3044\u30ad\u30fc\u30d1\u30c3\u30c9\u3092\u518d\u5229\u7528\u3057\u3088\u3046\uff01", "body": "\u30df\u30b9\u30c6\u30ea\u30fc\u30ad\u30fc\u30d1\u30c3\u30c9\u3092\u518d\u5229\u7528\u3059\u308b\u305f\u3081\u306eKeypad Go\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u304c\u30ad\u30e3\u30ea\u30d6\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3044\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30dc\u30fc\u30c9\u306e\u4e2d\u5fc3\u306fSTM32G030\u307e\u305f\u306fSTM32C011/31\u3067\u3001I2C\u3068\u30b7\u30ea\u30a2\u30eb\u7d4c\u7531\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u63a5\u7d9a\u3067\u304d\u307e\u3059\u3002\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3068\u56de\u8def\u56f3\u306f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u3068\u3057\u3066\u30ea\u30ea\u30fc\u30b9\u4e88\u5b9a\u3067\u3059\u3002", "titles": ["\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u4f7f\u3044\u3084\u3059\u3044\u30ad\u30fc\u30d1\u30c3\u30c9\u3092\u518d\u5229\u7528\u3057\u3088\u3046\uff01", "7\u30d3\u30c3\u30c8ASCII\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u3092\u5272\u308a\u5f53\u3066\u308b\u30ad\u30e3\u30ea\u30d6\u30ec\u30fc\u30b7\u30e7\u30f3\u30b7\u30fc\u30b1\u30f3\u30b9\u304c\u5fc5\u8981\u306a\u30ad\u30fc\u30d1\u30c3\u30c9\u63a5\u7d9a\u30e2\u30b8\u30e5\u30fc\u30eb", "STM32G030\u307e\u305f\u306fSTM32C011/31\u3092\u642d\u8f09\u3057\u305f\u30ad\u30fc\u30d1\u30c3\u30c9Go\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u65b0\u767a\u58f2\uff01", "I2C\u3068\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3067\u81ea\u5206\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u3064\u306a\u304c\u308b\u30ad\u30fc\u30d1\u30c3\u30c9Go\u30e2\u30b8\u30e5\u30fc\u30eb", "\u96fb\u5b50\u5de5\u4f5c\u611b\u597d\u8005\u306b\u304a\u3059\u3059\u3081\uff01\u30ad\u30fc\u30d1\u30c3\u30c9Go\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u81ea\u5206\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\uff01"]}