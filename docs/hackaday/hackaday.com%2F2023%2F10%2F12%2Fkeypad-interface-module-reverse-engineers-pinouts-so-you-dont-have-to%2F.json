{"pubDate": "2023-10-12T15:30:52", "original_title": "Keypad Interface Module Reverse Engineers Pinouts So You Don\u2019t Have To", "link": "https://hackaday.com/2023/10/12/keypad-interface-module-reverse-engineers-pinouts-so-you-dont-have-to/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/10/keygo-feature.png", "original_content": "If youve scavenged some random keypads and want to reuse them in a project without the hassle of figuring out the pinouts, then [Cliff Biffle] has an interface module for you. The Keypad Go connects to the mystery keypad via an 8-pin 0.1 inch header, and talks to your own project using I2C and/or serial.\nYou could categorize the mechanism at work as machine learning of a sort, though its stretching definitions a bit, as there is no ChatGPT or GitHub Copilot wizardry going on here. But you must teach the module during an initial calibration sequence, assigning a 7-bit ASCII character to each key as you press it. Once trained, it responds to key presses by sending the pre-assigned character over the interface. Likewise, key releases send the same character but with the 8th bit set.\nThe heart of the board is either an STM32G030 or STM32C011/31, depending on parts availability we presume. I2C connectivity is over a four-pin STEMMA connector, and logic-level serial UART data is over a four-pin 0.1 inch pin header. [Cliff] plans to release the firmware and schematics as open source soon, after cleaning up the code a bit. The device is also for sale on Tindie, though it looks like they wont be back in stock until later on in the month.\nLongtime readers might recognize [Cliff] from his impressive m4vga project which we covered back in 2015, where he manages to generate 800600 VGA signals at 60 Hz from an STM32F4-family microcontroller.\n\n"}