{"pubDate": "2025-07-03T02:00:27", "original_title": "Reservoir Sampling, or How to Sample Sets of Unknown Size", "link": "https://hackaday.com/2025/07/02/reservoir-sampling-or-how-to-sample-sets-of-unknown-size/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/06/Reservoir-sampling.png", "original_content": "Selecting a random sample from a set is simple. But what about selecting a fair random sample from a set of unknown or indeterminate size? Thats where reservoir sampling comes in, and [Sam Rose] has a beautifully-illustrated, interactive guide to how reservoir sampling works. As far as methods go, its as elegant as it is simple, and particularly suited to fairly sampling dynamic datasets like sipping from a firehose of log events.\nWhile reservoir sampling is simple in principle its not entirely intuitive to everyone. Thats what makes [Sam]s interactive essay so helpful; he first articulates the problem before presenting the solution in a way that makes it almost self-evident.\n[Sam] uses an imaginary deck of cards to illustrate the problem. If one is being dealt cards one at a time from a deck of unknown size (there could be ten cards, or a million), how can one choose a single card in a way that gives each an equal chance of having been selected? Without collecting them all first?\nIn a nutshell, the solution is to make a decision every time a new card arrives: hold onto the current card, or replace it with the new one. Each new card is given a 1/n chance of becoming held, where n is the number of cards weve seen so far. Thats all it takes. No matter when the dealer stops dealing, each card that has been seen will have had an equal chance of ending up the one selected.\nThere are a few variations which [Sam] also covers, and practical ways of applying it to log collection, so check it out for yourself.\nIf [Sam]s knack for illustrating concepts in an interactive way is your jam, we have one more to point out. Our own Al Williams wrote a piece on Turing machines; the original universal machine being a theoretical device with a read/write head and infinite paper tape. A wonderful companion to that article is [Sam]s piece illustrating exactly how such a Turing machines would work in an interactive way.", "title": "- \u77e5\u3089\u308c\u3056\u308b\u30b5\u30a4\u30ba\u304b\u3089\u306e\u516c\u5e73\u306a\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6cd5\uff1a\u30ea\u30b6\u30fc\u30d0\u30fc\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u306e\u89e3\u8aac", "body": "\u4e0d\u660e\u306a\u30b5\u30a4\u30ba\u306e\u30c7\u30fc\u30bf\u304b\u3089\u516c\u5e73\u306b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3059\u308b\u624b\u6cd5\u3001\u30ea\u30b6\u30fc\u30d0 sampling\u306b\u3064\u3044\u3066\u306e\u89e3\u8aac\u3002", "titles": ["- \u77e5\u3089\u308c\u3056\u308b\u30b5\u30a4\u30ba\u304b\u3089\u306e\u516c\u5e73\u306a\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6cd5\uff1a\u30ea\u30b6\u30fc\u30d0\u30fc\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u306e\u89e3\u8aac", "- \u30ea\u30b6\u30fc\u30d0\u30fc\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3092\u4f7f\u3063\u305f\u52d5\u7684\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u6271\u3044\u65b9", "- \u30ab\u30fc\u30c9\u30b2\u30fc\u30e0\u3067\u5b66\u3076\uff1a\u30ea\u30b6\u30fc\u30d0\u30fc\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u306e\u7c21\u5358\u306a\u7406\u89e3", "- \u5404\u30ab\u30fc\u30c9\u306b\u5e73\u7b49\u306a\u30c1\u30e3\u30f3\u30b9\u3092\uff01\u30ea\u30b6\u30fc\u30d0\u30fc\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u306e\u4ed5\u7d44\u307f", "- \u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u65b9\u6cd5\u3067\u5b66\u3076Turing\u30de\u30b7\u30f3\u3068\u30ea\u30b6\u30fc\u30d0\u30fc\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u306e\u95a2\u9023\u6027"]}