{"pubDate": "2025-07-14T15:30:21", "original_title": "Coroutines in C", "link": "https://hackaday.com/2025/07/14/coroutines-in-c/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/07/state.png", "original_content": "It is virtually a rite of passage for C programmers to realize that they can write their own cooperative multitasking system. C is low-level enough, and there are several ways to approach the problem, so, like Jedi light sabers, each one is a little bit different. [Christoph Wolcher] took his turn, and not only is his system an elegant hack, if thats not an oxymoron, it is also extremely well documented.\nBefore you dig in, be warned. [Christoph] fully admits that you should use an RTOS. Or Rust. Besides, after he finished, he discovered the protothreads library, which does a similar task in a different way that is both more cool and more terrible all at the same time.\nOnce you dig in, though, youll see the system relies on state machines. Just to prove the point, he writes a basic implementation, which is fine, but hard to parse and modify. Then he shows a simple implementation using FreeRTOS, which is fine except for, you know, needing FreeRTOS.\nUsing a simple set of macros, it is possible to get something very similar to the RTOS version that runs independently, like the original version. Most of the long code snippets show you what code the macros generate. The real code is short and to the point.\nMultiprocessing is a big topic. You can have processes, threads, fibers, and coroutines. Each has its pros and cons, and each has its place in your toolbox.", "title": "- \u81ea\u5206\u3060\u3051\u306e\u5354\u8abf\u578b\u30de\u30eb\u30c1\u30bf\u30b9\u30ad\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308d\u3046", "body": "C\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306f\u5354\u8abf\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u3092\u81ea\u4f5c\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3002Christoph Wolcher\u306b\u3088\u308b\u30b7\u30b9\u30c6\u30e0\u306f\u512a\u308c\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3042\u308a\u3002", "titles": ["- \u81ea\u5206\u3060\u3051\u306e\u5354\u8abf\u578b\u30de\u30eb\u30c1\u30bf\u30b9\u30ad\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308d\u3046", "- C\u8a00\u8a9e\u3067\u5b66\u3076\u72b6\u614b\u6a5f\u68b0\u306e\u57fa\u672c\u5b9f\u88c5", "- \u5e38\u99d0OS\u3084Rust\u306e\u5229\u7528\u3092\u63a8\u5968\u3059\u308b\u7406\u7531", "- FreeRTOS\u3068\u81ea\u4f5c\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u306e\u6bd4\u8f03", "- \u30d7\u30ed\u30bb\u30b9\u3084\u30b9\u30ec\u30c3\u30c9\u306e\u4f7f\u3044\u5206\u3051\u3092\u8003\u3048\u308b"]}