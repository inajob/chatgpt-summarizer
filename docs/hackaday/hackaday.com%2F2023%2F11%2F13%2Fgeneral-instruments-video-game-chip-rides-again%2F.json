{"pubDate": "2023-11-13T09:00:33", "original_title": "General Instruments Video Game Chip Rides Again", "link": "https://hackaday.com/2023/11/13/general-instruments-video-game-chip-rides-again/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/11/pong.png", "original_content": "Early video games like Pong were not computer-controlled. They used discrete logic to generate the TV signals. As you might expect, the market exploded when you could get all the logic on a chip. Many of those games used the General Instrument AY-3-8500-1 chip, and [Jeff Tranter] shows us the chip and the many different yet similar games it could play. You can check out the retro gameplay in the video below.\nThese were marvels of their day, although, by todays standards, they are snoozers. All the games were variations on a theme. A ball moved and hit paddles, walls, or goals. A few available light gun games were rarely seen in the wild because they took extra components.\n\nThe datasheet shows how simple the device was. Two CMOS chips and a couple of transistors put you in business. [Jeff] built his own board using the device, which is, of course, no longer made, but still available on the surplus market. It is great to see how simple this chip makes it.\nYou may not remember General Instruments, but they started the PIC chip and still exist in some form as part of ARRIS, which was spun off from Motorola and later bought by another General Instrument spinoff CommScope. General Semiconductor is another part of the brand that still operates.\nWeve seen this pulled off before, both with real chips and emulated chips. If you want to see what hardware goes into a Pong game and even simulate it, we can help with that, too.\n", "title": "\u300c\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u9650\u3089\u308c\u3066\u3044\u308b\u304c\u3001\u61d0\u304b\u3057\u3044\u30b2\u30fc\u30e0\u30c1\u30c3\u30d7\u3092\u4f7f\u3063\u305f\u30d3\u30c7\u30aa\u30b2\u30fc\u30e0\u300d", "body": "\u6614\u306e\u30d3\u30c7\u30aa\u30b2\u30fc\u30e0\u306f\u30c6\u30ec\u30d3\u4fe1\u53f7\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u96fb\u5b50\u56de\u8def\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3057\u305f\u3002General Instrument AY-3-8500-1\u30c1\u30c3\u30d7\u3092\u4f7f\u3063\u305f\u30b2\u30fc\u30e0\u3082\u3042\u308a\u3001\u305d\u306e\u30c1\u30c3\u30d7\u3068\u30b2\u30fc\u30e0\u306e\u8a73\u7d30\u3092\u7d39\u4ecb\u3057\u3066\u3044\u307e\u3059\u3002", "titles": ["\u300c\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u9650\u3089\u308c\u3066\u3044\u308b\u304c\u3001\u61d0\u304b\u3057\u3044\u30b2\u30fc\u30e0\u30c1\u30c3\u30d7\u3092\u4f7f\u3063\u305f\u30d3\u30c7\u30aa\u30b2\u30fc\u30e0\u300d", "\u300c\u5ec3\u308c\u305f\u30c1\u30c3\u30d7\u3092\u4f7f\u3063\u305f\u30c7\u30a3\u30b9\u30af\u30ea\u30fc\u30c8\u30ed\u30b8\u30c3\u30af\u30b2\u30fc\u30e0\u306e\u9b45\u529b\u300d", "\u300c\u7c21\u5358\u306aCMOS\u30c1\u30c3\u30d7\u3067\u4f5c\u3089\u308c\u305f\u30b2\u30fc\u30e0\u30dc\u30fc\u30c9\u3092\u4f5c\u308a\u307e\u305b\u3093\u304b\uff1f\u300d", "\u300cPong\u30b2\u30fc\u30e0\u306b\u4f7f\u308f\u308c\u305fGeneral Instrument\u306e\u30c1\u30c3\u30d7\u3092\u7d39\u4ecb\u300d", "\u300c\u30b2\u30fc\u30e0\u696d\u754c\u3092\u5909\u3048\u305fGeneral Instruments\u306e\u5b58\u5728\u3068\u305d\u306e\u5f8c\u306e\u5c55\u958b\u300d"]}