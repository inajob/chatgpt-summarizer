{"pubDate": "2024-02-13T06:00:02", "original_title": "Tandy Pocket Computer Assembly is\u2026 Weird", "link": "https://hackaday.com/2024/02/12/tandy-pocket-computer-assembly-is-weird/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/02/ppc.png", "original_content": "Radio Shack had a long history of buying things overseas, having their name slapped on them, and selling them in the United States. That was the case with the Tandy Pocket Computers, which were in that awkward space between calculators and full-blown computers. Like many computers of those days, if you wanted to do anything interesting, you needed to turn to assembly language. But as [Old Vintage Computing Research] recalls, the assembly for these little devices was very strange, even for an assembly language. He found out that there is a reason it is so strange and shares it in a deep dive into the devices machine code history.\nThe story starts with the Japanese government. In 1969, the ministry in charge of such things decided that it wouldnt be fair for people who knew a particular computer to have an advantage when taking the Information Technology Engineer exam. So, logically, they made up a fictitious instruction set and architecture for the test. Since no one used it, no one would have an unfair advantage.\nHowever, eventually, Japanese manufacturers started making computers that used the architecture. The architecture was COMP-X, and the assembler was CAP-X. The post covers the history of machines either using the architecture or emulating it going back to the 1970s. It eventually winds up at the Sharp and Casio pocket computers that would wear Radio Shack livery in much of the world, especially the United States.\n\nWhat is interesting is that the computers actually used a different native assembly language but emulated COMP-X. However, in most cases, it was the only assembler supported for end users. The fake CPU was a 16-bit machine like many minicomputers of the 1970s. There were three general registers, a program counter, a condition code register, and a base address register.\nWhat it didnt have was a stack or interrupts. It appears the design is somewhat similar to the PDP-8, but not a clone. In addition, the pocket computers had a few nonstandard instructions for things like I/O.\nWhen we say deep dive, we arent kidding. The post goes into quite a bit of detail regarding the actual language and how to accomplish different tasks. But even if you dont want to write pocket computer programs, it is a great glimpse into the past. It isnt related to the post, but if you want to see what many of the old Radio Shack pocket computers looked like, check out the video below. Or you can dig out your back issues of Hackaday. People still hack on these things.\n", "title": "\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306b\u5275\u3089\u308c\u305f\u67b6\u7a7a\u306e\u547d\u4ee4\u30bb\u30c3\u30c8\u306e\u6b74\u53f2\uff1a\u30e9\u30b8\u30aa\u30b7\u30e3\u30c3\u30af\u306e\u30dd\u30b1\u30c3\u30c8\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc", "body": "\u30e9\u30b8\u30aa\u30b7\u30e3\u30c3\u30af\u306f\u9577\u3044\u9593\u3001\u6d77\u5916\u3067\u7269\u3092\u8cfc\u5165\u3057\u3001\u81ea\u793e\u30d6\u30e9\u30f3\u30c9\u3067\u30a2\u30e1\u30ea\u30ab\u3067\u8ca9\u58f2\u3057\u3066\u304d\u307e\u3057\u305f\u3002\u305d\u306e\u3088\u3046\u306a\u4e00\u4f8b\u304c\u3001Tandy\u793e\u306e\u30dd\u30b1\u30c3\u30c8\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u3067\u3057\u305f\u3002\u8208\u5473\u6df1\u3044\u3053\u3068\u306b\u3001\u3053\u308c\u3089\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306fCOMP-X\u3068\u3044\u3046\u5efa\u7269\u4e0a\u306e\u547d\u4ee4\u30bb\u30c3\u30c8\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u305d\u306e\u8a73\u7d30\u306a\u8a00\u8a9e\u3084\u7570\u306a\u308b\u30bf\u30b9\u30af\u306e\u9054\u6210\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u3002", "titles": ["\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306b\u5275\u3089\u308c\u305f\u67b6\u7a7a\u306e\u547d\u4ee4\u30bb\u30c3\u30c8\u306e\u6b74\u53f2\uff1a\u30e9\u30b8\u30aa\u30b7\u30e3\u30c3\u30af\u306e\u30dd\u30b1\u30c3\u30c8\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc", "\u30e9\u30b8\u30aa\u30b7\u30e3\u30c3\u30af\u306e\u30dd\u30b1\u30c3\u30c8\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u304c\u7570\u69d8\u3067\u3042\u3063\u305f\u7406\u7531\uff1a\u30de\u30b7\u30f3\u30b3\u30fc\u30c9\u306e\u6b74\u53f2\u306b\u3064\u3044\u3066", "\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30e6\u30fc\u30b6\u30fc\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u552f\u4e00\u306e\u30a2\u30bb\u30f3\u30d6\u30e9\uff1a\u30e9\u30b8\u30aa\u30b7\u30e3\u30c3\u30af\u306e\u30dd\u30b1\u30c3\u30c8\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306e\u72ec\u81ea\u306e\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e", "\u30e9\u30b8\u30aa\u30b7\u30e3\u30c3\u30af\u304c\u4e16\u754c\u4e2d\u3067\u8ca9\u58f2\u3057\u305f\u30b7\u30e3\u30fc\u30d7\u3068\u30ab\u30b7\u30aa\u306e\u30dd\u30b1\u30c3\u30c8\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\uff1a\u65e5\u672c\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u5f71\u97ff", "\u30e9\u30b8\u30aa\u30b7\u30e3\u30c3\u30af\u306e\u30dd\u30b1\u30c3\u30c8\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306e\u4e2d\u306b\u306e\u305e\u304f\uff1a\u904e\u53bb\u3078\u306e\u4e00\u77a5"]}