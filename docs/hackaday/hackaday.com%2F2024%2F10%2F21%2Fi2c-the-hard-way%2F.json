{"pubDate": "2024-10-21T11:00:10", "original_title": "I2C the Hard Way", "link": "https://hackaday.com/2024/10/21/i2c-the-hard-way/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/10/bb.png", "youtube": "https://www.youtube.com/watch?v=6bdbk9Mryv0", "original_content": "[Igor] has an AS5600 magnetic rotary encoder chip on a breakout board. Normally, youd think that was an easy device to work with since it has an I2C interface. But [Igor] wanted to do it the hard way. Whats the hard way? By hand. He directly manipulates the clock and data lines using some push buttons. You can see how it goes in the video below.\nThis is possible because the controlling device  in this case [Igor]  gets to set the clock rate, and theres no reason it has to be regular. We have to admit that it never occurred to us to do this, but we have written bit banged I2C-like code before.\n\nThe practical value of this isnt clear, but we were still impressed. Certainly, if you had to write code or build hardware to operate the protocol, this would tell you quickly if you understood the fundamentals. We wonder if his next trick will be RS232 via Morse code key.\nIf you want a deep dive into the world of I2C, we can help with that. This reminded us of the old paperclip computer book that showed how to make your own computer with oatmeal boxes and paperclips. You just had to do the work of the CPU yourself.\n"}