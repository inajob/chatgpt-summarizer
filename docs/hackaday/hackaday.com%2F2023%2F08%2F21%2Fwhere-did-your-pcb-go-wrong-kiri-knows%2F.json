{"pubDate": "2023-08-22T05:00:20", "original_title": "Where Did Your PCB Go Wrong? KiRI knows", "link": "https://hackaday.com/2023/08/21/where-did-your-pcb-go-wrong-kiri-knows/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/08/kiri_sch.png", "original_content": "When working on a PCB design in KiCad, its helpful that the files are all text and can easily be checked into Git or other source control. However, stepping back through the revisions to determine where precisely a trace got routed wrong can be tricky. [Leandro] started with a simple script that exported the KiCad project to an image for inspection  over time it grew into a full-blown visual diff tool named KiCad Revision Inspector (KiRI).\nThe primary mechanism exports the revisions of a KiCad 5, 6, or 7 project to SVG, which can then be compared via a handy onion skin view. As this is a tool written for those using KiCad, shortcuts are a huge part of the experience. A command line interface generates artifacts to view the diff in any web browser. As these outputs have the KiRI tooling baked in, it is relatively easy to archive the output as a build artifact and allow easy access to review design changes.\nFor the long-time reader, you might remember back in 2018 talked about another diffing tool called plotgitsch (which this KiRI uses for KiCad 5 projects). KiCad has grown significantly in the last five years. It might be time to update our tips to utilize Git better for your PCB designs.\n\n\nThanks to [Marcel] for sending this one in."}