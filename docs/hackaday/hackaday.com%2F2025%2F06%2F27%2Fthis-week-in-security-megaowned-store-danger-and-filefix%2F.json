{"pubDate": "2025-06-27T11:00:41", "original_title": "This Week in Security: MegaOWNed, Store Danger, and FileFix", "link": "https://hackaday.com/2025/06/27/this-week-in-security-megaowned-store-danger-and-filefix/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/01/darkarts.jpg", "original_content": "Earlier this year, I was required to move my server to a different datacenter. The tech that helped handle the logistics suggested I assign one of my public IPs to the servers Baseboard Management Controller (BMC) port, so I could access the controls there if something went sideways. I passed on the offer, and not only because IPv4 addresses are a scarce commodity these days. No, Ive never trusted a servers built-in BMC. For reasons like this MegaOWN of MegaRAC, courtesy of a CVSS 10.0 CVE, under active exploitation in the wild.\nThis vulnerability was discovered by Eclypsium back in March and its a pretty simple authentication bypass, exploited by setting an X-Server-Addr header to the device IP address and adding an extra colon symbol to that string. Send this along inside an HTTP request, and its automatically allowed without authentication. This was assigned CVE-2024-54085, and for servers with the BMC accessible from the Internet, it scores that scorching 10.0 CVSS.\nWere talking about this now, because CISA has added this CVE to the official list of vulnerabilities known to be exploited in the wild. And its hardly surprising, as this is a near-trivial vulnerability to exploit, and its not particularly challenging to find web interfaces for the MegaRAC devices using tools like Shodan and others.\nTheres a particularly ugly scenario thats likely to play out here: Embedded malware. This vulnerability could be chained with others, and the OS running on the BMC itself could be permanently modified. It would be very difficult to disinfect and then verify the integrity of one of these embedded systems, short of physically removing and replacing the flash chip. And malware running from this very advantageous position very nearly have the keys to the kingdom, particularly if the architecture connects the BMC controller over the PCIe bus, which includes Direct Memory Access.\nThis brings us to the really bad news. These devices are everywhere. The list of hardware that ships with the MegaRAC Redfish UI includes select units from AMD, Ampere Computing, ASRock, ARM, Fujitsu, Gigabyte, Huawei, Nvidia, Supermicro, and Qualcomm. Some of these vendors have released patches. But at this point, any of the vulnerable devices on the Internet, still unpatched, should probably be considered compromised.\nPatching Isnt Enough\nTo drive the point home that a compromised embedded device is hard to fully disinfect, we have the report from [Max van der Horst] at Disclosing.observer, detailing backdoors discovered in verious devices, even after the patch was applied.\nThese tend to hide in PHP code with innocent-looking filenames, or in an Nginx config. This report covers a scan of Citrix hosts, where 2,491 backdoors were discovered, which is far more than had been previously identified. Installing the patch doesnt always mitigate the compromise.\nVSCode\nMany of us have found VSCode to be an outstanding IDE, and the fact that its Open Source and cross-platform makes it perfect for programmers around the world. Except for the telemetry, which is built into the official Microsoft builds. Its Open Source, so the natural reaction from the community is to rebuild the source, and offer builds that dont have telemetry included. We have fun names like VSCodium and Cursor for these rebuilds. Kudos to Microsoft for making VSCode Open Source so this is possible.\nThere is, however, a catch, in the form of the extension marketplace. Only official VSCode builds are allowed to pull extensions from the marketplace. As would be expected, the community has risen to the challenge, and one of the marketplace alternatives is Open VSX. And this week, we have the story of how a bug in the Open VSX publishing code could have been a really big problem.\nWhen developers are happy with their work, and are ready to cut a release, how does that actually work? Basically every project uses some degree of automation to make releases happen. For highly automated projects, its just a single manual action  a kick-off of a Continuous Integration (CI) run  that builds and publishes the new release. Open VSX supports this sort of approach, and in fact runs a nightly GitHub Action to iterate through the list of extensions, and pull any updates that are advertised.\nVS Code extensions are Node.js projects, and are built using npm. So the workflow clones the repository, and runs npm install to generate the installable packages. Running npm install does carry the danger that arbitrary code runs inside the build scripts. How bad would it be for malicious code to run inside this nightly update action, on the Open VSX GitHub repository?\nA super-admin token was available as an environment variable inside this GitHub Action, that if exfiltrated would allow complete takeover of the Open VSX repository and unfettered access to the software contained therein. Theres no evidence that this vulnerability was found or exploited, and OpenVSX and Koi Security worked together to mitigate it, with the patch landing about a month and a half after first disclosure.\nFileFix\nTheres a new social engineering attack on the web, FileFix. Its a very simple, nearly dumb idea. By that I mean, a reader of this column would almost certainly never fall for it, because FileFix asks the user to do something really unusual. You get an email or land on a bad website, and it appears present a document for you. To access this doc, just follow the steps. Copy this path, open your File Explorer, and paste the path. Easy! The website even gives you a button to click to launch file explorer.\nThat button actually launches a file upload dialog, but thats not even the clever part. This attack takes advantage of two quirks. The first is that Javascript can inject arbitrary strings into the paste buffer, and the second is that system commands can be run from the Windows Explorer bar. So yes, copy that string, and paste it into the bar, and it can execute a command. So while its a dumb attack, and asks the user to do something very weird, its also a very clever intersection between a couple of quirky behaviors, and users will absolutely fall for this.\neMMC Data Extraction\nThe embedded MultiMediaCard (eMMC) is a popular option for flash storage on embedded devices. And Zero Day Initiative has a fascinating look into what it takes to pull data from an eMMC chip in-situ. An 8-leg EEPROM is pretty simple to desolder or probe, but the ball grid array of an eMMC is beyond the reach of mere mortals. If youre soldering skills arent up to the task, theres still hope to get that data off. The only connections needed are power, reference voltage, clock, a command line, and the data lines. If you can figure out connection points for all of those, you can probably power the chip and talk to it.\nOne challenge is how to keep the rest of the system from booting up and getting chatty. Theres a clever idea, to look for a reset pin on the MCU, and just hold that active while you work, keeping the MCU in a reset, and quiet, state. Another fun idea is to just remove the systems oscillator, as the MCU may depend on it to boot and do anything.\nBits and Bytes\nWhat would you do with 40,000 alarm clocks? Thats the question unintentionally faced by [Ian Kilgore], when he discovered that the loftie wireless alarm clock works over unsecured MQTT. On the plus side, he got Home Automation integration working.\nWhat does it look like, when an attack gets launched against a big cloud vendor? The folks at Cloud-IAM pull the curtain back just a bit, and talk about an issue that almost allowed an enumeration attack to become an effective DDoS. They found the attack and patched their code, which is when it turned into a DDoS race, that Cloud-IAM managed to win.\nThe Wire secure communication platform recently got a good hard look from the Almond security team. And while the platform seems to have passed with good grades, there are a few quirks around file sharing that you might want to keep in mind. For instance, when a shared file is deleted, the backing files arent deleted, just the encryption keys. And the UUID on those files serves as the authentication mechanism, with no additional authentication needed. None of the issues found rise to the level of vulnerabilities, but its good to know.\nAnd finally, the Centos Webpanel Control Web Panel has a pair of vulnerabilities that allowed running arbitrary commands prior to authorization. The flaws have been fixed in version 0.9.8.1205, but are trivial enough that this cPanel alternative needs to get patched on systems right away.", "title": "\u30e1\u30acRAC\u306e\u8106\u5f31\u6027\uff1a10.0 CVSS\u30b9\u30b3\u30a2\u306eBMC\u653b\u6483\u624b\u6cd5", "body": "\u30b5\u30fc\u30d0\u30fc\u306eBMC\u306b\u8106\u5f31\u6027\u304c\u898b\u3064\u304b\u308a\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u63a5\u7d9a\u304c\u5371\u967a\u306b\u3002\u30d1\u30c3\u30c1\u304c\u3042\u3063\u3066\u3082\u5b8c\u5168\u306a\u5bfe\u7b56\u306f\u96e3\u3057\u3044\u3002", "titles": ["\u30e1\u30acRAC\u306e\u8106\u5f31\u6027\uff1a10.0 CVSS\u30b9\u30b3\u30a2\u306eBMC\u653b\u6483\u624b\u6cd5", "VSCode\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u62e1\u5f35\u5e02\u5834\u554f\u984c\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u30ea\u30b9\u30af", "\u65b0\u305f\u306a\u30bd\u30fc\u30b7\u30e3\u30eb\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u653b\u6483\u300cFileFix\u300d\u306e\u624b\u53e3", "eMMC\u30c1\u30c3\u30d7\u304b\u3089\u306e\u30c7\u30fc\u30bf\u62bd\u51fa\uff1a\u57cb\u3081\u8fbc\u307f\u30c7\u30d0\u30a4\u30b9\u306e\u79d8\u5bc6", "CentOS Webpanel\u306e\u8106\u5f31\u6027\u3068\u65e9\u6025\u306a\u30d1\u30c3\u30c1\u9069\u7528\u306e\u91cd\u8981\u6027"]}