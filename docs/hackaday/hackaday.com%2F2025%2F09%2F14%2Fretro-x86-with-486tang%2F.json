{"pubDate": "2025-09-14T20:00:00", "original_title": "Retro x86 with 486Tang", "link": "https://hackaday.com/2025/09/14/retro-x86-with-486tang/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/09/fpga.png", "original_content": "Tang FPGA boards are affordable, and [nand2mario] has been trying to get an x86 core running on one for a while. Looks like it finally worked out, as there is an early version of the ao486 design on a Tang FPGA board using a Gowin device. That cores available on the MiSTer platform, which emulates games using an Altera Cyclone device.\nOf course, porting something substantial between FPGA architectures is not trivial. In addition, [nand2mario] made some changes. The original core uses DDR3 memory, but for the Tang and the 486, SDRAM makes more sense. The only problem is that the Tangs SDRAM is 16 bits wide, which would imply you need two cycles per 32-bit access. To mitigate this, the memory system runs at twice the main clock frequency. Of course, thats kind of double data rate, but not in the same way as DDR memory.\n\nThe MiSTer uses an ARM processors high-speed channel to link to the FPGA for disk access. The Tang board lacks a high-speed interface for this, so the disk storage is now on an SD card that the FPGA directly accesses. In addition, the first 128K of the SD card stores configuration settings that the FPGA now reads from that on boot up.\nOne of the most interesting things about the development was the use of Verilator to simulate the entire system, including things like the VGA card. It was possible to simulate booting to a DOS prompt, although it was slower than being on actual hardware, as you might expect. But, this lets you poke at the entire state of the system in a way that would be difficult on the actual hardware.\nWant to give it a try? The Tang boards are cheap. (We have one on a shelf waiting for a future post.) Or, you could go the simulation route.\nMiSTer has really put FPGAs on a lot of peoples radar. If you prefer the C64, thats available on a Tang board, too.", "title": "- Tang FPGA\u30dc\u30fc\u30c9\u3067\u306ex86\u30b3\u30a2\u5b9f\u88c5\u6210\u529f", "body": "Tang FPGA\u30dc\u30fc\u30c9\u306bx86\u30b3\u30a2\u304c\u79fb\u690d\u3055\u308c\u3001SD\u30ab\u30fc\u30c9\u3067\u30c7\u30a3\u30b9\u30af\u30a2\u30af\u30bb\u30b9\u304c\u5b9f\u73fe\u3002", "titles": ["- Tang FPGA\u30dc\u30fc\u30c9\u3067\u306ex86\u30b3\u30a2\u5b9f\u88c5\u6210\u529f", "- SDRAM\u3092\u7528\u3044\u305fao486\u8a2d\u8a08\u306e\u65b0\u305f\u306a\u6311\u6226", "- Verilator\u306b\u3088\u308b\u30b7\u30b9\u30c6\u30e0\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u5229\u70b9", "- Tang\u30dc\u30fc\u30c9\u3067\u306eSD\u30ab\u30fc\u30c9\u306b\u3088\u308b\u30c7\u30a3\u30b9\u30af\u30a2\u30af\u30bb\u30b9", "- MiSTer\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3068Tang\u30dc\u30fc\u30c9\u306e\u6bd4\u8f03"]}