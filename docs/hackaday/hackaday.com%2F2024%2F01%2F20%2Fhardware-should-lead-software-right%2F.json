{"pubDate": "2024-01-20T15:00:52", "original_title": "Hardware Should Lead Software, Right?", "link": "https://hackaday.com/2024/01/20/hardware-should-lead-software-right/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2017/10/computers.jpg", "original_content": "Once upon a time, about twenty years ago, there was a Linux-based router, the Linksys WRT54G. Back then, the number of useful devices running embedded Linux was rather small, and this was a standout. Back then, getting a hacker device that wasn\u2019t a full-fledged computer onto a WiFi network was also fairly difficult. This one, relatively inexpensive WiFi router got you both in one box, so it was no surprise that we saw rovers with WRT54Gs as their brains, among other projects.\nLong Live the WRT54G\nOf course, some people just wanted a better router, and thus the OpenWRT project was born as a minimal Linux system that let you do fancy stuff with the stock router. Years passed, and OpenWRT was ported to newer routers, and features were added. Software grew, and as far as we know, current versions won\u2019t even run on the minuscule RAM of the original hardware that gave it it\u2019s name.\nEnter the ironic proposal that OpenWRT \u2013 the free software group that developed their code on a long-gone purple box \u2013 is developing their own hardware. Normally, we think of the development flow going the other way, right? But there\u2019s a certain logic here as well. The software stack is now tried-and-true. They\u2019ve got brand recognition, at least within the Hackaday universe. And in comparison, developing some known-good hardware to work with it is relatively easy.\nWe\u2019re hardware hobbyists, and for us it\u2019s often the case that the software is the hard part. It\u2019s also the part that can make or break the user experience, so getting it right is crucial. On our hacker scale, we often choose a microcontroller to work with a codebase or tools that we want to use, because it\u2019s easier to move some wires around on a PCB than it is to re-jigger a software house of cards. So maybe OpenWRT\u2019s router proposal isn\u2019t backwards after all? How many other examples of hardware designed to fit into existing software ecosystems can you think of?\n\nThis article is part of the Hackaday.com newsletter, delivered every seven days for each of the last 200+ weeks. It also includes our favorite articles from the last seven days that you can see on the web version of the newsletter.\n\nWant this type of article to hit your inbox every Friday morning? You should sign up!\n\n"}