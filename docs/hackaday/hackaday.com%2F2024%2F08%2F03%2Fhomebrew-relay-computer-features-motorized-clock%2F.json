{"pubDate": "2024-08-03T17:00:00", "original_title": "Homebrew Relay Computer Features Motorized Clock", "link": "https://hackaday.com/2024/08/03/homebrew-relay-computer-features-motorized-clock/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/08/willrelay_feat.jpg", "youtube": "https://www.youtube.com/watch?v=KP4FK6AMIoc", "original_content": "Before today, we probably would have said that scratch-built relay computers were the sole domain of only the most wizardly of graybeards. But this impressive build sent in by [Will Dana] shows that not only are there young hardware hackers out there that are still bold enough to leave the transistor behind, but that they can help communicate how core computing concepts can be implemented with a bungle of wires and switches.\nCreated for his YouTube channel WillsBuilds, every component of this computer was built by [Will] himself. Each of the nine relay-packed protoboards inside the machine took hours to solder, and when that was done, he went out to the garage to start cutting the wood that would become the cabinet they all get mounted in.\nThe entire build process is documented in the video, and is interwoven with short segments that go deeper into the various concepts at play. If youve never been able to figure out how a box full of relays can add numbers together, this might be the video that finally makes it click for you (no pun intended).\nWe were particularly impressed with [Will]s determination to not let any modern technology sneak into his build. When researching other relay builds, he found that some of them relied on anachronistic components like the 555 timer or quartz crystals to generate the clock signal. That simply wouldnt do, so he initially tried to put together a variation of the clock circuit that [Paul Law] used in his gorgeous relay computer. In the end he couldnt quite get it working the way he wanted, so he went really old school and came up with a clock module that uses a motorized cam and microswitch to generate the necessary pulses.\nIn the era of the 10 cent microcontroller, when its often easier to write a few lines of code to get something working than figuring out how to do it with discrete components, this project is certainly refreshing. Especially when its coming from a younger maker. [Will] definitely came away from this build with several new skills under his belt and a new appreciation for concepts that many of us take for granted these days, and were looking forward to seeing what he comes up with next.\n"}