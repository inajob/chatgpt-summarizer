{"pubDate": "2025-08-23T14:00:31", "original_title": "Who is Your Audience?", "link": "https://hackaday.com/2025/08/23/who-is-your-audience/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2020/01/ResistorColors.jpg", "original_content": "Here at Hackaday HQ, we all have opinions about the way we like to do things. And no surprise, this extends to the way we like to lay out circuits in schematics. So when we were discussing our own takes on this piece on suggested schematic standards, it was maybe more surprising how much we did agree on than how much we had different preferred styles. But of course, it was the points where we disagreed that provoked the most interesting discussion, and that\u2019s when I had a revelation.\nBesides torturing electronics, we all also write for you all, and one thing we always have in mind is who we\u2019re writing for. The Hackaday audience, not to blow you up, is pretty knowledgeable and basically \u201cfull-stack\u201d in terms of the hardware/software spectrum. This isn\u2019t to say that everyone is a specialist in everything, though, and we also have certain archetypes in mind: the software type who is just starting out with hardware, the hardware type who isn\u2019t as savvy about software, etc. So, back to schematic layout: Who is your audience? It matters.\nFor instance, do you organize the pinout for an IC by pin number or by pin function, grouping the power pins and the ADC pins and so on? If your audience is trying to figure out the circuit logic, you should probably go functional. But if you are trying to debug a circuit, you\u2019re often looking at the circuit diagram to figure out what a given pin does, and the pin-number layout is more appropriate.\nDo you lay out the logical flow of the circuit in the schematic, or do you try to mimic the PCB layout? Again, it could depend on how your audience will be using it. If they have access to your CAD tool, and can hop back and forth seamlessly from schematic to PCB, the logical flow layout is the win. However, if they are an audience of beginners, or stuck with a PDF of the schematic, or trying to debug a non-working board, perhaps the physical layout is the right approach.\nAl Williams, who has experience with projects of a much larger scale than most of us self-taught hackers, doesn\u2019t even think that a schematic makes sense. He thinks that it\u2019s much easier to read and write the design in a hardware description language like VHDL. Of course, that\u2019s certainly true for IC designs, and probably also for boards of a certain complexity. But this is only true when your audience is also familiar with the HDL in question. Otherwise, you\u2019re writing in Finnish for an audience of Spaniards.\nBefore this conversation, I was thinking of schematic layout as Tom Nardi described it on the podcast \u2013 a step along the way to get to the fun parts of PCB layout and then to getting the boards in hand. But at least in our open-source hardware world, it\u2019s also a piece of the documentation, and a document that has an audience of peers who it pays to keep in mind just as much as when I\u2019m sitting down and writing this very newsletter. In some ways, it\u2019s the same thing.\n\nThis article is part of the Hackaday.com newsletter, delivered every seven days for each of the last 200+ weeks. It also includes our favorite articles from the last seven days that you can see on the web version of the newsletter.\n\nWant this type of article to hit your inbox every Friday morning? You should sign up!\n\n\n(And yeah, I know the featured image doesnt exactly fit the topic, but I love it anyway.)"}