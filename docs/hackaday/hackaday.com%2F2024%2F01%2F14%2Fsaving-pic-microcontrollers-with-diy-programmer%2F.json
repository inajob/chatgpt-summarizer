{"pubDate": "2024-01-14T15:00:15", "original_title": "Saving PIC Microcontrollers With DIY Programmer", "link": "https://hackaday.com/2024/01/14/saving-pic-microcontrollers-with-diy-programmer/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/01/programmer-main.jpeg", "original_content": "When working on a project, plenty of us will reach for an Atmel microcontroller because of the widespread prevalence of the Arduino platform. A few hackers would opt for a bit more modern part like an ESP32. But these Arduino-compatible platforms are far from the only microcontrollers available. The flash-based PIC family of microcontrollers is another popular choice. Since they arent quite as beginner or user-friendly, setting up a programmer for them is not as straightforward. [Tahmid] needed to program some old PIC microcontrollers and found the Pi Pico to be an ideal programmer.\nThe reason for reaching for the Pico in the first place was that [Tahmid] had rediscovered these decade-old microcontrollers in a parts bin but couldnt find the original programmer. Thanks to advances in technology in the last ten years, including the advent of micropython, the Pico turned out to be the ideal programmer. Micropython also enables a fairly simple drag-and-drop way of sending the .hex file to the PIC, so the only thing the software has to do is detect the PIC, erase it, and flash the .hex file. The only physical limitation is that the voltages needed for the PIC are much higher than the Pico can offer, but this problem is easily solved with a boost converter (controlled by the Pico) and a level shifter.\n[Tahmid] notes that theres plenty of room for speed and performance optimization, since this project optimized development time instead. He also notes that since the software side is relatively simple, it could be used for other microcontrollers as well. To this end, he made the code available on his GitHub page. Even if youre more familiar with the Arduino platform, though, theres more than one way to program a microcontroller like this project which uses the Scratch language to program an ESP32.", "title": "\"Arduino\u4e92\u63db\u30dc\u30fc\u30c9\u3067\u306f\u306a\u3044\uff01\u4ed6\u306e\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3082\u4f7f\u3063\u3066\u307f\u3088\u3046\"", "body": "Atmel\u3084ESP32\u4ee5\u5916\u306e\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3082\u4f7f\u3048\u308b\u3002\u30d4\u30b3\u3092\u4f7f\u3063\u3066\u30c7\u30d0\u30a4\u30b9\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3057\u3088\u3046\u3002", "titles": ["\"Arduino\u4e92\u63db\u30dc\u30fc\u30c9\u3067\u306f\u306a\u3044\uff01\u4ed6\u306e\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3082\u4f7f\u3063\u3066\u307f\u3088\u3046\"", "\"\u65e7\u578bPIC\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3078\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u306fPi Pico\u304c\u6700\u9069\"", "\"\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u3055\u308c\u305f\u30de\u30a4\u30af\u30edPython\u3067\u7c21\u5358\u306b.hex\u30d5\u30a1\u30a4\u30eb\u3092\u9001\u4fe1\u3059\u308b\u65b9\u6cd5\"", "\"\u30dc\u30fc\u30c9\u5236\u7d04\u3092\u89e3\u6c7a\uff01Pi Pico\u3092\u4f7f\u7528\u3057\u305f\u30d6\u30fc\u30b9\u30c8\u30b3\u30f3\u30d0\u30fc\u30bf\u30fc\u3068\u30ec\u30d9\u30eb\u30b7\u30d5\u30bf\u30fc\u306e\u7d44\u307f\u5408\u308f\u305b\"", "\"\u62e1\u5f35\u6027\u629c\u7fa4\uff01\u3053\u306e\u65b9\u6cd5\u306f\u4ed6\u306e\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306b\u3082\u9069\u7528\u53ef\u80fd\""]}