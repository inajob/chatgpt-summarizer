{"pubDate": "2023-08-21T11:00:21", "original_title": "Adding MMIO RAM On The RP2040", "link": "https://hackaday.com/2023/08/21/adding-mmio-ram-on-the-rp2040/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2021/01/RP2040-featured.jpg", "original_content": "[Dmitry Grinberg] is an adept tinkerer who wanted a much larger RAM space on his Raspberry Pi 2040 (RP2040) than the measly 264kb on-board SRAM. The chip does support 16MB of off-flash memory via a QSPI bus, but this must be accessed explicitly rather than being memory mapped. With clever trickery involving XIP (Execute in Place), Dmitry mapped 8MB of external QSPI RAM into the address space.\nXIP mode allows the chip to fetch data on-demand from an external chip and place it into RP2040 caches mapped at 0x10xxxxxx. The RP2040, although incredibly versatile, has a limitation \u2013 it can only perform read and execute operations in its XIP mode. The first step to solving this was to get data from persistent storage to RAM on boot. Armed with a dual-OR gate IC, an inverter, and two resistors, [Dmitry] can toggle the nCS pin that selects between flash and RAM. A first-stage bootloader copies the program from flash to RAM, then sets up XIP mode and launches into a second-stage loader.\n\nOf course, glitches couldnt resist making an appearance. The RP2040s GPIO IP block doesnt reset properly, so the nCS pin doesnt go back to selecting flash after reset. For [Dmitry], it wasnt a problem as he used an I2C IO expander and made the troublesome pin dance to his tune.\nThe next step was to write changes back to RAM when the cache was flushed. This is where the MPU (Memory Protection Unit) gets abused. Usually, a write to 0x10xxxxxx will flush the cache line. When a write happens, the MPU can trigger a hard fault by marking that region as read-only. The handler emulates the write instruction and flushes the cache line. From a high level, it seems pretty straightforward, but there are 127 different types of write instructions for ARMv6M. While most code is read-heavy rather than write-heavy, performance is still a concern. Luckily for him, memcpy clocked in at 36 Mbit/s at stock clock rates, a commendable achievement given the inherent challenges.\n[Dmitrys] groundbreaking code is accessible for download on his website under a BSD-2 license, allowing others to explore the potential of vast amounts of RAM on the RP2040 microcontroller. This innovative approach opens doors to all sorts of creative possibilities. Despite being a partial ARMv6 emulator, this isnt the first emulator weve seen on RP2040, as this RISC-V emulator attests.", "title": "\u30e9\u30ba\u30d9\u30ea\u30fc\u30d1\u30a4\u306eRP2040\u306b\u5927\u5bb9\u91cfRAM\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5\u3092\u767a\u898b", "body": "[Dmitry Grinberg]\u306f\u3001Raspberry Pi 2040\uff08RP2040\uff09\u306eRAM\u5bb9\u91cf\u3092\u5897\u3084\u3057\u305f\u3044\u3068\u8003\u3048\u300116MB\u306e\u30aa\u30d5\u30d5\u30e9\u30c3\u30b7\u30e5\u30e1\u30e2\u30ea\u3092\u4f7f\u3063\u30668MB\u306e\u5916\u90e8QSPI RAM\u3092\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u3088\u308a\u591a\u304f\u306eRAM\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u5f7c\u306e\u30b3\u30fc\u30c9\u306f\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3067\u5229\u7528\u53ef\u80fd\u3067\u3059\u3002", "titles": ["\u30e9\u30ba\u30d9\u30ea\u30fc\u30d1\u30a4\u306eRP2040\u306b\u5927\u5bb9\u91cfRAM\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5\u3092\u767a\u898b", "XIP\u30e2\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u3066\u5916\u90e8QSPI RAM\u3092\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306b\u3059\u308b", "\u554f\u984c\u306e\u30d4\u30f3\u3092\u64cd\u4f5c\u3057\u3066RP2040\u306eGPIO\u3092\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u65b9\u6cd5", "\u30ad\u30e3\u30c3\u30b7\u30e5\u30d5\u30e9\u30c3\u30b7\u30e5\u6642\u306bRAM\u3078\u306e\u30c7\u30fc\u30bf\u66f8\u304d\u8fbc\u307f\u3092\u53ef\u80fd\u306b\u3059\u308b\u65b9\u6cd5", "RP2040\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306b\u304a\u3044\u3066\u5927\u5bb9\u91cfRAM\u306e\u53ef\u80fd\u6027\u3092\u63a2\u308b\u305f\u3081\u306e\u65b0\u3057\u3044\u30a2\u30d7\u30ed\u30fc\u30c1"]}