{"pubDate": "2025-09-30T18:30:52", "original_title": "LLM Dialogue In Animal Crossing Actually Works Very Well", "link": "https://hackaday.com/2025/09/30/llm-dialogue-in-animal-crossing-actually-works-very-well/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/09/I-Replaced-Animal-Crossings-Dialogue-with-AI-by-Hacking-GameCube-Memory-0-33-screenshot-banner.png", "original_content": "In the original Animal Crossing from 2001, players are able to interact with a huge cast of quirky characters, all with different interests and personalities. But after youve played the game for awhile, the scripted interactions can become a bit monotonous. Seeing an opportunity to improve the experience, [josh] decided to put a Large Language Model (LLM) in charge of these interactions.\u00a0Now when the player chats with other characters in the game, the dialogue is a lot more engaging, relevant, and sometimes just plain funny.\nHow does one go about hooking a modern LLM into a 24-year-old game built for an entirely offline console? [josh]s clever approach required a lot of poking about, and did a good job of leveraging some of the games built-in features for a seamless result.\n\nIn addition to distinct personalities, villagers have a small shared gossip memory.\nThe game runs on a GameCube emulator, and the first thing needed is a way to allow the game and an external process\u00a0 to communicate with each other. To do this, [josh] uses a modding technique called Inter-Process Communication (IPC) via shared memory. This essentially defines a range of otherwise unused memory as a mailbox that both the game state and an external process (like a Python script) can access.\n[josh] then nailed down the exact memory locations involved in dialogue. This was a painstaking process that required a lot of memory scanning, but eventually [josh] found where the game stores the active speaker and the active dialogue text when the player speaks to a villager. That wasnt all, though. The dialogue isnt just plain ASCII, it contains proprietary control codes that sprinkle things like sounds, colors, and speaker emotes into conversations.\nThe system therefore watches for dialogue, and when a conversation is detected, the Writer LLM  furnished with all necessary details via the shared memory mailbox  is asked to create relevant dialogue for the character in question. A second Director LLM takes care of adding colors, facial expressions, and things of that nature via control codes.\n[josh] even added a small bit of shared gossip memory among all villagers which keeps track of who said what to who, and how they felt about it. This perhaps unsurprisingly results in a lot of villagers grumbling about just how much currency flows directly to Tom Nook, the raccoon proprietor of the local store.\nA very clever detail pointed out by [Simon Willison] is how [josh] deals with the problem of the game expecting dialogue to be immediately available at the given memory location. After all, LLMs dont work instantly. Turns out [josh]s code makes clever use of a built-in dialogue control code that creates a short pause. Whenever a dialogue screen opens, a few short pauses ensure that the LLMs work is done in time.\nIf Animal Crossing isnt retro enough, or you prefer your LLMs to be a little more excitable, AI commentary for Pong\u00a0is totally a thing.\n", "title": "- \u65b0\u3057\u3044\u52d5\u7269\u306e\u4ea4\u53cb\u95a2\u4fc2\uff1aLLM\u3092\u4f7f\u3063\u305f\u52d5\u7269\u306e\u68ee\u306e\u5bfe\u8a71\u6539\u826f", "body": "2001\u5e74\u306e\u300c\u3069\u3046\u3076\u3064\u306e\u68ee\u300d\u306bAI\u3092\u8ffd\u52a0\u3057\u3001\u5bfe\u8a71\u3092\u6d3b\u6027\u5316\u3002\u30bb\u30fc\u30d6\u3057\u305f\u8a18\u61b6\u3067\u6751\u4eba\u305f\u3061\u306e\u4f1a\u8a71\u3082\u3088\u308a\u9762\u767d\u304f\u3002", "titles": ["- \u65b0\u3057\u3044\u52d5\u7269\u306e\u4ea4\u53cb\u95a2\u4fc2\uff1aLLM\u3092\u4f7f\u3063\u305f\u52d5\u7269\u306e\u68ee\u306e\u5bfe\u8a71\u6539\u826f", "- 2001\u5e74\u306e\u30b2\u30fc\u30e0\u306b\u73fe\u4ee3\u6280\u8853\u3092\u878d\u5408\uff1aGameCube\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u3067\u306eLLM\u6d3b\u7528", "- \u5de5\u592b\u3092\u51dd\u3089\u3057\u305f\u30a4\u30f3\u30bf\u30fc\u30d7\u30ed\u30bb\u30b9\u901a\u4fe1\u306b\u3088\u308b\u30b2\u30fc\u30e0\u3068LLM\u306e\u9023\u643a", "- \u9b45\u529b\u7684\u306a\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u5bfe\u8a71\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u30e1\u30e2\u30ea\u8abf\u67fb\u306e\u82e6\u52b4", "- \u89aa\u5bc6\u306a\u6751\u4eba\u306e Gossip \u30e1\u30e2\u30ea\u306b\u3088\u308b\u30e6\u30cb\u30fc\u30af\u306a\u30b9\u30c8\u30fc\u30ea\u30fc\u5c55\u958b"]}