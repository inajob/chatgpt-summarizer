{"pubDate": "2025-10-20T23:00:32", "original_title": "High Performance Motor Control With FOC From the Ground Up", "link": "https://hackaday.com/2025/10/20/high-performance-motor-control-with-foc-from-the-ground-up/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/10/vector_field_oriented_control_excessive_overkill_youtube.jpg", "youtube": "https://www.youtube.com/watch?v=ujofKWmGChw", "original_content": "Testing the FOC-based motor controller. (Credit: Excessive Overkill, YouTube)\nVector Control, also known as Field Oriented Control or FOC is an AC motor control scheme that enables fine-grained control over a connected motor, through the precise control of its phases. In a recent video [Excessive Overkill] goes through the basics and then the finer details of how FOC works, as well as how to implement it. These controllers generally uses a proportional integral (PI) loop, capable of measuring and integrating the position of the connected motor, thus allowing for precise adjustments of the applied vector.\nIf this controller looks familiar, it is because we featured it previously in the context of reviving old industrial robotic arms. Whether you are driving the big motors on an industrial robot, or a much smaller permanent magnet AC (PMAC) motor, FOV is very likely the control mechanism that you want to use for the best results. Of note is that most BLDC motors are actually also PMACs with ESC to provide a DC interface.\n\nThe actual driving is done with two MOSFETs per phase, forming a half-bridge, switching between the two rails to create the requisite PWM signal for each phase. Picking the right type of MOSFET was somewhat hard, especially due to the high switching currents and the high frequency at 25 kHz. The latter was picked to prevent audible noise while driving a robot. Ultimately SiC MOSFETs were picked, specially the GeneSiC G3R30MT12K. Of note here are the four legs, with a fourth Kelvin Source pin added. This is to deal with potential gate drive issues that are explained in the video.\nWith the hardware in place, whether following the [Excessive Overkill] GitHub projects or not, what makes all of it work is the software. This is where the microcontroller aspect is essential, as it has to do all the heavy lifting of calculating the new optimal vector and thus the current levels per phase. In this controller an STM32F413 is used, which generates the PWM signals to drive the half-bridges, while reading the measurements from the motors with its ADC.\nAs can be seen in the resulting use of this controller with old industrial robots, the FOC controller works quite well, with quiet and smooth operation. This performance is why were likely to see FOC and PMAC motors used in applications like 3D printers in the future, though the rule of good enough makes the cost of an FOC controller still a tough upsell over a simple open loop stepper-based system.\n", "title": "FOC\u5236\u5fa1\u306b\u3088\u308b\u7cbe\u5bc6\u30e2\u30fc\u30bf\u30fc\u5236\u5fa1\u306e\u57fa\u672c", "body": "FOC\u5236\u5fa1\u304c\u30e2\u30fc\u30bf\u30fc\u3092\u7cbe\u5bc6\u306b\u5236\u5fa1\u3002\u52d5\u753b\u3067\u57fa\u672c\u304b\u3089\u5fdc\u7528\u3092\u89e3\u8aac\u3002SiC MOSFET\u3068STM32F413\u4f7f\u7528\u3002", "titles": ["FOC\u5236\u5fa1\u306b\u3088\u308b\u7cbe\u5bc6\u30e2\u30fc\u30bf\u30fc\u5236\u5fa1\u306e\u57fa\u672c", "MOSFET\u9078\u5b9a\u306e\u91cd\u8981\u6027\u3068\u305d\u306e\u8ab2\u984c", "STM32F413\u3092\u7528\u3044\u305fFOC\u30e2\u30fc\u30bf\u30fc\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5b9f\u88c5", "\u7523\u696d\u7528\u30ed\u30dc\u30c3\u30c8\u3067\u306eFOC\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u52b9\u679c", "FOC\u5236\u5fa1\u306e\u672a\u6765\uff1a3D\u30d7\u30ea\u30f3\u30bf\u30fc\u3078\u306e\u5fdc\u7528\u53ef\u80fd\u6027"]}