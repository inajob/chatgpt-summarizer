{"pubDate": "2024-10-21T23:00:07", "original_title": "Zero To Custom MacroPad In 37 Easy Steps", "link": "https://hackaday.com/2024/10/21/zero-to-custom-macropad-in-37-easy-steps/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/10/Screenshot-2024-10-21-122535-featured.png", "youtube": "https://www.youtube.com/watch?v=PetCHwrCgGk", "original_content": "[Jeremy Weatherford] clearly has a knack for explaining projects well enough for easy reproduction but goes way further than most and has created a four-part YouTube series detailing every step from project inception to the final assembly, covering all aspects of 3D modelling and PCB design for a custom MacroPad design.\u00a0Many tools are introduced along the way,\u00a0all of which help reduce complexity and, by extension, the scope for errors. As every beginner hacker knows, early successes breed confidence and make for better and more ambitious projects.\nPart 1 covers the project motivation and scope and introduces a\u00a0keyboard layout editor\u00a0tool. This tool allows one to take a layout idea and generate a JSON file, which is then used to drive\u00a0keyboard tools. XYZ to produce a usable KiCAD project. The tool only generates a PCB project and an associated netlist file. No schematic is created; you dont need one for a simple layout.\nA very basic keyboard layout\nPart 2 is a walkthrough of the design process in KiCAD, culminating in ordering the PCB from JLCPCB and assembling the surface-mount parts. This particular design uses a controller based on the Sea-Picro RP2040 module, but there are many options if you have other preferences. [Jeremy] shows whats possible with the selected suppliers, but you need not follow this step precisely if you have other ideas or want to use someone local.\nPart 3 covers exporting the mechanical aspects of the PCB out of KiCAD and into a 3D CAD program, specifically OnShape. [Jeremy] covers some crucial details, such as how to read the mechanical drawing of the keys to work out where to place the top plate. Its very easy to plough straight in at this stage and make a design which cannot be assembled! The plan is to use a simple laser-cut box with a bottom plate with mounting holes lining up with those on the PCB. A Top plate is created by taking the outline of the PCB and adding a little margin. An array of rectangular cutouts are designed for the keys to protrude, lining up perfectly with where the keys would be when mounted on the PCB below.\u00a0 The sides of the case are formed from laser-cut sections that lock into each other and the laser-cut base\u2014using the laser joint feature-script addon tool from the OnShape community channel. A second feature script addon is used to auto-layout the laser-cut components onto a single sheet. A CAM application called Kiri Moto is used to export for laser cutting and is available on the OnShape store.\n\nPart 4 concerns the firmware. The QMK WSL build is compiled on Windows using WSL, minimizing the barrier to entry for intrepid hackers who are likely to start out with Windows-based hardware. The QMK layout is configured as an ortho_4x4, but [Jeremy] calmly and clearly explains how the other layouts are used and how they align with the earlier design choices. Finally, the VIAL keyboard layout editor is shown to be used for testing the finished macropad, and how it is used for programming those delicious macros we want to emit into the world.\nMacropads are very individual things, and you really need to be pushing the limits of productivity to need one, let alone build a custom device. Heres one for those who get stuck in MS Teams calls a lot. If youre into video editing, thats a valid use case. Video editing macropads have existed for decades, but have they been made out of wood?\n\n\n\n\n", "title": "\u81ea\u4f5cMacropad\u306e\u4f5c\u6210\u65b9\u6cd5\u3092\u5fb9\u5e95\u89e3\u8aac\uff01", "body": "[Jeremy Weatherford]\u306f\u3001\u30ab\u30b9\u30bf\u30e0MacroPad\u30c7\u30b6\u30a4\u30f3\u306e\u305f\u3081\u306e3D\u30e2\u30c7\u30ea\u30f3\u30b0\u3068PCB\u8a2d\u8a08\u306e\u3059\u3079\u3066\u306e\u5074\u9762\u3092\u8a73\u7d30\u306b\u8aac\u660e\u3057\u305fYouTube\u30b7\u30ea\u30fc\u30ba\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u521d\u5fc3\u8005\u306e\u6210\u529f\u304c\u81ea\u4fe1\u3092\u91b8\u6210\u3057\u3001\u3088\u308a\u826f\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u751f\u307f\u51fa\u3059\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u8a2d\u8a08\u30d7\u30ed\u30bb\u30b9\u3001\u30c4\u30fc\u30eb\u306e\u7d39\u4ecb\u3001PCB\u306e\u6ce8\u6587\u3001\u7d44\u307f\u7acb\u3066\u3001\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306b\u81f3\u308b\u307e\u3067\u3092\u30ab\u30d0\u30fc\u3057\u3066\u3044\u307e\u3059\u3002", "titles": ["\u81ea\u4f5cMacropad\u306e\u4f5c\u6210\u65b9\u6cd5\u3092\u5fb9\u5e95\u89e3\u8aac\uff01", "KiCAD\u3092\u4f7f\u7528\u3057\u305fPCB\u30c7\u30b6\u30a4\u30f3\u306e\u57fa\u790e\u3092\u5b66\u307c\u3046", "3D CAD\u30bd\u30d5\u30c8\u3092\u4f7f\u3063\u3066Macropad\u306e\u5916\u89b3\u30c7\u30b6\u30a4\u30f3\u3092\u8003\u3048\u3088\u3046", "QMK\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3068VIAL\u30a8\u30c7\u30a3\u30bf\u3092\u4f7f\u7528\u3057\u305fMacropad\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u65b9\u6cd5", "\u500b\u6027\u7684\u306aMacropad\u3092\u81ea\u4f5c\u3057\u3066\u52b9\u7387\u30a2\u30c3\u30d7\u3057\u3088\u3046"]}