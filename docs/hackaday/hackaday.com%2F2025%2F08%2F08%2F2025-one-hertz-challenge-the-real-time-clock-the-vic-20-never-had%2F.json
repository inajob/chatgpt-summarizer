{"pubDate": "2025-08-08T18:30:23", "original_title": "2025 One Hertz Challenge: The Real-Time Clock The VIC-20 Never Had", "link": "https://hackaday.com/2025/08/08/2025-one-hertz-challenge-the-real-time-clock-the-vic-20-never-had/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/08/7388961754095048579-e1754461884423.jpeg", "original_content": "Like many early microcomputers, the Commodore VIC-20 did not come with an interna real-time clock built into the system. [David Hunter] has seen fit to rectify that with an add-on module as his entry to the 2025 One Hertz Challenge.\n[David]s project was inspired by a product that Hayes produced in the 1980s, which provided a serial-port based real-time clock solution for computers that lacked one on board. The heart of the project is an Arduino Uno, which itself uses a Dallas DS3231 RTC module to keep accurate time. [David] then drew from an IEC driver developed by [Lars Pontoppidan] for the MM2IEC project. This enables the Arduino to report the time to the VIC-20 via its IEC port.\nThe project is a neat way to provide a real-time clock source to programs written in Commodore BASIC. Its also perfectly compatible with the IEC bus, so it can be daisy chained along with printers and disk drives without issue. [David] hasnt tested it with a Commodore 64, but he suspects it should work just as well on that platform, too.\nIf youve ever wanted to build something clock-based for the VIC-20 but didnt know how, this is a great piece of hardware to solve that problem. Meanwhile, you might find joy in reading about real-time clock hacks for other systems like the Raspberry Pi. Meanwhile, if youre working on your own nifty timekeeping projects, dont hesitate to let us know!\n \n\n\n", "title": "- VIC-20\u306b\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30af\u30ed\u30c3\u30af\u3092\u8ffd\u52a0\u3059\u308b\u624b\u6cd5", "body": "VIC-20\u5411\u3051\u306bArduino\u3092\u4f7f\u3063\u305f\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30af\u30ed\u30c3\u30af\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u958b\u767a\u3002", "titles": ["- VIC-20\u306b\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30af\u30ed\u30c3\u30af\u3092\u8ffd\u52a0\u3059\u308b\u624b\u6cd5", "- Arduino\u3092\u4f7f\u3063\u305fVIC-20\u7528\u306e\u6642\u8a08\u30e2\u30b8\u30e5\u30fc\u30eb\u4f5c\u6210", "- IEC\u30dd\u30fc\u30c8\u3067VIC-20\u306b\u6642\u523b\u3092\u9001\u4fe1\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "- Commodore BASIC\u3067\u4f7f\u7528\u3067\u304d\u308b\u6642\u8a08\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u69cb\u7bc9", "- VIC-20\u5411\u3051\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u5236\u4f5c\u30a2\u30a4\u30c7\u30a2\u3068\u30d2\u30f3\u30c8"]}