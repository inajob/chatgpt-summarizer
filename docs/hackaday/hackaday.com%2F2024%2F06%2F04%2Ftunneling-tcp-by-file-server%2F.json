{"pubDate": "2024-06-04T18:30:09", "original_title": "Tunneling TCP By File Server", "link": "https://hackaday.com/2024/06/04/tunneling-tcp-by-file-server/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/06/fw.png", "original_content": "You want to pass TCP traffic from one computer to another, but theres a doggone firewall in the way. Can they both see a shared file? Turns out, thats all you need. Well, that and some software from [fiddyschmitt].\nIf you think about it, it makes sense. Unix treats most things as a file, so it is pretty easy to listen on a local TCP port and dump the data into a shared file. The other side reads the file and dumps the same data to the desired TCP port on its side. Another file handles data in the other direction. Of course, the details are a bit more than that, but thats the basic idea.\nPerformance isnt going to be wonderful, and the files keep growing until the program detects that they are bigger than 10 megabytes. When that happens, the program purges the file.\nThe code is written in C# and there are binaries for Windows and Linux on the release page. The examples show using shared files via Windows share and RDP, but we imagine any sort of filesystem that both computers can see would work. Having your traffic stuffed into a shared file is probably not great for security but, you know, you are already jumping a firewall, so\nOf course, no firewall can beat an air gap. Unless you can control the fans or an LED."}