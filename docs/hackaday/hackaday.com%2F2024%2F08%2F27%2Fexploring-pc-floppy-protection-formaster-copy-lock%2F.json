{"pubDate": "2024-08-28T05:00:01", "original_title": "Exploring PC Floppy Protection: Formaster Copy-Lock", "link": "https://hackaday.com/2024/08/27/exploring-pc-floppy-protection-formaster-copy-lock/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/08/kings_quest_disk01-featured.png", "original_content": "[GloriousCow] has started working on a series of investigations into the various historical floppy disk copy protection schemes used in the early days of the IBM PC and is here with the first of these results, specifically Formasters Copy-Lock.\nThis is the starting sector of track 6. It looks empty, but its not quite.\nThe game in question is Kings Quest by Sierra Entertainment, which used a booter disk with the Copy-Lock protection scheme. Instead of having to boot DOS separately, you could just insert this disk and the game would launch automatically. Early copy protections often used simple methods, like adding sectors with non-standard sizes or tampering with sector CRC values to create disk errors. Copy-Lock employed several such tricks together, making it challenging for standard floppy disk hardware to replicate. In the case of Copy-Lock, Sector 1 on track 6 was intentionally written as only 256 bytes, with a 256-byte blank section to fill the gap. Additionally, the CRC was also altered to add another layer of protection.\nWhen attempting to read the disk, the PC BIOS interrupt routine assumes its looking for a standard 512-byte sector, so when a read sector command is issued to locate the sector, it never finds it. To detect a dodgy copy, the game bypasses the BIOS and talks directly to the floppy disk controller using some custom code. The first part of the code uses the standard INT 13h routine to seek to track 6, sector 1, where it expects a fail since there is no valid sector there. Next, the floppy controller sends the read track command to perform a raw dump of all 512 bytes at this address and looks for a magic number, 0xF7, sitting in the final byte. That empty second half of the short sector is indeed not empty and is the check the game makes to determine if it was written with the Copy-Lock capable hardware. That last point is pertinent; you cant create this disk structure with a standard IBM PC floppy disk controller; you need specialised hardware that can write different-sized sectors and incorrect CRCs, and that costs money to acquire.\nWe recently covered the copy protection scheme used for Dungeon Master on the Atari ST and the Amiga. If youre thinking less about how a floppy got cracked and copied and more about how to preserve these digital relics, check this out!"}