{"pubDate": "2024-06-07T15:30:43", "original_title": "Comparing x86 and 68000 in an FPGA", "link": "https://hackaday.com/2024/06/07/comparing-x86-and-68000-in-an-fpga/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/06/micro_x86_68k-featured.png", "original_content": "[Michael Kohn] started programming on the Motorola 68000 architecture and then, for work reasons, moved over to the Intel x86 and was not exactly pleased by the latter chips perceived shortcomings. In the 80s, the 68000 was a very popular chip, powering everything from personal computers to arcade machines, and looking at its architecture and ease of programming, you can see why this was.\nFast-forward a few years, and [Mikael] decided to implement both cores in an FPGA to compare real applications, you know, for science. As an extra bonus, [Mike] also compares the performance of a minimal RISC-V implementation on the same hardware, taken from an earlier RISC-V project (which you should also check out !)\nUtilizing their Java Grinder application (also pretty awesome, especially the retro console support), a simple Mandelbrot fractal generator was used as a non-trivial workload to produce binaries for each architecture, and the result was timed. Unsurprisingly, for CISC architectures, the 68000 and x86 code sizes were practically identical and significantly smaller than the equivalent RISC-V. Still, looking at the execution times, the 68000 beat the x86 hands down, with the newer RISC-V speeding along to take pole position. [Mike] admits that these implementations are minimal, with no pipelining, so they could be sped up a little.\nAlso, its not a totally fair race. As youll note from the RISC-V implementation, there was a custom RISC-V instruction implemented to perform the Mandelbrot generators iterator. This computes the complex operation Z = Z2 + C, which, as fellow fractal nerds will know, is where a Mandelbrot generator spends nearly all the compute time. We suspect thats the real reason RISC-V came out on top.\nIf actual hardware is more your cup of tea, you could build a minimal 68k system pretty easily, provided you can find the chips. The current ubiquitous x86 architecture, as odd as it started out, is here to stay for the foreseeable future, so youd just better get comfortable with it!\n\n"}