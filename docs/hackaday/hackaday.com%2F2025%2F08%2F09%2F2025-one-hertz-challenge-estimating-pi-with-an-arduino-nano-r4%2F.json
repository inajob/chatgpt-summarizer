{"pubDate": "2025-08-09T20:00:29", "original_title": "2025 One Hertz Challenge: Estimating Pi With An Arduino Nano R4", "link": "https://hackaday.com/2025/08/09/2025-one-hertz-challenge-estimating-pi-with-an-arduino-nano-r4/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/08/Estimacion-de-PI-con-Arduino-Nano-R4-nanor4-arduino-maker-matematicas-0-39-screenshot-1-e1754463614145.png", "original_content": "Humanity pretty much has Pi figured out at this point. Weve calculated it many times over and are confident about what it is down to many, many decimal places. However, if you fancy estimating it with some electronic assistance, you might find this project from [Roni Bandini] interesting.\n[Roni] programmed an Arduino Nano R4 to estimate Pi using the Monte Carlo method. For this specific case, it involves drawing a circle inscribed inside a square. Points are then randomly scattered inside the square, and checked to see if they lie inside or outside the circle based on their position and distance of the circles outline from the center point of the square. By taking the ratio of the points inside the circle to the total number of points, you get an approximation of the ratio of the square and circles areas, which is equal to Pi/4. Thus, multiply the ratio by 4, and youve got your approximation of Pi.\n[Roni] coded a program to run the Monte Carlo simulation on the Arduino Nano R4, taking advantage of the mathematical benefits of its onboard Floating Point Unit. It generates 100 new samples for the Monte Carlo approximation every second, improving the estimation of pi as it goes. It then displays the result on a 7-segment display, and beeps as it goes. [Roni] readily admits the project is a little too close in appearance to a classic Hollywood bomb.\nWeve seen some other neat Pi-calculating projects before, too.\n\n\n \n\n\n", "title": "- Arduino\u3067\u30e2\u30f3\u30c6\u30ab\u30eb\u30ed\u6cd5\u3092\u7528\u3044\u3066\u03c0\u3092\u63a8\u5b9a\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "body": "Arduino\u3067\u30e2\u30f3\u30c6\u30ab\u30eb\u30ed\u6cd5\u3092\u4f7f\u3044\u3001\u5186\u306e\u4e2d\u306e\u70b9\u304b\u3089\u03c0\u3092\u63a8\u5b9a\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3002", "titles": ["- Arduino\u3067\u30e2\u30f3\u30c6\u30ab\u30eb\u30ed\u6cd5\u3092\u7528\u3044\u3066\u03c0\u3092\u63a8\u5b9a\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "- 7\u30bb\u30b0\u30e1\u30f3\u30c8\u8868\u793a\u3067\u03c0\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u8a08\u7b97\u3059\u308b\u4ed5\u7d44\u307f", "- \u30b8\u30e5\u30e9\u30b7\u30c3\u30af\u8a08\u7b97\uff1fArduino Nano R4\u306b\u3088\u308b\u03c0\u306e\u30e6\u30cb\u30fc\u30af\u306a\u63a8\u5b9a\u65b9\u6cd5", "- \u30e2\u30f3\u30c6\u30ab\u30eb\u30ed\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u03c0\u3092\u7b97\u51fa\u3059\u308b\u96fb\u5b50\u5de5\u4f5c", "- \u7c21\u5358\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u884c\u3046\u03c0\u306e\u63a8\u5b9a\u3068\u305d\u306e\u9b45\u529b"]}