{"pubDate": "2024-01-04T18:00:29", "original_title": "The World Of Web Browsers Is In A Bad Way", "link": "https://hackaday.com/2024/01/04/the-world-of-web-browsers-is-in-a-bad-way/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/12/web-browsers-featured.jpg", "original_content": "There once was a man who invented a means for publishing scientific documents using hypertext. He made his first documents available from his NeXT cube, and a lot of the academics who saw them thought it was a great idea. They took the idea, expanded it, and added graphics, and pretty soon people who werent scientists wanted to use it too. It became the Next Big Thing, and technology companies new and old wanted a piece of the pie.\nYou all know the next chapter of this story. Its the mid 1990s, and Microsoft, having been caught on the back foot after pursuing The Microsoft Network as a Compuserve and AOL competitor, did an about-turn and set out to conquer the Web. Their tool of choice was Microsoft Internet Explorer 3, which since it shipped with Windows 95 and every computer that mattered back then came with Windows 95, promptly entered a huge battle with Netscapes Navigator browser. Web standards were in their infancy so the two browsers battled each other by manipulating the underlying technologies on which the Web relied. Microsoft used their Embrace and extend strategy to try to Redmondify everything, and Netscape got lost in the wilderness with Netscape 4, a browser on which nightmarish quirks were the norm. By the millennium it was Internet Explorer that had won the battle, and though some of the more proprietary Microsoft web technologies had fallen by the wayside, we entered the new decade in a relative monoculture.\nWhen Using Another Browser Was An Act Of Rebellion\nGoogle enlisted the comic-book artist Scott McCloud to help launch their new browser.\nWhat saved us from Microsoft having a de facto control over access to the web was the existence of several other browser engines. Opera Softwares browser had been with us since 1995, but it was joined by first Apples Safari emerging from the open-source Konqueror in 2003, then Phoenix Firebird Firefox in 2004 from the ashes of Netscapes legacy. These new contenders were sleek and fast, with features such as tabbed browsing that made the Microsoft browser feel very stale. When Google took Safaris WebKit engine and a new Javascript system in 2008 to make Google Chrome, the writing was on the wall, and Chrome overtook the Redmond offering early in the next decade.\nTen years ago then, the browser world looked pretty healthy. Chrome was most popular, followed by MSIE, then Firefox and the others. Crucially though, there were four different browser engines among the major contenders, so no one entity could exert control over web standards. Gone were the days when websites had to have different code for different browsers, if you wrote a website properly it would display in all of the browsers equally well.\nIt seems like a golden age from a perspective here in 2024 though, because in the last decade the number of browser engines has dropped to two, with one on life support. Such has been the success of Chrome that its engine has been adopted by all the browsers which matter, with Firefox the only significant holdout with its Gecko engine against a steeply declining market share. In a couple of decades weve gone from a browser monoculture in which one huge technology company has a near-monopoly, to a browser monoculture in which another huge technology company has a near-monopoly. Sadly Googles days of having a Dont be evil motto are far behind it, so we think this is of huge concern.\nThe Only New Fully-Featured Browser Engine Is Probably Hiding In A Niche Hobby OS\nLadybird still has some rough edges, but is a remarkable achievement.\nA few months ago I reviewed a hobby OS called SerenityOS, and was particularly excited by its web browser. Ladybird is a browser that needs more development to be ready for the big time, but at the same time its small development team have achieved the near-impossible feat of writing from scratch a fully-functional modern web browser. That you have to look to such a small and niche project to find what may be the only full-featured modern browser engine still in active development which isnt part of the Webkit or Gecko family should be all the confirmation you need that theres something seriously wrong in the world of web browsers. If this doesnt concern you, it should.\nWhen considering whats to be done about this its easy to find people laying into Mozillas management decisions as being at the root of Firefoxs near-demise. But while its certainly true that there have been some surprising courses of action at\u00a0 the top in the organisation, its probably not the whole story. The fact remains that Firefox is still under development and is still a damn good freely available browser. If it can no longer command enough of a percentage of the browser market to remain relevant then thats not the fault of the software itself but the browser landscape. Perhaps not enough people care any more or perhaps its just too easy a choice to develop using Webkit, but either way if Web standards are to remain beyond the direction of a single entity then its vital that some attention be paid to the failing contender.\nIt would be easy to end this piece with an exhortation to download Firefox and give up your Webkit browser, but that is oddly not the solution. What the Web needs is a plurality of browser engines not a duality, and returning to that state is not something fixable by a software switch. There needs to be a moment of collective reflection in which we consider whether were happy with a\u00a0de facto monoculture, and assuming that there is then the will for something to be done, to then change the way we look at web browsers. It should no longer be the norm to treat a new Webkit-based browser as an entirely new browser, and as a community we should find ways to encourage the development of other engines. Weve got here by complacency and seeing fixing the Web as a done deal, and we need to un-learn that position."}