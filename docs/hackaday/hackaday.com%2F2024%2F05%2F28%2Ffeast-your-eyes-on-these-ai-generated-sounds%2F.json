{"pubDate": "2024-05-28T11:00:23", "original_title": "Feast Your Eyes on These AI-Generated Sounds", "link": "https://hackaday.com/2024/05/28/feast-your-eyes-on-these-ai-generated-sounds/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/05/soundimage_feat.jpg", "original_content": "The radio hackers in the audience will be familiar with a spectrogram display, but for the uninitiated, its basically a visual representation of how a range of frequencies are changing with time. Usually such a display is used to identify a clear transmission in a sea of noise, but with the right software, its possible to generate a signal that shows up as text or an image when viewed as a spectrogram. Musicians even occasionally use the technique to hide images in their songs. Unfortunately, the audio side of such a trick generally sounds like gibberish to human ears.\nOr at least, it used to. Students from the University of Michigan have found a way to use diffusion models to not only create a spectrogram image for a given prompt, but to do it with audio that actually makes sense given what the image shows. So for example if you asked for a spectrogram of a race car, you might get an audio track that sounds like a revving engine.\n\n\nThe first step of the technique is easy enough  two separate pre-trained models are used, Stable Diffusion to create the image, and Auffusion4 to produce the audio. The results are then combined via weighted average, and enter into an iterative denoising process to refine the end result. Normally the process produces a grayscale image, but as the paper explains, a third model can be kicked in to produce a more visually pleasing result without impacting the audio itself.\nUltimately, neither the visual nor audio component is perfect. But they both get close enough that you get the idea, and that alone is pretty impressive. We wont hazard to guess what practical applications exist for this technique, but the paper does hint at some potential use for steganography. Perhaps something to keep in mind the next time we try to hide data in an episode of the Hackaday Podcast.", "title": "\u97f3\u58f0\u306b\u5fdc\u3058\u305f\u753b\u50cf\u751f\u6210\u6280\u8853", "body": "\u30e9\u30b8\u30aa\u30cf\u30c3\u30ab\u30fc\u306f\u3001\u30b9\u30da\u30af\u30c8\u30ed\u30b0\u30e9\u30e0\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306b\u7cbe\u901a\u3057\u3066\u3044\u308b\u3002\u5468\u6ce2\u6570\u306e\u7bc4\u56f2\u304c\u6642\u9593\u3068\u3068\u3082\u306b\u3069\u306e\u3088\u3046\u306b\u5909\u5316\u3059\u308b\u304b\u3092\u8996\u899a\u7684\u306b\u8868\u73fe\u3059\u308b\u3082\u306e\u3067\u3001\u97f3\u697d\u5bb6\u306f\u6642\u3005\u66f2\u306b\u753b\u50cf\u3092\u96a0\u3059\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u3002\u30df\u30b7\u30ac\u30f3\u5927\u5b66\u306e\u5b66\u751f\u305f\u3061\u306f\u3001\u97f3\u58f0\u3068\u753b\u50cf\u3092\u5408\u308f\u305b\u305f\u30b9\u30da\u30af\u30c8\u30ed\u30b0\u30e9\u30e0\u3092\u751f\u6210\u3059\u308b\u65b9\u6cd5\u3092\u898b\u3064\u3051\u305f\u3002", "titles": ["\u97f3\u58f0\u306b\u5fdc\u3058\u305f\u753b\u50cf\u751f\u6210\u6280\u8853", "\u30b9\u30da\u30af\u30c8\u30ed\u30b0\u30e9\u30e0\u3092\u6d3b\u7528\u3057\u305f\u97f3\u58f0\u51e6\u7406", "\u30c7\u30a3\u30d5\u30e5\u30fc\u30b8\u30e7\u30f3\u30e2\u30c7\u30eb\u3092\u4f7f\u7528\u3057\u305f\u97f3\u58f0\u751f\u6210", "\u30e6\u30cb\u30d0\u30fc\u30b7\u30c6\u30a3\u30fb\u30aa\u30d6\u30fb\u30df\u30b7\u30ac\u30f3\u306e\u5b66\u751f\u306b\u3088\u308b\u97f3\u58f0\u51e6\u7406\u6280\u8853", "\u97f3\u58f0\u304b\u3089\u7406\u89e3\u3067\u304d\u308b\u30b9\u30da\u30af\u30c8\u30ed\u30b0\u30e9\u30e0\u753b\u50cf\u751f\u6210\u6280\u8853"]}