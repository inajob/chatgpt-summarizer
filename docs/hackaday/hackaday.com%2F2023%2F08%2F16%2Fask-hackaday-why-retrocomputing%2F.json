{"pubDate": "2023-08-16T17:00:08", "original_title": "Ask Hackaday: Why Retrocomputing?", "link": "https://hackaday.com/2023/08/16/ask-hackaday-why-retrocomputing/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2022/05/vcfeast22_gallery7.jpg", "original_content": "I recently dropped in on one of the Vintage Computer Festival events, and it made me think about why people  including myself  are fascinated with old computer technology. In my case, I lived through a lot of it, and many of the people milling around at VCF did too, so it could just be nostalgia. But there were also young people there.\nOut of curiosity, I asked people about the appeal of the old computers on display there. Overwhelmingly, the answer was: you can understand the whole system readily. Imagine how long it would take you to learn all the hardware and software details of your current desktop computer CPU. Then add your GPU, the mass storage controllers, and your network interface. I dont mean knowing the part numbers, specs, and other trivialities. I mean being able to program, repair, and even enhance it.\n\nKeep It Simple\nConsider the relative complexity. An Intel 8080 CPU has 6,000 transistors and 76 instructions. An i7-940 has around 731 million transistors! It has multiple instruction sets and extensions so much so it is hard to get an exact count. There are multiple cores and complex memory caches.\nEven the 8080 was complex compared to some of the old CPUs. The RCA 1802 was famous for being fully static and having a DMA system so you could enter data by hand without needing to burn an EPROM to get it started. The 6502 had about 3,500 transistors. It was deliberately made simple to gain speed and save costs. Both the 1802 and 6502 had simpler power and clock requirements, too.\nCould these little machines do what our computers today can do? Not really, but they can do a lot. Whats more, you can readily learn to program them, design with them, and build them.\nRetro Doesnt Have to Mean Old\nThis leads to an interesting effect. I think people like these machines because they are simple, not because they are old. That means that replicas are valued more than in some other areas. A replica of an old book or car is of limited interest. But a replica Altair 8800? There have been many, and they are usually in high demand, especially since the actual computer is frightfully expensive and finicky to keep running today. Then there are the retro-style machines. The Hackaday Supercon 2022 Badge comes to mind. It isnt an old computer, but it seems like one. Many people had a great time learning about the badge and hacking it.\nGet Started\nIf you havent gotten the retrocomputing bug yet, there are a lot of ways to get started. First, you can emulate almost any old computer you like on a PC or even, sometimes, in a browser. This usually costs nothing, and you can get a good flavor of how a machine works. In addition, the emulators usually are decked-out systems with everything included. They also frequently include debuggers that anyone who used the real machine would have killed for back in the day. Think youll miss the front panel switches and lights? Maybe not. You can find emulation for everything from old mainframes, minicomputers, microcontroller boards, and pre-PCs like the venerable TRS-80.\nThe next step up is to build your emulator with something like a Raspberry Pi or an Arduino. You can also find FPGA recreations of old processors and computers. These machines can get very fancy or be very simple. It is hard to explain, but there is a big difference between booting CP/M in a window on your PC and booting it on a box with blinking lights on it. Doesnt make sense, but it is still true.\nWhen you are ready to move on from that, you can still buy many of these old processors either from inventories still hanging around or, in some cases, they are still made for some reason. You often have to blend new parts with old ones, but you can have the satisfaction of running a real CPU. Sometimes people try to make near-perfect recreations of old hardware. Sometimes they just shove all the support hardware into an Arduino for a cheap and easy build. Either way, you are still running on the authentic CPU.\nFinally, you can find old machines and either spend a fortune or spend a lot of time repairing them. Maybe youll even do both! At least the repair work is feasible and enjoyable. Some computers were wildly popular and still easy to find. Others are very rare  you even occasionally see one that is one-of-a-kind. Those can take some detective work.\nDo You?\nDo you retrocompute? If not, why not? If you do, why? Is there old software you cant live without? Is there a certain game that you like better than the modern counterparts? Do you enjoy being able to interface hardware to a machine without developing a PCIe interface? Or is it simply nostalgia? After all, people collect old cars, old radios, and old books. Maybe you dont really need a reason. Let us know what you think in the comments."}