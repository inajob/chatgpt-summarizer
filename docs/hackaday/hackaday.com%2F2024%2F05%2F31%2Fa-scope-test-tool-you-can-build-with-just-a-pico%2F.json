{"pubDate": "2024-05-31T15:30:18", "original_title": "A Scope Test Tool You Can Build With Just a Pico", "link": "https://hackaday.com/2024/05/31/a-scope-test-tool-you-can-build-with-just-a-pico/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/05/hadimg_siggen_feat.png", "original_content": "Ever wanted to see how well your oscilloscope adheres to its stated capabilities? What if you buy a new scope and need a quick way to test it lest one of its channels its broken, like [Paul Wasserman] had happen to him? Now you only need a Pi Pico and a few extra components to make a scope test board with a large variety of signals it can output, thanks to [Paul]s Sig Gen Pi Pico firmware.\nDespite the name its not a signal generator as we know it, as its not flexible in the signals it generates. Instead, it creates a dozen signals at more or less the same time  from square waves of various frequencies and duty cycles, to a PWM-driven DAC driving eight different waveforms, to Manchester-encoded data I2C/SPI/UART transfers for all your protocol decoder testing.\nEverything is open source under the BSD 3-Clause license, and theres even two PDFs with documentation and a user manual, not to mention the waveform screenshots for your own reference.\nIts seriously impressive how many features [Paul] has fit into a single firmware. Thanks to his work, whenever you have some test equipment in need of being tested, just grab your Pico and a few passive components.", "title": "Pi Pico\u3092\u4f7f\u7528\u3057\u305f\u30b9\u30b3\u30fc\u30d7\u30c6\u30b9\u30c8\u30dc\u30fc\u30c9\u306e\u4f5c\u6210\u65b9\u6cd5", "body": "Pi Pico\u3068\u3044\u304f\u3064\u304b\u306e\u8ffd\u52a0\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f7f\u7528\u3057\u3066\u3001\u4fe1\u53f7\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8ff0\u3079\u3089\u308c\u3066\u3044\u308b\u3002\u6ce2\u5f62\u306e\u983b\u5ea6\u3084\u30c7\u30e5\u30fc\u30c6\u30a3\u6bd4\u3001PWM\u99c6\u52d5\u306eDAC\u306b\u3088\u308b8\u3064\u306e\u7570\u306a\u308b\u6ce2\u5f62\u304b\u3089\u30de\u30f3\u30c1\u30a7\u30b9\u30bf\u30fc\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u30c7\u30fc\u30bfI2C/SPI/UART\u8ee2\u9001\u307e\u3067\u591a\u5f69\u306a\u4fe1\u53f7\u304c\u751f\u6210\u53ef\u80fd\u3002BSD 3-Clause\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u3067\u3042\u308a\u3001[Paul]\u306b\u3088\u308b\u7d20\u6674\u3089\u3057\u3044\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3002", "titles": ["Pi Pico\u3092\u4f7f\u7528\u3057\u305f\u30b9\u30b3\u30fc\u30d7\u30c6\u30b9\u30c8\u30dc\u30fc\u30c9\u306e\u4f5c\u6210\u65b9\u6cd5", "\u30b7\u30b0\u30ca\u30eb\u30b8\u30a7\u30cd\u30ec\u30fc\u30bfPi Pico\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306e\u6d3b\u7528\u65b9\u6cd5", "\u30d7\u30ed\u30c8\u30b3\u30eb\u30c7\u30b3\u30fc\u30c0\u30fc\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306e\u4fe1\u53f7\u751f\u6210", "\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30b9\u30b3\u30fc\u30d7\u30c6\u30b9\u30c8\u30c4\u30fc\u30eb\u958b\u767a", "Pi Pico\u3092\u6d3b\u7528\u3057\u305f\u6a5f\u5668\u30c6\u30b9\u30c8\u306e\u624b\u6cd5"]}