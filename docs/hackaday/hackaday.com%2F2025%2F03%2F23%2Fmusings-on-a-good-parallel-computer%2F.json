{"pubDate": "2025-03-23T08:00:00", "original_title": "Musings on a Good Parallel Computer", "link": "https://hackaday.com/2025/03/23/musings-on-a-good-parallel-computer/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/03/CELL_BE_processor_PS3_board.jpg", "original_content": "Until the late 1990s, the concept of a 3D accelerator card was something generally associated with high-end workstations. Video games and kin would run happily on the CPU in ones desktop system, with later extensions like MMX, 3DNow!, SSE, etc. providing a significant performance boost for games that supported it. As 3D accelerator cards (colloquially called graphics processing unit, or GPU) became prevalent, they took over almost all SIMD vector tasks, but one thing which theyre not good at is being a general parallel computer. While working on a software project this really ticked [Raph Levien] off and inspired him to cover his grievances.\nAlthough the interaction between CPUs and GPUs has become tighter over the decades, with PCIe in particular being a big improvement over AGP  PCI, GPUs are still terrible at running arbitrary computing tasks and PCIe links are still glacial compared to communication within the GPU  CPU dies. With the introduction of asynchronous graphic APIs this divide became even more intense. The proposal thus is to invert this relationship.\nTheres precedent for this already, with Intels Larrabee and IBMs Cell processor merging CPU and GPU characteristics on a single die, though both struggled with developing for such a new kind of architecture. Sonys PlayStation 3 was forced to add a GPU due to these issues. There is also the DirectStorage API in DirectX which bypasses the CPU when loading assets from storage, effectively adding CPU features to GPUs.\nAs [Raph] notes, so-called AI accelerators also have these characteristics, with often multiple SIMD-capable, CPU-like cores. Maybe the future is Cell after all.", "title": "- GPU\u3068CPU\u306e\u95a2\u4fc2\u306e\u9032\u5316: \u904e\u53bb\u304b\u3089\u672a\u6765\u3078", "body": "1990\u5e74\u4ee3\u672b\u307e\u3067\u30013D\u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf\u30ab\u30fc\u30c9\u306f\u9ad8\u6027\u80fd\u306b\u95a2\u9023\u3057\u3001GPU\u306f\u30bf\u30b9\u30af\u51e6\u7406\u306b\u512a\u308c\u308b\u304c\u3001\u4e00\u822c\u8a08\u7b97\u306b\u306f\u4e0d\u5411\u304d\u3002", "titles": ["- GPU\u3068CPU\u306e\u95a2\u4fc2\u306e\u9032\u5316: \u904e\u53bb\u304b\u3089\u672a\u6765\u3078", "- 3D\u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf\u30fc\u30ab\u30fc\u30c9\u306e\u5909\u9077\u3068\u5f71\u97ff", "- \u65b0\u3057\u3044\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u63d0\u6848: CPU\u3068GPU\u306e\u7d71\u5408", "- AI\u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf\u30fc\u306e\u53ef\u80fd\u6027\u3068CPU\u6a5f\u80fd\u306e\u7d71\u5408", "- \u30b0\u30e9\u30d5\u30a3\u30c3\u30afAPI\u306e\u9032\u5316\u3068\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6539\u5584\u306e\u8ab2\u984c"]}