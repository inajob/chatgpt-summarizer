{"pubDate": "2025-07-28T15:30:52", "original_title": "Learn Computing? Head for MonTana!", "link": "https://hackaday.com/2025/07/28/learn-computing-head-for-montana/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/07/mtmc.png", "original_content": "Weve often thought that it must be harder than ever to learn about computers. Every year, theres more to learn, so instead of making the gentle slope from college mainframe, to Commodore 64, to IBM PC, to NVidia supercomputer, you have to start at the end. But, really, you dont. You can always emulate computers from simpler times, and even if you dont need to, it can be a lot of fun.\nThats the idea behind the MonTana mini-computer. It combines ideas from the PDP-11, MIPS, Scott CPU, Game Boy, and JVM to make a relatively simple 16-bit computer\nThe computer runs on Java, so you can try it nearly anywhere. The console is accessed through a web browser and displays views of memory, registers, and even something that resembles a Game Boy screen. Youll need to use assembly language until you write your own high-level language (wed suggest Forth). There is, however, a simple operating system, MTOS.\nThis is clearly made for use in a classroom, and wed love to teach a class around a computer like this. The whole thing reminds us of a 16-bit computer like the PDP-11 where everything is a two-byte word. There are only 4K bytes of memory (so 2K words). However, you can accomplish a great deal in that limited space. Thanks to the MTOS API, you dont have to worry about writing text to the screen and other trivia.\nIt looks like fun. Let us know what youll use it for. If you want to go down a level, try CARDIAC. Or skip ahead a little, and teach kids QBasic."}