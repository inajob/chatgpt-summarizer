{"pubDate": "2025-04-20T20:00:12", "original_title": "milliForth-6502, a Forth for the 6502 CPU", "link": "https://hackaday.com/2025/04/20/milliforth-6502-a-forth-for-the-6502-cpu/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/11/milli.png", "original_content": "Forth is popular on small computers because it is simple to implement, yet quite powerful. But what happens when you really need to shrink it? Well, if your target is the 6502, theres milliForth-6502.\nThis is a port of milliForth, which is a fork of sectorforth. The sectorforth project set the standard, implementing a Forth so small it could fit in a 512-byte boot sector. The milliForth project took sectorforth and made it even smaller, weighing in at only 336 bytes. However, both milliForth and sectorforth are for the x86 architecture. With milliForth-6502, [Alvaro G. S. Barcellos] wanted to see how small he could make a 6502 implementation.\n\nSo how big is the milliForth-6502 binary? Our tests indicate: 1,110 bytes. It wont quite fit in a boot sector, but its pretty small!\nMost of the code for milliForth-6502 is assembly code in sector-6502.s. This code is compiled using tools from the cc65 project. To run the code lib6502 is used for 6502 emulation.\nEmulation is all well and good as far as it goes, especially for development and testing, but wed love to see this code running on a real 6502. Even better would be a 6502 built from scratch! If you get this code running wed love to hear how it went!\n"}