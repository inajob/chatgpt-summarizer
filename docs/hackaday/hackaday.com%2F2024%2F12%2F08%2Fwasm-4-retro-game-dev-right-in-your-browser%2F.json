{"pubDate": "2024-12-08T09:00:17", "original_title": "WASM-4: Retro Game Dev Right in Your Browser", "link": "https://hackaday.com/2024/12/08/wasm-4-retro-game-dev-right-in-your-browser/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/12/wasm-games-1200.jpg", "original_content": "Have you ever dreamt of developing games that run on practically anything, from a modern browser to a microcontroller? Enter WASM-4, a minimalist fantasy console where constraints spark creativity. Unlike intimidating behemoths like Unity, WASM-4\u2019s stripped-back specs challenge you to craft games within its 160160 pixel display, four color palette, and 64 KB memory. Yes, you\u2019ll curse at times, but as every tinkerer knows, limitations are the ultimate muse.\nBorn from the WebAssembly ecosystem, this console accepts \u201ccartridges\u201d in .wasm format. Any language that compiles to WebAssembly\u2014be it Rust, Go, or AssemblyScript\u2014can build games for it. The console\u2019s emphasis on portability, with plans for microcontroller support, positions it as a playground for minimalist game developers. Multiplayer support? Check. Retro vibes? Double-check.\nEntries from a 2022s WASM-4 Game Jam showcase this quirky consoles charm. From pixel-perfect platformers to byte-sized RPGs, the creativity is staggering. One standout, WasmAsteroids, demonstrated real-time online multiplayer within these confines\u2014proof that you don\u2019t need sprawling engines to achieve cutting-edge design. This isn\u2019t just about coding\u2014it\u2019s about coding smart. WASM-4 forces you to think like a retro engineer while indulging in modern convenience.\nWASM-4 is a playground for anyone craving pure, unadulterated experimentation. Whether you\u2019re a seasoned programmer or curious hobbyist, this console has the tools to spark something great.", "title": "- WASM-4: \u5236\u7d04\u304c\u5275\u9020\u6027\u3092\u751f\u3080\u30df\u30cb\u30de\u30ea\u30b9\u30c8\u30b2\u30fc\u30e0\u30b3\u30f3\u30bd\u30fc\u30eb", "body": "WASM-4\u306f\u30b7\u30f3\u30d7\u30eb\u306a\u30b2\u30fc\u30e0\u958b\u767a\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u3001\u5236\u7d04\u304b\u3089\u5275\u9020\u6027\u3092\u767a\u63ee\u3057\u307e\u3059\u3002\u591a\u8a00\u8a9e\u5bfe\u5fdc\u3067\u3001\u30df\u30cb\u30de\u30ea\u30b9\u30c8\u5411\u3051\u306e\u5b9f\u9a13\u7684\u74b0\u5883\u3067\u3059\u3002", "titles": ["- WASM-4: \u5236\u7d04\u304c\u5275\u9020\u6027\u3092\u751f\u3080\u30df\u30cb\u30de\u30ea\u30b9\u30c8\u30b2\u30fc\u30e0\u30b3\u30f3\u30bd\u30fc\u30eb", "- WebAssembly\u3067\u30b2\u30fc\u30e0\u3092\u958b\u767a\uff01WASM-4\u306e\u9b45\u529b", "- \u30ec\u30c8\u30ed\u611f\u6e80\u8f09\uff01WASM-4\u306e\u30b2\u30fc\u30e0\u30b8\u30e3\u30e0\u4f5c\u54c1\u7d39\u4ecb", "- \u7c21\u5358\u306b\u59cb\u3081\u3089\u308c\u308bWASM-4\u3001\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u5bfe\u5fdc\u306e\u53ef\u80fd\u6027", "- \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u697d\u3057\u3055\u3092\u518d\u767a\u898b\u3059\u308bWASM-4\u306e\u4e16\u754c"]}