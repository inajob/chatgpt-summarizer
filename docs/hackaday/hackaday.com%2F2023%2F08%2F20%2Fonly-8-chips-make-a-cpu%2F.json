{"pubDate": "2023-08-20T20:00:56", "original_title": "Only 8 Chips Make A CPU", "link": "https://hackaday.com/2023/08/20/only-8-chips-make-a-cpu/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/08/8-chip-cpu-featured.jpg", "original_content": "Were no stranger to homemade CPUs on these pages, but we think that [Jiri Stepanovsky]s 16-bit serial CPU might be a little special. Why? It has an astonishingly low chip count, with only 8 ICs in total. How on earth does he do it?\nWhile a traditional TTL CPU has a relatively high chip count due to a parallel data bus, registers, and discrete ALU, this one takes a few shortcuts by opting for a one-bit serial bus with serial memory chips and an EPROM serving as a look-up-table ALU. Perhaps the most interesting result of this architecture is that it also allows the CPU to dispense with registers, like the Texas Instruments 16-bit chips back in the day. They all live in memory. You can see it below the break in action, streaming a video to a Nokia-style LCD.\nSuch a CPU would indeed have been unlikely to have been made back in the day due to the prohibitive cost of buying and programming such a large EPROM. However, old computers like the EDSAC also used a serial data path and mercury delay line memory to manage complexity. But for a solid-state CPU in 2023, we think the design is innovative. We think it would be challenging to reduce the chip count further  and no, were not counting designs that use a microcontroller to replicate a block of circuitry; thats cheating  but were sure that somewhere theres a designer with ideas for slimming the design further.\n\n\nThanks to [Ken Boak] for the tip.", "title": "8\u500b\u306eIC\u3060\u3051\u3067\u4f5c\u3089\u308c\u305f16\u30d3\u30c3\u30c8\u30b7\u30ea\u30a2\u30ebCPU\u306e\u9a5a\u304d\u306e\u30ed\u30fc\u30b3\u30b9\u30c8\u8a2d\u8a08", "body": "[\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u8a18\u4e8b\u8981\u7d04]\n[Jiri Stepanovsky]\u6c0f\u306e16\u30d3\u30c3\u30c8\u30b7\u30ea\u30a2\u30ebCPU\u306f\u975e\u5e38\u306b\u7279\u6b8a\u3067\u3042\u308a\u3001\u308f\u305a\u304b8\u3064\u306eIC\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u8a2d\u8a08\u3067\u306f\u3001\u4e00\u30d3\u30c3\u30c8\u306e\u30b7\u30ea\u30a2\u30eb\u30d0\u30b9\u3068\u30b7\u30ea\u30a2\u30eb\u30e1\u30e2\u30ea\u30c1\u30c3\u30d7\u3092\u4f7f\u7528\u3057\u3001\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30c6\u30fc\u30d6\u30ebALU\u3068\u3057\u3066EPROM\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u30ec\u30b8\u30b9\u30bf\u3082\u30e1\u30e2\u30ea\u5185\u306b\u3042\u308a\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5185\u90e8\u306e\u30c7\u30fc\u30bf\u3092\u6d41\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u30e6\u30cb\u30fc\u30af\u306a\u8a2d\u8a08\u3067\u3042\u308a\u3001\u4eca\u5f8c\u3055\u3089\u306b\u5c0f\u578b\u5316\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002", "titles": ["8\u500b\u306eIC\u3060\u3051\u3067\u4f5c\u3089\u308c\u305f16\u30d3\u30c3\u30c8\u30b7\u30ea\u30a2\u30ebCPU\u306e\u9a5a\u304d\u306e\u30ed\u30fc\u30b3\u30b9\u30c8\u8a2d\u8a08", "\u30ec\u30b8\u30b9\u30bf\u306a\u3057\u3067\u52d5\u4f5c\u3059\u308b\u9769\u65b0\u7684\u306a16\u30d3\u30c3\u30c8\u30b7\u30ea\u30a2\u30ebCPU", "\u30d1\u30e9\u30ec\u30eb\u30c7\u30fc\u30bf\u30d0\u30b9\u3092\u4f7f\u308f\u306a\u3044\u3001\u30b7\u30ea\u30a2\u30eb\u30e1\u30e2\u30ea\u30c1\u30c3\u30d7\u3068EPROM\u306e16\u30d3\u30c3\u30c8CPU", "\u30ce\u30ad\u30a2\u98a8LCD\u306b\u52d5\u753b\u3092\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u3059\u308b16\u30d3\u30c3\u30c8\u30b7\u30ea\u30a2\u30ebCPU", "\u30b3\u30b9\u30c8\u3068\u30b7\u30f3\u30d7\u30eb\u30c7\u30b6\u30a4\u30f3\u3092\u8ffd\u6c42\u3057\u305f16\u30d3\u30c3\u30c8\u30b7\u30ea\u30a2\u30ebCPU\u306e\u53ef\u80fd\u6027"]}