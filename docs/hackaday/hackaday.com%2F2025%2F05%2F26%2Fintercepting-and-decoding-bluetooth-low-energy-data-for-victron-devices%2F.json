{"pubDate": "2025-05-26T14:00:00", "original_title": "Intercepting and Decoding Bluetooth Low Energy Data for Victron Devices", "link": "https://hackaday.com/2025/05/26/intercepting-and-decoding-bluetooth-low-energy-data-for-victron-devices/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/05/VC_screenshot_2_featured.png", "original_content": "[ChrisJ7903] has created two Ardiuno programs for reading Victron solar controller telemetry data advertised via BLE. If youre interested in what it takes to use an ESP32 to sniff Bluetooth Low Energy (BLE) transmissions, this is a master class.\nThe code is split into two main programs. One program is for the Victron battery monitor and the other is for any Victron solar controller. The software will receive, dissect, decrypt, decode, and report the data periodically broadcast from the devices over BLE.\nThe BLE data is transmitted in Link-Layer Protocol Data Units (PDUs) which are colloquially called packets. In this particular case the BLE functionality for advertising, also known as broadcasting, is used which means the overhead of establishing connections can be avoided thereby saving power.\n\nDecryption is handled with the the wolfSSL library and [ChrisJ7903] had nice things to say about the helpful people over at wolfSSL. The AES-CTR algorithm is used and seeded with the per-device encryption key, a nonce/salt in little-endian format, and the encrypted data.\n[ChrisJ7903] relied heavily on technical documentation provided by Victron in order to decode the received data; some of that documentation is made available in the Git repo and ultimately everything is revealed in the code itself.\nWeve done heaps of BLE stuff here at Hackaday in the past. If youre interested in BLE tech check out this rain gauge and this doorbell."}