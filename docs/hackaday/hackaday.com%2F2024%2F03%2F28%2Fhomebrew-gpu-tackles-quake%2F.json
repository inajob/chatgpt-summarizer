{"pubDate": "2024-03-28T18:30:05", "original_title": "Homebrew GPU Tackles Quake", "link": "https://hackaday.com/2024/03/28/homebrew-gpu-tackles-quake/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/03/FuryGPU-pcb.jpg", "original_content": "Have you ever wondered how a GPU works? Even better, have you ever wanted to make one? [Dylan] certainly did, because he made FuryGPU  a fully custom graphics card capable of playing Quake\u00a0at over 30 frames per second.\nAs you might have guessed, FuryGPU isnt in the same league as modern graphics card  those are made of thousands of cores specialized in math, which are then programmed with whatever shaders you want. FuryGPU is a more traditional GPU, it has dedicated hardware for all the functions the GPU needs to perform and doesnt support shader code in the same way an AMD or NVIDIA GPU does. According to [Dylan], the hardest part of the whole thing was writing Windows drivers for it.\nOn his blog, [Dylan] tells us all about how he went from the obligatory [Ben Eater] breadboard CPU to playing with FPGAs to even larger FPGAs to bear the weight of this mighty GPU. While this project isnt exactly revolutionary in the GPU world, it certainly is impressive and we impatiently wait to see what comes next.\n\n"}