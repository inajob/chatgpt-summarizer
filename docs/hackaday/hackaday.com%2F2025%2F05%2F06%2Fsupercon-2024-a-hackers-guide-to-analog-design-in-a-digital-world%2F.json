{"pubDate": "2025-05-06T17:02:57", "original_title": "Supercon 2024: A Hacker\u2019s Guide to Analog Design in a Digital World", "link": "https://hackaday.com/2025/05/06/supercon-2024-a-hackers-guide-to-analog-design-in-a-digital-world/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/04/adnani_feat.png", "youtube": "https://www.youtube.com/watch?v=8wajxk7bURQ", "original_content": "We often think of analog computing as a relic of the past, room-sized monstrosities filled with vacuum tubes doing their best to calculate Monte Carlo simulations or orbital velocities. Analog isnt as dead as it might seem though, and analog mix signal design engineer [Nanik Adnani] gave us a crash course on analog circuits at Supercon 2024.\n\n\nFor those of us less familiar with analog circuits, [Adnani] helpfully offered a definition of analog circuit design as the design of electronics that create or manipulate continuously variable signals. It turns out, that even our nice, clean digital signals are actually more analog by the time they interact with the real world. This comes down to various factors like substrate losses, conductors, impedance, and even capacitance. Given the difference in scale between a logic gate and the actual pins the signal comes out of from an integrated circuit, it becomes clear that the amount of current the pin can handle versus the logic gate inside the chip is quite different. In order to bridge the gap, chips use a physical interface, or PHY, which happens to be an analog interface which allows the logic on the chip to communicate off the chip.\n[Adnani] explained how every digital protocol in common usage requires some degree of analog circuits including LoRa, USB, CAN, etc. Most chips handling these protocols have a separate analog team designing the analog circuit which requires slightly different metal layer design, so while determining the exact function of an analog circuit can be difficult to determine from an X-ray of the chip, finding where they are compared to the digital components is quite simple.\nLike with most things we hackers delve into, the best way to learn is by doing after picking up a few basics, and [Adnani] reiterates this throughout his talk. One of the more unexpected examples was his grandmothers tricked-out walker. It has RGB lighting, a water gun, and a car horn. The car horn required a PHY to step things up from the 40 mA from the microcontroller to the 8 A required to drive the horn.\nSome other examples from the talk are this PHY for storing data on a cassette by [Zack Nelson], a guitar pedal [Adnani] designed himself for tape out, and analog bird circuits by [Kelly Heaton]. Analog still has a well-known place in music for various components as well.\nThe last piece of course, is how do you learn analog circuits when everyone around you lives in the digital realm? [Adnani] recommends starting by hitting the books as internet posts can often be a game of telephone, and getting the values wrong on capacitors or the like is a lot more problematic in an analog circuit. Some of his suggestions are as follows (~13 min into the video):\n\nDesign of Analog CMOS Circuits  start here\nSedra and Smith  if you like math\nThe Art of Electronics  board level design\nCMOS Circuit Design, Layout, and Simulation  trying to tapeout a chip\nAnalog Integrated Circuit Design  advanced concepts\n\n[Adnani] says, I had one professor tell me that all you really need is the first four or five chapters of Design of Analog CMOS Integrated Circuits by Behzad Rezavi and then you can start building things. If videos work better for you better, then [Adnani] recommends checking out [Moritz Klein], [Carsten Wulff], and [Ali Hajimiri] who all have robust offerings on the subject.\nAt the end of the day, you wont really learn it until you try to build something, so get a box of components and start tinkering. Simulation can also be beneficial, so [Adnani] recommends trying out your circuits in LTspice for discrete simulations and Ngspice if you want to tape out. While taping out a design for a few hundred bucks seems pricey, its a lot cheaper than a university course in many regions of the world. [Adnani] ends with an exhortation that if a humble undergraduate can do analog work, then any hacker can too, so maybe give it a whirl on your next project!"}