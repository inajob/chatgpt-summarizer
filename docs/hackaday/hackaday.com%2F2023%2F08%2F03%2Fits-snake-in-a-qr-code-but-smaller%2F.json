{"pubDate": "2023-08-04T02:00:19", "original_title": "It\u2019s Snake, In A QR Code, But Smaller", "link": "https://hackaday.com/2023/08/03/its-snake-in-a-qr-code-but-smaller/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/08/qr-snake-featured.jpg", "original_content": "Were not sure that many of you have recognised the need in your life for an x86 machine code program encoded into a QR code, but following on from someone else work [donno2048] has created a super-tiny Snake clone in assembly which comes in at only 85 bytes long. It fits far better in a QR code than the previous effort, but perhaps more useful is a web page demo which runs an in-browser DOS compatibility library. We followed the compilation instructions and got it running on our Manjaro installation, with the result of a somewhat unplayable but recognisable Snake, were guessing because it was written for a slower platform. The web version is more usable, and allows us to investigate its operation more thoroughly.\nTo achieve a working game in so little code is an impressive feat, and since we found different keys responded on machines with different keyboards were curious how it does its keyboard input. Also we think it has the Snake bug where turning back on yourself means instant game over. We would be interested to hear the views in the comments of readers who know something about x86 assembly, to help explain these points."}