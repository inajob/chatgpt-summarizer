{"pubDate": "2023-06-01T18:30:50", "original_title": "Hackaday Prize 2023: Building a Relay ALU", "link": "https://hackaday.com/2023/06/01/hackaday-prize-2023-building-a-relay-alu/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/05/9021511646251845233.png", "original_content": "Theres much truth in the advice that, to truly understand something, you need to build it yourself from the ground up. Thats the idea behind [Christian]s entry for the Re-engineering Education category of the 2023 Hackaday Prize. Built as an educational demonstrator, this is a complete arithmetic-logic unit (ALU) using discrete relays \u2014 and not high-density types either \u2014 these are the big honking clear-cased kind.\nThe design is neatly, intentionally, partitioned along functional lines, with four custom PCB designs, each board operating on 4-bits. To handle a byte-length word, boards are simply cascaded, making a total of eight. The register, adder, logic function, and multiplex boards are the heart of the build with an additional two custom boards for visualization (using an Arduino for convenience) and IO forming the interface. After all, a basic CPU is just an ALU and some control around it, the magic is really in the ALU.\nThe fundamental logical operations operating upon two operands, {A, B} are A, ~A, B, ~B, A or B, A and B, A xor B, can be computed from just four relays per bit. The logic outputs do need to be fed into a 7-to-1 bit selector before being fed to the output register, but thats the job of a separate board. The adder function is the most basic, simply a pair of half-adders and an OR-gate to handle the chaining of the carry inputs and generate the carry chain output.\n3D printed cable runs are a nice touch and make for a slick wiring job to tie it all together.\nFor a more complete relay-based CPU, you could check out the MERCIA relay computer project, not to mention this wonderfully polished build.\n\nThe HackadayPrize 2023 is Sponsored by:\n\n\n\n\n\n\n\n"}