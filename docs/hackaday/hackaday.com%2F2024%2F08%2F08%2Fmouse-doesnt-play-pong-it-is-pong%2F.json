{"pubDate": "2024-08-09T05:00:44", "original_title": "Mouse Doesn\u2019t Play Pong\u2026 It IS Pong!", "link": "https://hackaday.com/2024/08/08/mouse-doesnt-play-pong-it-is-pong/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/08/pong.png", "original_content": "From the why didnt we think of that department comes [dupontgus] pong mouse project. The mouse appears and acts like a normal computer mouse until you click the scroll wheel. When you do, the mouse rapidly moves the cursor on the connected computer to play pong. Obviously, though, the paddles and the ball all look like your cursor, whatever that happens to be. So, how do you tell the score? Well, when a score happens, the cursor shows between the two paddles. In the middle means the game is tied. Otherwise, the player closest to the score indicator is winning. The mouse is an off-the-shelf unit, but inside is a tiny XIAO RP2040 board that can act as both a USB host and a USB device. The RP2040 intercepts the USB traffic and can modify it as it sees fit or just pass it unchanged. Part of the secret sauce is to make the mouse use absolute mode so that it can teleport the cursor between two spots. This is common with, for example, touchscreen drivers. However, it is unusual for a mouse to use this mode. Of course, the cursor is actually only in one place at a time, but your eye thinks it is in multiple places at the same time.\nThe code itself isnt very long. A few hundred lines of C++ and, of course, plenty of libraries to handle the USB. We can think of lots of reasons we might want to filter a USB device.\nThis version of pong doesnt take a lot of mechanical parts. Or, you could try making one with no parts at all.", "title": "\u753b\u671f\u7684\u306a\u30de\u30a6\u30b9\u3092\u4f7f\u3063\u305f\u30dd\u30f3\u30b2\u30fc\u30e0\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "body": "\u30c7\u30e5\u30dd\u30f3\u30bf\u30b9\u306ePong Mouse\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3001\u901a\u5e38\u306e\u30de\u30a6\u30b9\u3068\u3057\u3066\u632f\u308b\u821e\u3044\u306a\u304c\u3089\u3001\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30ab\u30fc\u30bd\u30eb\u3092\u7d20\u65e9\u304f\u52d5\u304b\u3057\u3066Pong\u3092\u30d7\u30ec\u30a4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u30dc\u30fc\u30eb\u3084\u30d1\u30c9\u30eb\u306f\u30ab\u30fc\u30bd\u30eb\u306b\u5909\u66f4\u3055\u308c\u3001\u30b9\u30b3\u30a2\u306f\u30ab\u30fc\u30bd\u30eb\u9593\u306b\u8868\u793a\u3055\u308c\u308b\u3002RP2040\u30dc\u30fc\u30c9\u3067USB\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u64cd\u4f5c\u3057\u3001C++\u30b3\u30fc\u30c9\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3002", "titles": ["\u753b\u671f\u7684\u306a\u30de\u30a6\u30b9\u3092\u4f7f\u3063\u305f\u30dd\u30f3\u30b2\u30fc\u30e0\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "USB\u30db\u30b9\u30c8\u3068USB\u30c7\u30d0\u30a4\u30b9\u6a5f\u80fd\u3092\u6301\u3064\u30de\u30a6\u30b9", "\u30ab\u30fc\u30bd\u30eb\u304c\u30dd\u30f3\u30b2\u30fc\u30e0\u306e\u30d1\u30c9\u30eb\u3068\u30dc\u30fc\u30eb\u306b\u5909\u8eab", "RP2040\u30dc\u30fc\u30c9\u3092\u5185\u8535\u3057\u305f\u7279\u6b8a\u306a\u30de\u30a6\u30b9", "\u30de\u30a6\u30b9\u3092\u4f7f\u3063\u305f\u30e1\u30ab\u30cb\u30ab\u30eb\u306a\u30dd\u30f3\u30b2\u30fc\u30e0\u5236\u4f5c"]}