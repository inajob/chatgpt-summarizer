{"pubDate": "2025-10-15T02:00:21", "original_title": "C Project Turns Into Full-Fledged OS", "link": "https://hackaday.com/2025/10/14/c-project-turns-into-full-fledged-os/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/10/mooseos-main.png", "original_content": "While some of us may have learned C in order to interact with embedded electronics or deep with computing hardware of some sort, others learn C for the challenge alone. Compared to newer languages like Python theres a lot that C leaves up to the programmer that can be incredibly daunting. At the beginning of the year [Ethan] set out with a goal of learning C for its own sake and ended up with a working operating system from scratch programmed in not only C but Assembly as well.\n[Ethan] calls his project Moderate Overdose of System Eccentricity, or MooseOS. Original programming and testing was done in QEMU on a Mac where he was able to build all of the core components of the operating system one-by-one including a kernel, a basic filesystem, and drivers for PS/2 peripherals as well as 320200 VGA video. It also includes a dock-based GUI with design cues from operating systems like Macintosh System 1. From that GUI users can launch a few applications, from a text editor, a file explorer, or a terminal. Theres plenty of additional information about this OS on his GitHub page as well as a separate blog post.\nThe project didnt stay confined to the QEMU virtual machine either. A friend of his was throwing away a 2009-era desktop which [Ethan] quickly grabbed to test his operating system on bare metal. There was just one fault that the real hardware threw that QEMU never did, but with a bit of troubleshooting it was able to run. He also notes that this was inspired by a wiki called OSDev which, although a bit dated now, is a great place to go to learn about the fundamentals of operating systems. Wed also recommend checking out this project that performs a similar task but on the RISC-V instruction set instead.", "title": "C\u8a00\u8a9e\u3092\u99c6\u4f7f\u3057\u3066\u81ea\u4f5cOS\u300cMooseOS\u300d\u3092\u958b\u767a\u3059\u308b\u6311\u6226", "body": "C\u8a00\u8a9e\u3092\u5b66\u3093\u3060[Ethan]\u304c\u3001MooseOS\u3068\u3044\u3046\u72ec\u81ea\u306eOS\u3092\u958b\u767a\u3002GUI\u3084\u30a2\u30d7\u30ea\u3082\u642d\u8f09\u3057\u3001\u5b9f\u6a5f\u3067\u3082\u52d5\u4f5c\u78ba\u8a8d\u3002", "titles": ["C\u8a00\u8a9e\u3092\u99c6\u4f7f\u3057\u3066\u81ea\u4f5cOS\u300cMooseOS\u300d\u3092\u958b\u767a\u3059\u308b\u6311\u6226", "QEMU\u3068\u5b9f\u6a5f\u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u305f\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u306e\u6982\u8981", "\u30a8\u30c3\u30bb\u30f3\u30b7\u30e3\u30eb\u306a\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u77e5\u8b58\u3092\u6d3b\u304b\u3057\u305fOS\u958b\u767a\u306e\u9053", "Basic GUI\u642d\u8f09\u3001MooseOS\u306e\u6a5f\u80fd\u3068\u7279\u5fb4\u3092\u63a2\u308b", "OS\u958b\u767a\u306e\u30a4\u30f3\u30b9\u30d4\u30ec\u30fc\u30b7\u30e7\u30f3\u6e90\u3068\u306a\u308bOSDev Wiki\u306e\u7d39\u4ecb"]}