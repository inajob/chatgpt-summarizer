{"pubDate": "2024-03-28T11:00:47", "original_title": "Hybrid Binaries On Windows for ARM: ARM64EC and ARM64X Explained", "link": "https://hackaday.com/2024/03/28/hybrid-binaries-on-windows-for-arm-arm64ec-and-arm64x-explained/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/02/Windows_11_logo.jpg", "original_content": "With ARM processors increasingly becoming part of the desktop ecosystem, porting code that was written for x86_64 platforms is both necessary and a massive undertaking. For many codebases a simple recompile may be all it takes, but where this is not straightforward Microsofts ARM64EC (for Emulator Compatible) Application Binary Interface (ABI) provides a transition path. Unlike Apples Fat Binaries, this features hybrid PE executables (ARM64 eXtended, or ARM64X) that run mixed ARM64EC and x86_64 binary code on Windows 11 ARM systems. An in-depth explanation is provided by one of the authors, [Darek Mihocka].\nARM64EC was announced by Microsoft on June 28, 2021 as a new feature in Windows 11 for ARM, with more recently Qualcomm putting it forward during the 2024 Game Developers Conference (GDC) as one reason why high-performance gaming on its Snapdragon SoCs should be much easier than often assumed. Naturally, this assumes that Windows 11 is being used, as it contains the x86_64 emulator with ARM64EC support. The major difference between plain ARMv8 and ARM64EC code is that the latter has changes on an ABI level to e.g. calling conventions that ease interoperability between emulated x86_64 and ARM64 code.\nAlthough technologically impressive, Windows 11s marketshare is still rather small, even before looking at Windows 11 on ARM. Itll be interesting to see whether Qualcomms bravado comes to fruition, and make ARM64EC more relevant for the average software developer."}