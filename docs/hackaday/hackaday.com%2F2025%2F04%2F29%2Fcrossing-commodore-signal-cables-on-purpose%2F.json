{"pubDate": "2025-04-29T20:00:00", "original_title": "Crossing Commodore Signal Cables on Purpose", "link": "https://hackaday.com/2025/04/29/crossing-commodore-signal-cables-on-purpose/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/04/signal-carnival-main.png", "original_content": "On a Commodore 64, the computer is normally connected to a monitor with one composite video cable and to an audio device with a second, identical (although uniquely colored) cable. The signals passed through these cables are analog, each generated by a dedicated chip on the computer. Many C64 users may have accidentally swapped these cables when first setting up their machines, but [Matthias] wondered if this could be done purposefully  generating video with the audio hardware and vice versa.\nGetting an audio signal from the video hardware on the Commodore is simple enough. The chips here operate at well over the needed frequency for even the best audio equipment, so its a relatively straightforward matter of generating an appropriate output wave. The audio hardware, on the other hand, is much less performative by comparison. The only component here capable of generating a fast enough signal to be understood by display hardware of the time is actually the volume register, although due to a filter on the chip the output is always going to be a bit blurred. But this setup is good enough to generate large text and some other features as well.\nThere are a few other constraints here as well, namely that loading the demos that [Matthias] has written takes so long that the audio cant be paused while this happens and has to be bit-banged the entire time. Its an in-depth project that shows mastery of the retro hardware, and for some other C64 demos take a look at this one which is written in just 256 bytes.\n\n\nThanks to [Jan] for the tip!", "title": "\u30b3\u30e2\u30c9\u30fc\u30eb64\u306e\u97f3\u58f0\u3068\u6620\u50cf\u4fe1\u53f7\u3092\u9006\u8ee2\u3055\u305b\u308b\u5b9f\u9a13", "body": "\u30b3\u30e2\u30c9\u30fc\u30eb64\u3067\u97f3\u58f0\u3068\u6620\u50cf\u4fe1\u53f7\u3092\u9006\u8ee2\u5229\u7528\u3059\u308b\u5b9f\u9a13\u3002\u6210\u529f\u306b\u306f\u6280\u8853\u7684\u5236\u7d04\u304c\u3042\u308b\u3002", "titles": ["\u30b3\u30e2\u30c9\u30fc\u30eb64\u306e\u97f3\u58f0\u3068\u6620\u50cf\u4fe1\u53f7\u3092\u9006\u8ee2\u3055\u305b\u308b\u5b9f\u9a13", "\u30a2\u30ca\u30ed\u30b0\u4fe1\u53f7\u306e\u9762\u767d\u3044\u5fdc\u7528\uff1aC64\u306e\u97f3\u58f0\u3067\u6620\u50cf\u3092\u751f\u6210", "C64\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u304b\u3089\u30d3\u30c7\u30aa\u4fe1\u53f7\u3092\u5f15\u304d\u51fa\u3059\u65b9\u6cd5", "\u30ec\u30c8\u30ed\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u6311\u6226\uff1aC64\u3067\u306e\u975e\u65e5\u5e38\u7684\u306a\u30c7\u30e2\u4f5c\u6210", "256\u30d0\u30a4\u30c8\u3067\u5b9f\u73fe\u3059\u308b\u30b3\u30e2\u30c9\u30fc\u30eb64\u306e\u30c7\u30e2\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u9b45\u529b"]}