{"pubDate": "2024-06-29T05:00:07", "original_title": "Hosting Your Own PixMob Party Made Easy", "link": "https://hackaday.com/2024/06/28/hosting-your-own-pixmob-party-made-easy/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/06/pixparty_feat.jpg", "original_content": "Over the last few years, its been increasingly common for concertgoers to be handed a light-up bracelet from PixMob that synchronizes with the others in the crowd to turn the entire audience into a music visualizer. Theyre a clever way of enhancing the concert experience, but unfortunately, they dont do anything once you leave the show. Or at least, that used to be the case.\nWeve seen efforts to reverse engineer the IR (and occasionally radio) signals that drive these PixMob devices, but since we checked in last it seems like things have gotten a lot easier for the home gamer. [David Pride] has recently posted a brief write-up that shows how quickly and easily it is to get these devices fired up using nothing more exotic than an Arduino, an IR LED, and an audio sensor module.\nWith the audio sensor module connected to the Arduinos digital input and the IR LED wired to digital out, all you need to do is flash firmware to the board and start playing some beats. The source code [David] has provided is a a remixed version of whats previously been published by [Carlos Ganoza], which, in this case, has been tweaked to make the lighting patterns less random.\nPresumably, this is to make the devices behave more like they do during an actual concert, but since nobody at Hackaday is cool enough to have seen a live musical performance in the last decade, were not really sure. All we can say is that the effect looks pretty sweet in the demo video.\nBack in 2019, we saw a teardown of an early PixMob device, and by 2022, the efforts to reverse engineer their IR control protocol were well underway. Were glad to see things have progressed to the point that you can piece together a transmitter from whats in the parts bin, as it means at least some of these devices will have a lifespan longer than a single concert.", "title": "Arduino\u3092\u4f7f\u7528\u3057\u3066PixMob\u30c7\u30d0\u30a4\u30b9\u3092\u5236\u5fa1\u3059\u308b\u65b9\u6cd5", "body": "PixMob\u306e\u30d6\u30ec\u30b9\u30ec\u30c3\u30c8\u306f\u97f3\u697d\u30e9\u30a4\u30d6\u3067\u89b3\u5ba2\u5168\u54e1\u3092\u30df\u30e5\u30fc\u30b8\u30c3\u30af\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u30fc\u306b\u5909\u3048\u308b\u3002DIY\u30a8\u30f3\u30b8\u30cb\u30a2\u304cArduino\u3092\u4f7f\u3063\u3066\u3001IR\u4fe1\u53f7\u3092\u9006\u8a2d\u8a08\u3057\u3001\u5bb6\u5ead\u7528\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3092\u53ef\u80fd\u306b\u3059\u308b\u624b\u6cd5\u3092\u516c\u958b\u3057\u305f\u3002", "titles": ["Arduino\u3092\u4f7f\u7528\u3057\u3066PixMob\u30c7\u30d0\u30a4\u30b9\u3092\u5236\u5fa1\u3059\u308b\u65b9\u6cd5", "\u5c0f\u3055\u306a\u90e8\u54c1\u3067\u4f5c\u308bPixMob\u30c7\u30d0\u30a4\u30b9\u306e\u9001\u4fe1\u6a5f", "\u30b3\u30f3\u30b5\u30fc\u30c8\u4f53\u9a13\u3092\u81ea\u5b85\u3067\u3082\u518d\u73fe\u3059\u308b\u65b9\u6cd5", "Arduino\u3068IR LED\u3092\u4f7f\u3063\u305f\u97f3\u697d\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u30fc\u306e\u4f5c\u308a\u65b9", "PixMob\u30c7\u30d0\u30a4\u30b9\u306e\u30e9\u30a4\u30c6\u30a3\u30f3\u30b0\u30d1\u30bf\u30fc\u30f3\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba"]}