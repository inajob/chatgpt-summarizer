{"pubDate": "2024-11-24T15:00:17", "original_title": "RISC CPU Lives in Excel", "link": "https://hackaday.com/2024/11/24/risc-cpu-lives-in-excel/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/11/cpu.png", "youtube": "https://www.youtube.com/watch?v=MNRKi7Rum_c", "original_content": "Last time we checked in on [Inkbox], he had made a 16-bit CPU in Excel. Impressive, but not really practical. Presumably, his latest project isnt any more practical, but we suspect an 8-bit RISC CPU was easier to implement in Excel and probably runs faster, too. The new machine uses a stack architecture with a simplified instruction set of ten instructions. You can follow along with his Excel adventure in the video below.\nIf you think about it, you may decide that doing something like this in Excel is easy because you could just script it and use Excel as the user interface. Thats true, but thats now how [Inkbox] does it. He wont use scripts or IF statements in a cell. That makes things much harder.\n\nIf you are curious about what goes on in a CPU, this is worth watching, even if you dont expect youll use it. If you really want to become a CPU designer, wed suggest skipping Excel and go straight into Verilog, VHDL, or something similar that you could actually use.\nDont get us wrong. Seeing it done in Excel can be very educational, but no one designs CPUs like this in practice.\nIf you want to see the 16-bit version, we covered that, too. We always say that building the CPU is the easy part of developing a new architecture.\n"}