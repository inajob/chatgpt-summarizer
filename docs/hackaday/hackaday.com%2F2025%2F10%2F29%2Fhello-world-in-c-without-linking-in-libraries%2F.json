{"pubDate": "2025-10-30T02:00:54", "original_title": "Hello World in C Without Linking in Libraries", "link": "https://hackaday.com/2025/10/29/hello-world-in-c-without-linking-in-libraries/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/10/helloworld.jpg", "youtube": "https://www.youtube.com/watch?v=gVaXLlGqQ", "original_content": "If theres one constant with software developers, it is that sometimes they get bored. At these times, they tend to think dangerous thoughts, usually starting with What if. Next you know, they have gone down a dark and winding rabbit hole and found themselves staring at something so amazing that the only natural conclusion that comes to mind is that while educational, it serves no immediate purpose.\nThe idea of applying this to snipping out the stdio.h header in C and the printf() function that it provides definitely is a good example here. Starting from the typical Hello World example in C, [Old Man Yells at Code] over at YouTube first takes us from the standard dynamically linked binary at a bloated 16 kB, to the statically linked version at an eyepopping 767 kB.\nTo remove any such dynamic linkages, and to keep file sizes somewhat sane, he then proceeds to first use the write()function from the unistd.h header, which does indeed cut out the stdio.h include, before doing the reasonable thing and removing all includes by rewriting the code in x86 assembly.\nWhile this gets the final binary size down to 9 kB and needs no libraries to link with, it still performs a syscall, after setting appropriate register values, to hand control back to the kernel for doing the actual printing. If you try doing something similar with syscall(), you have to link in libc, so it might very well be that this is the real way to do Hello World without includes or linking in libraries. Plus the asm keyword part of C, although one could argue that at this point you could just as well write everything in x86 ASM.\nOf course, one cannot argue that this experience isnt incredibly educational, and decidedly answers the original What if question.\n\n", "title": "- C\u8a00\u8a9e\u3067\u306e\u300cHello World\u300d\u3092\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3057\u3067\u5b9f\u73fe\u3059\u308b\u65b9\u6cd5", "body": "\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u8005\u306f\u9000\u5c48\u3059\u308b\u3068\u65ac\u65b0\u306a\u6311\u6226\u3092\u3057\u3001C\u8a00\u8a9e\u306eprintf\u3092\u4f7f\u308f\u305a\u306b\u30cf\u30ed\u30fc\u30ef\u30fc\u30eb\u30c9\u3092\u5b9f\u73fe\u3059\u308b\u8a66\u307f\u304c\u8208\u5473\u6df1\u3044\u3002", "titles": ["- C\u8a00\u8a9e\u3067\u306e\u300cHello World\u300d\u3092\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3057\u3067\u5b9f\u73fe\u3059\u308b\u65b9\u6cd5", "- \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6392\u9664\u3057\u305f\u72ec\u81ea\u306eC\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f5c\u6210", "- \u52d5\u7684\u30ea\u30f3\u30af\u3092\u53d6\u308a\u9664\u304f\uff01\u30a8\u30ec\u30ac\u30f3\u30c8\u306a\u30d0\u30a4\u30ca\u30ea\u751f\u6210\u3078\u306e\u6311\u6226", "- \u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u3068C\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u3088\u308b\u52b9\u7387\u7684\u306a\u30b3\u30fc\u30c9\u306e\u4f5c\u6210", "- \u300cWhat if\u300d\u3092\u8ffd\u6c42\u3059\u308b\uff01\u6559\u80b2\u7684\u3067\u7121\u76ee\u7684\u306a\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u697d\u3057\u3055"]}