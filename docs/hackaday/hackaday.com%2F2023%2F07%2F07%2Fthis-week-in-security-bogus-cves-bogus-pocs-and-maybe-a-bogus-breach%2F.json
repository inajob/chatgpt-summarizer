{"pubDate": "2023-07-07T14:00:14", "original_title": "This Week in Security: Bogus CVEs, Bogus PoCs, And Maybe a Bogus Breach", "link": "https://hackaday.com/2023/07/07/this-week-in-security-bogus-cves-bogus-pocs-and-maybe-a-bogus-breach/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/01/darkarts.jpg", "original_content": "It appears we have something of a problem. Its not really a new problem, and shouldnt be too surprising, but it did pop up again this week: bogus CVEs. Starting out in the security field? Whats the best way to jump-start a career? Getting a CVE find to your name certainly cant hurt. And as a result, you get very junior security researchers looking for and reporting novel security vulnerabilities of sometimes dubious quality. Sometimes that process looks a lot like slinging reports against the wall to see what sticks. Things brings us to an odd bug report in the OBS Studio project.\nA researcher put together a script to look for possible password exposure on Github projects, and it caught a configuration value named password in a .ini file, being distributed in the project source. Obvious credential leak in Git source, right? Except for the little detail that it was in the locale folder, and the files were named ca-es.ini, ja-jp.ini, and similar. You may be in on the joke by now, but if not, those are translation strings. It wasnt leaked credentials, it was various translations of the word password. This sort of thing happens quite often, and from the viewpoint of a researcher looking at results from an automated tool, it can be challenging to spend enough time with each result to fully understand the code in question. It looks like this case includes a language barrier, making it even harder to clear up the confusion.\nThings took a turn for the worse when a CVE was requested. The CVE Numbering Authority (CNA) that processed the request was MITRE, which issued CVE-2023-34585. It was a completely bogus CVE, and thankfully a more complete explanation from OBS was enough to convince the researcher of his error. That, however, brings us back to CVE-2023-36262, which was published this week. Its yet another CVE, for the same non-issue, and even pointing at the same GitHub issue where the alleged bug is debunked. Theres multiple fails here, but the biggest disappointment is MITRE, for handing out CVEs twice for the same issue. Shout-out to [Netspooky] on Twitter for spotting this one.\nBogus PoC\nDont run untrusted code. Dont run untrusted code, even if its claimed to be a Proof of Concept (PoC) from a security researcher. The background is CVE-2023-35829, a use-after-free in the Rokchip video driver in Linux kernel versions prior to 6.3.2. Theres not a lot of details about this flaw, except that in certain instances it could be used to achieve escalation of privilege. Whats newsworthy is that there was a PoC published on Github, and shared fairly widely on Twitter, but turns out that PoC also included a nasty little surprise.\n\nFor anyone that has ran this PoC, consider your data stolen. This is what eventually runs on your host after a few stages. If you wanna analyse it, don't use a web browser or your IP will get blacklisted. #CVE_2023_35829 #backdoor https://t.co/gafdPfDc0r pic.twitter.com/fUIqclSARX\n Andrei Scutariu (@xnand_) July 4, 2023\n\nThe tweets and GitHub repositories have been yanked, but a bit of Google-fu can find the cached repos. (Warning, running that PoC is not a good idea.)\nBogus Breach Claim  Maybe\nTheres a relatively new hacktivist group making itself a pain to the Western world recently, working under the name Anonymous Sudan. This group has made its name by doing Distributed Denial of Service attacks against Western targets like Microsoft. This week, the group made claims that they had hit Microsoft with a breach, and exfiltrated 30 million customers data. The only problem is that Microsoft cant find any sign of a problem. The 100 samples of stolen data that were released with the announcement seem to be from an old incident, so were rating this one probably bogus.\nWordPress Plugin: Ultimate Member\nOn the other hand, the attack against WordPress installs using the Ultimate Member plugin seems to be very real. The vulnerability involves setting a users wp_capabilities value to jump to administrator privileges. That was accomplished by side-stepping security code through the use of wp_capabiliti\\\\es, wp_caPabilitiEs, and a few other creative bypasses. With version 2.6.7 of the plugin, a whitelist of those allowed keys has been added, finally putting the issue to rest.\nServiceNow\nResearcher [R3zk0n] has found a series of issues in the ServiceNow platform that could lead to Admin access. This cloud system provides IT software as a service, and is used widely worldwide. The issue allows any standard user account to become an administrator. The PoC is published, and a ServiceNow update is available. While it is a welcome relief that this attack requires a valid user account, it still ranks a CVSS of 9.9, and may prove to be quite a problem.\nBits and Bytes\nWe do have an interesting problem in the Linux Kernel, nicknamed StackRot. Its a very broad privilege escalation, introduced in kernel 6.1 with the addition of the Maple Tree memory structure. This vulnerability actually ended up provoking Linus Torvalds to sling some C code himself to fix it. The fix is in versions 6.1.37, 6.3.11, 6.4.1, and the in-process 6.5 code.\nPortSwigger is back with a guide to GraphQL. Turns out that there are some common ways to find GraphQL endpoints, and potentially quite a bit of information that can be gathered from looking at whats available at that endpoint.\nSimilarly, HAKAI Offensive Security has a primer on finding Nginx traversal flaws. The most common one seems to be a location configuration that lacks the final slash on a path, opening up the server to path traversal and other fun tricks. Go forth and learn! And hack responsibly.", "title": "\u300c\u865a\u507d\u306eCVE\u300d\u3068\u306f\uff1f- \u96fb\u5b50\u5de5\u4f5c\u306b\u304a\u3051\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u554f\u984c", "body": "\u554f\u984c\u304c\u767a\u751f\u3057\u305f\u3088\u3046\u3067\u3059\u3002\u7121\u52b9\u306aCVE\uff08\u8106\u5f31\u6027\uff09\u3084\u507d\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u554f\u984c\u304c\u5831\u544a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001GitHub\u4e0a\u3067\u516c\u958b\u3055\u308c\u305fPoC\uff08\u8a3c\u660e\u30b3\u30fc\u30c9\uff09\u3082\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\u3055\u3089\u306b\u3001\u533f\u540d\u306e\u30cf\u30c3\u30ab\u30fc\u96c6\u56e3\u304cMicrosoft\u306b\u30c7\u30fc\u30bf\u6f0f\u6d29\u3092\u4e3b\u5f35\u3057\u307e\u3057\u305f\u304c\u3001\u4fe1\u3074\u3087\u3046\u6027\u306b\u6b20\u3051\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001Ultimate Member\u30d7\u30e9\u30b0\u30a4\u30f3\u3084ServiceNow\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u3082\u8106\u5f31\u6027\u304c\u5831\u544a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3055\u307e\u3056\u307e\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u60c5\u5831\u3082\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002", "titles": ["\u300c\u865a\u507d\u306eCVE\u300d\u3068\u306f\uff1f- \u96fb\u5b50\u5de5\u4f5c\u306b\u304a\u3051\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u554f\u984c", "GitHub\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u6f5c\u3080\u5371\u967a- \u7ffb\u8a33\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306e\u60c5\u5831\u6f0f\u6d29", "\u653b\u6483\u8005\u304c\u516c\u958b\u3057\u305fPoC\u306b\u306f\u30d0\u30c3\u30af\u30c9\u30a2\u304c\u4ed5\u8fbc\u307e\u308c\u3066\u3044\u305f\uff01- Linux\u30ab\u30fc\u30cd\u30eb\u306e\u8106\u5f31\u6027\u306b\u95a2\u3059\u308b\u6ce8\u610f\u559a\u8d77", "\u7121\u540d\u306e\u30cf\u30c3\u30ab\u30fc\u30b0\u30eb\u30fc\u30d7\u304c\u30de\u30a4\u30af\u30ed\u30bd\u30d5\u30c8\u3092\u653b\u6483\uff1f- \u771f\u507d\u4e0d\u660e\u306e\u60c5\u5831\u6f0f\u6d29\u5831\u9053", "ServiceNow\u306b\u8106\u5f31\u6027\u767a\u898b- 9.9\u306e\u5371\u967a\u5ea6\u3092\u6301\u3064\u7ba1\u7406\u8005\u6a29\u9650\u306e\u7372\u5f97"]}