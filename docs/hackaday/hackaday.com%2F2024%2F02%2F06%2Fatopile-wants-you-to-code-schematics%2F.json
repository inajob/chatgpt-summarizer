{"pubDate": "2024-02-06T12:00:20", "original_title": "Atopile Wants you to Code Schematics", "link": "https://hackaday.com/2024/02/06/atopile-wants-you-to-code-schematics/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/02/pcb0.png", "original_content": "Wed wager that, if youre reading Hackaday, youve looked at more than a few circuit diagrams in your day. Maybe youve even converted a few of them over to a PCB. Its a workflow that, at this point, is well-understood. But as designs become more complex, the schematics are harder to create and maintain. Thats why Atopile wants to treat hardware design more like writing code.\nWe can see some real benefits to this but also some possible drawbacks. On the plus side, reusing chunks of PCB description should be easy. On the other hand, detecting certain errors on a schematic or PCB layout is easier than spotting them in code. Of course, there are probably types of errors that are easier to catch in code, too, so maybe thats not a problem. Certainly, if you can spit out a schematic from your code, you could  potentially  have the best of both worlds.\n\nHeres an example circuit (from the documentation):\nimport Resistor from generics/resistors.ato\n\nmodule VoltageDivider:\n   signal top\n   signal out\n   signal bottom\n\n   r_top = new Resistor\n   r_top.footprint = R0402\n   r_top.value = 100kohm +/- 10%\n\n   r_bottom = new Resistor\n   r_bottom.footprint = R0402\n   r_top.value = 200kohm +/- 10%\n\n   top ~ r_top.p1; r_top.p2 ~ out\n   out ~ r_bottom.p1; r_bottom.p2 ~ bottom\n\nThen again, you can use Verilog-A or even Spice netlists to get the same effect (and those arent the only attempts at doing this). Will Atopile catch on? Maybe. Should it? Tell us what you think in the comments.\nSoftware isnt always readable, but it would be nice to see literate designs for hardware. This project reminded us a lot of SKIDL, but we havent seen any updates of that project for a bit.\n", "title": "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u8a2d\u8a08\u3092\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306b\u6271\u3046\u3001Atopile\u306e\u30a2\u30a4\u30c7\u30a2", "body": "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u8a2d\u8a08\u3092\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306b\u6271\u3046Atopile\u3002\u518d\u5229\u7528\u6027\u304c\u9ad8\u304f\u306a\u308b\u4e00\u65b9\u3001\u30b3\u30fc\u30c9\u3088\u308a\u30a8\u30e9\u30fc\u304c\u898b\u3064\u3051\u306b\u304f\u3044\u304b\u3082\u3002\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f8b\u3082\u3002\u305d\u308c\u3067\u3082\u5c0e\u5165\u3055\u308c\u308b\u304b\u306f\u672a\u5b9a\u3060\u304c\u3001\u8aad\u307f\u3084\u3059\u3044\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u8a2d\u8a08\u306f\u671b\u307e\u3057\u3044\u3002SKIDL\u3082\u540c\u69d8\u306e\u8a66\u307f\u3002", "titles": ["\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u8a2d\u8a08\u3092\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306b\u6271\u3046\u3001Atopile\u306e\u30a2\u30a4\u30c7\u30a2", "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u30c7\u30b6\u30a4\u30f3\u3092\u30b3\u30fc\u30c9\u3067\u30b9\u30d1\u30c3\u3068\u4f5c\u6210\u3067\u304d\u308b", "\u30b3\u30fc\u30c9\u304b\u3089\u306e\u30b9\u30ad\u30fc\u30de\u81ea\u52d5\u751f\u6210\u3067\u30d9\u30b9\u30c8\u306a\u8a2d\u8a08\u3092\u5b9f\u73fe", "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u6587\u66f8\u5316\u306b\u304a\u3051\u308b\u65b0\u3057\u3044\u30a2\u30d7\u30ed\u30fc\u30c1", "SKIDL\u306b\u4f3c\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3001Atopile\u304c\u6ce8\u76ee\u3055\u308c\u308b"]}