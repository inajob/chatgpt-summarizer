{"pubDate": "2024-08-05T11:00:00", "original_title": "Proof that find + mkdir are Turing-Complete", "link": "https://hackaday.com/2024/08/05/proof-that-find-mkdir-are-turing-complete/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/08/turingtapes.jpg", "original_content": "Data manipulation is at the heart of computation, and a system is said to be Turing-complete if it can be configured to manipulate data in a way that makes implementing arbitrary computation possible. [Keigo Oka] shared a proof that find and mkdir together are Turing-complete, which is to say, a system with only GNUs find and mkdir has access to enough functionality to satisfy the requirements of Turing completeness, which ignores questions of efficiency or speed.\n[Keigo Oka]s first attempt at a proof worked to implement Rule 110, an elementary cellular automata configuration that has been shown to be Turing-complete, or universal, but has been updated to implement a tag system as its proof, and you can see it in action for yourself.\nSeeing basic utilities leveraged in such a way illustrates how computation is all around us, and not always in expected places. Weve also seen Turing-complete origami and computation in cellular automata."}