{"pubDate": "2025-04-07T14:00:18", "original_title": "Which Browser Should I Use In 2025?", "link": "https://hackaday.com/2025/04/07/which-browser-should-i-use-in-2025/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/03/Browser.jpg", "original_content": "Over the history of the Web, we have seen several major shifts in browsing software. If youre old enough to have used NCSA Mosaic or any of the other early browsers, you probably welcomed the arrival of Netscape Navigator, and rued its decline in the face of Internet Explorer. As Mozilla and then Firefox rose from Netscapes corpse the domination by Microsoft seemed inevitable, but then along came Safari and then Chrome. For a glorious while there was genuine competition between browser heavyweights, but over the last decade weve arrived at a point where Chrome and its associated Google domination is the only game in town. Other players are small, and the people behind Firefox seem hell-bent on fleeing to the Dark Side, so where should we turn? Is there a privacy-centric open source browser that follows web standards and doesnt come with any unfortunate baggage in the room? Its time to find out.\nIts All In The Engine\nIts Hackaday, in NetSurf!\nIf you look at the breadth of standards which a modern web browser has to support, its clear that writing a web browser is a Herculean task. Many browsers take the route of not trying to implement everything, for example minimalist browsers such as Dillo or NetSurf concentrate only on rendering web pages. For the purposes of this piece were looking at full-fat browsers capable of being a daily driver though, and for that a browser needs some very capable software. Many development teams are not capable of writing such a browser engine, and thus use one developed for another browser. Despite there being many names on the table then, peering under the hood there are surprisingly few options. The Apple Webkit and Google Blink family of browsers dominate, followed by Mozilla Gecko and its Goanna fork, and then by promising bit-part players such as Servo, or the Ladybird browsers LibWeb. Having so much of the webs browser software dominated by Apple and Google is not an ideal situation, but its where we find ourselves.\nIts Hackaday, in Ladybird!\nSo when choosing a browser, the first thing we look at is its engine. Whose ecosystem are we becoming part of, and does that have any effect on us? Within reason all modern full-featured browser engines render websites the same, so there should be little to choose from in terms of the websites themselves.\nHaving considered the browser engine, next up are whatever the developer uses to differentiate themselves. Its suprisingly straightforward to construct a bare-bones web browser on top of WebKit, so to stand out each browser has a unique selling point. Is it privacy youre after, ad blocking, or just following a UI path abandoned by a previous browser? And perhaps most importantly, are you simply departing a problematic developer for one even shadier? Its worth doing your homework, and not being afraid to try multiple browsers before you find your home.\nSo Where Did Hackaday Land?\nIts Hackaday, in Vivaldi! (We are sure you are getting the idea by now)\nOver the course of writing for Hackaday its inevitable that a bunch of different browsers will find their way on to my bench. Some of them like Ladybird or Servo I would love the chance to use as my daily driver, but they simply arent mature enough for my needs. Others such as Brave have too much of a whiff of controversy around them for someone seeking a quiet life of open-source obscurity. As I write this I have a preposterous number of browsers installed on my machine, and if theres one thing which the experience has taught me its that they are much more the same than I expected. In three decades our expectation of a browser has homogenised to the extent that Im hard pressed to tell between them. How do I pick one, without blindly throwing a dart at a corkboard covered in browser logos?\nIn the end, I looked for two candidates, one each from the Firefox and Apple/Google orbits. I tried them all, and settled on LibreWolf from the former, and Vivaldi from the latter. LibreWolf because its done a fine job of making Firefox without it being Firefox, and Vivaldi because its influence from the early Opera versions gave it a tiny bit of individuality missing in the others. I set up both with my usual\u00a0 Hackaday bookmarks, tabs, and shortcuts, changed the search engine to the EU-based Qwant. Im ready to go, with a bit more control over how my data is shared with the world once more.\nA refugee from the early Web writes\nIts a fairly regular occurrence, that I will Do a Linux Thing in my hackerspace, only to have one of my younger friends point out a much newer and better tool than the one I know, which I probably learned to use some time in the mid-1990s. Ive fond looking at web browsers to be in some respects a similar experience even if the browsers are much closer to each other than I expected, because for a couple of decades now Ive been a Firefox user simply because Firefox was the plucky upstart open-source browser. Mozillas previous attempts to take Netscape 6 and make it the only piece of Internet software you needed were horribly bloated, and Firefox, or Phoenix as it launched, was an easy choice. Just as my operating system journey taught me about software complacency a couple of years ago, so Ive now had the same awakening in the browser. The Web will never look the same again."}