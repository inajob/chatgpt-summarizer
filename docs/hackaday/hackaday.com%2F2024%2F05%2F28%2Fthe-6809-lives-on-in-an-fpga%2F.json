{"pubDate": "2024-05-29T05:00:24", "original_title": "The 6809 Lives On in an FPGA", "link": "https://hackaday.com/2024/05/28/the-6809-lives-on-in-an-fpga/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/05/cpu.png", "original_content": "At one point, the Motorola 6809 seemed like a great CPU. At the time it was a modern 8-bit CPU and was capable of hosting position-independent code and re-entrant code. Sure, it was pricey back in 1981 (about four times the price of a Z80), but it did boast many features. However, the price probably prevented it from being in more computers. There were a handful, including the Radio Shack Color Computer, but for the most part, the cheaper Z80 and the even cheaper 6502 ruled the roost. Thanks to the [turbo9team], however, you can now host one of these CPUs  maybe even a better version  in an FPGA using Verilog.\nThe CPU may be old-fashioned on the outside, but inside, it is a pipeline architecture with a standard Wishbone bus to incorporate other cores to add peripherals. The GitHub page explains that while the 6809 is technically CISC, its so simple that its possible to translate to a RISC-like architecture internally. There are also a few enhanced instructions not present on the 6809.\nIn addition to the source code, youll find a thesis and some presentations about the CPU in the repository. While the 6809 might not be the most modern choice, it has the advantage of having plenty of development tools available and is easy enough to learn. Code for the 6800 should run on it, too.\nEven using through-hole parts, you can make a 6809 computer fit in a tiny space.You can also break out a breadboard."}