{"pubDate": "2024-03-27T08:00:30", "original_title": "Automatic Position Reporting Over HF Radio", "link": "https://hackaday.com/2024/03/27/automatic-position-reporting-over-hf-radio/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/03/hf-aprs-main.png", "original_content": "While most of us carry cell phones that have GPS and other location services, they require a significant amount of infrastructure to be useful. Drive from Washington to Alaska like [Lonney] did a while back, where that infrastructure is essentially nonexistent, and youll need to come up with some other solutions to let friends and family know where you are.\nA tool called the Automatic Packet Reporting System (APRS) is fairly robust in the very high frequency (VHF) part of the amateur radio spectrum, but this solution still relies on a not-insignificant amount of infrastructure for the limited distances involved with VHF. [Lonney] adapted a few other tools to get APRS up and running in the HF range, letting his friends keep tabs on him even from the most remote locations.\n\nThe build relies on a second piece of software called JS8Call which is a text-based mode that allows radio operators to communicate keyboard to keyboard. It has a number of interesting features beyond this basic functionality though, including message forwarding. The software in [Lonney]s build allows a small computer equipped with a GPS receiver to gather its location information, compose a brief message in JS8Call, and then send it to the APRS network in the high frequency (HF) portion of the spectrum which supports much further communications distances than VHF generally allows.\nThe build goes a little beyond the functionality of widely-available radio software, though. Hes also written scripts that automate a lot of the tricky parts of dealing with a car and getting radios set up in one for a road trip, including automatic startup and shutdown. Originally this was built with a Raspberry Pi but hes since switched to a laptop. Hes also done some testing on various bands and found the 40-meter band to be the best compromise between activity and range, with more than enough of each to make the long trip again.\nFor those unfamiliar with JS8Call, weve touched on it briefly with a few builds like this digital HF SDR transceiver which supports the protocol, but the short story is that its built on another tool called FT8 which was originally designed for quick contacts using weak signals. JS8Call essentially expands the functionality of this fairly revolutionary method of radio operation.", "title": "\u81ea\u4f5c\u901a\u4fe1\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3059\u308b\u65b9\u6cd5 - \u30cf\u30e0\u7121\u7dda\u3068GPS\u3092\u6d3b\u7528", "body": "\u96fb\u8a71\u6a5f\u306fGPS\u306a\u3069\u306e\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d3\u30b9\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u30ea\u30e2\u30fc\u30c8\u306a\u5834\u6240\u3067\u306f\u4ed6\u306e\u89e3\u6c7a\u7b56\u304c\u5fc5\u8981\u3002APRS\u3084JS8Call\u3092\u4f7f\u3044\u3001\u7121\u7dda\u901a\u4fe1\u3067\u53cb\u4eba\u3084\u5bb6\u65cf\u306b\u4f4d\u7f6e\u60c5\u5831\u3092\u9001\u4fe1\u3067\u304d\u307e\u3059\u3002HF\u5e2f\u3092\u4f7f\u3048\u3070VHF\u3088\u308a\u5e83\u3044\u7bc4\u56f2\u3067\u901a\u4fe1\u53ef\u80fd\u3002", "titles": ["\u81ea\u4f5c\u901a\u4fe1\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3059\u308b\u65b9\u6cd5 - \u30cf\u30e0\u7121\u7dda\u3068GPS\u3092\u6d3b\u7528", "\u9060\u9694\u5730\u304b\u3089\u3067\u3082\u53cb\u4eba\u3068\u9023\u7d61\u3092\u53d6\u308b - APRS\u3068HF\u306e\u6d3b\u7528", "\u30e9\u30b8\u30aa\u901a\u4fe1\u306e\u65b0\u3057\u3044\u624b\u6cd5 - JS8Call\u306e\u7279\u5fb4", "\u30e9\u30b8\u30aa\u901a\u4fe1\u3092\u81ea\u52d5\u5316\u3059\u308b - Raspberry Pi\u306e\u6d3b\u7528", "FT8\u3092\u62e1\u5f35 - JS8Call\u306e\u9769\u65b0\u7684\u306a\u4f7f\u3044\u65b9"]}