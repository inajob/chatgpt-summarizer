{"pubDate": "2024-05-18T08:00:06", "original_title": "NetBSD Bans AI-Generated Code From Commits", "link": "https://hackaday.com/2024/05/18/netbsd-bans-ai-generated-code-from-commits/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2021/08/GithubCopilot.jpg", "original_content": "A recent change was announced to the NetBSD commit guidelines which amends these to state that code which was generated by Large Language Models (LLMs) or similar technologies, such as ChatGPT, Microsofts Copilot or Metas Code Llama is presumed to be tainted code. This amendment was to the existing section about tainted code, which originally referred to any code that was not written directly by the person committing the code, and was due to licensing concerns. The obvious reason behind this is that otherwise code may be copied into the NetBSD codebase which may have been licensed under an incompatible (or proprietary) license.\nIn the case of LLM-based code generators like the above-mentioned, the problem stems from the fact that they are trained on millions of lines of code from all over the internet, which are naturally released under a wide variety of licenses. Invariably, some of that code will be covered by a license thats not acceptable for the NetBSD codebase. Although the guideline mentions that these auto-generated code commits may still be admissible, they require written permission from core developers, and presumably an in-depth audit of the codes heritage. This should leave non-trivial commits that got churned out by ChatGPT and kin out in the cold.\nThe debate about the validity of works produced by current-gen artificial intelligence software is only just beginning, but theres little question that NetBSD has made the right call here. From a legal and software engineering perspective this policy makes perfect sense, as LLM-generated code simply doesnt meet the projects standards. That said, code produced by humans brings with it a whole different set of potential problems.", "title": "NetBSD\u30b3\u30df\u30c3\u30c8\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u306e\u5909\u66f4\u3068LLM\u751f\u6210\u30b3\u30fc\u30c9\u306e\u5f71\u97ff", "body": "NetBSD\u306e\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u6539\u8a02\uff1aLLM\u306a\u3069\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306f\u6c5a\u67d3\u30b3\u30fc\u30c9\u3068\u898b\u306a\u3055\u308c\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u57fa\u6e96\u3092\u6e80\u305f\u3055\u306a\u3044\u305f\u3081\u8a31\u53ef\u304c\u5fc5\u8981\u3002\u30cd\u30c3\u30c8\u4e0a\u306e\u69d8\u3005\u306a\u30e9\u30a4\u30bb\u30f3\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u5b66\u7fd2\u3059\u308bLLM\u306f\u554f\u984c\u304c\u3042\u308b\u3002\u3053\u308c\u306b\u5bfe\u3057NetBSD\u306f\u9069\u5207\u306a\u63aa\u7f6e\u3092\u8b1b\u3058\u305f\u3002", "titles": ["NetBSD\u30b3\u30df\u30c3\u30c8\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u306e\u5909\u66f4\u3068LLM\u751f\u6210\u30b3\u30fc\u30c9\u306e\u5f71\u97ff", "NetBSD\u30b3\u30fc\u30c9\u30d9\u30fc\u30b9\u3078\u306e\u5f71\u97ff\uff1aLLM\u3084\u30c1\u30e3\u30c3\u30c8GPT\u306b\u3088\u308b\u30b3\u30fc\u30c9\u751f\u6210", "NetBSD\u306b\u304a\u3051\u308b\u81ea\u52d5\u751f\u6210\u30b3\u30fc\u30c9\u306e\u554f\u984c\u3068\u5bfe\u7b56", "\u30cd\u30c3\u30c8BSD\u306e\u65b9\u91dd\uff1aLLM\u751f\u6210\u30b3\u30fc\u30c9\u306e\u554f\u984c\u3068\u6271\u3044", "\u30cd\u30c3\u30c8BSD\u3068AI\u751f\u6210\u30b3\u30fc\u30c9\uff1a\u30e9\u30a4\u30bb\u30f3\u30b9\u3068\u54c1\u8cea\u7ba1\u7406"]}