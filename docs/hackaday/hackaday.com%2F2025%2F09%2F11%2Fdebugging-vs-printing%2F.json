{"pubDate": "2025-09-11T08:00:46", "original_title": "Debugging vs Printing", "link": "https://hackaday.com/2025/09/11/debugging-vs-printing/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2020/11/Debugging-1.jpg", "original_content": "Well admit it. We have access to great debugging tools and, yes, sometimes they are invaluable. But most of the time, well just throw a few print statements in whatever program were running to better understand whats going on inside of it. [Loop Invariant] wants to point out to us that there are things a proper debugger can do that you cant do with print statements.\nSo what are these magical things? Well, some of them depend on the debugger, of course. But, in general, debuggers will catch exceptions when they occur. That can be a big help, especially if you have a lot of them and dont want to write print statements on every one. Semi-related is the fact that when a debugger stops for an exception or even a breakpoint, you can walk the call stack to see the flow of code before you got there.\nIn fact, some debuggers can back step, although not all of them do that. Another advantage is that you can evaluate expressions on the fly. Even better, you should be able to alter program flow, jumping over some code, for example.\nSo we get it. There is more to debugging than just crude print statements. Then again, there are plenty of Python libraries to make debug printing nicer (including IceCream). Or write your own debugger. If gdbs user interface puts you off, there are alternatives.", "title": "\u30c7\u30d0\u30c3\u30b0\u306e\u65b0\u5e38\u8b58\uff1a\u5370\u5237\u6587\u3092\u8d85\u3048\u305f\u9053\u5177\u306e\u529b", "body": "\u30c7\u30d0\u30c3\u30ac\u30fc\u306f\u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u3001\u30b3\u30fc\u30eb\u30b9\u30bf\u30c3\u30af\u3092\u8ffd\u8de1\u3067\u304d\u308b\u5229\u70b9\u304c\u3042\u308b\u3002", "titles": ["\u30c7\u30d0\u30c3\u30b0\u306e\u65b0\u5e38\u8b58\uff1a\u5370\u5237\u6587\u3092\u8d85\u3048\u305f\u9053\u5177\u306e\u529b", "\u30c7\u30d0\u30c3\u30ac\u304c\u3082\u305f\u3089\u3059\u771f\u306e\u5229\u70b9\uff1a\u4f8b\u5916\u51e6\u7406\u3068\u30b3\u30fc\u30eb\u30b9\u30bf\u30c3\u30af\u306e\u89e3\u6790", "\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6d41\u308c\u3092\u7406\u89e3\u3059\u308b\uff1a\u30c7\u30d0\u30c3\u30ac\u306e\u6a5f\u80fd\u3092\u6d3b\u7528\u3057\u3088\u3046", "\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u30c7\u30d0\u30c3\u30b0\uff1a\u5f0f\u306e\u8a55\u4fa1\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5236\u5fa1", "\u30c7\u30d0\u30c3\u30b0\u306e\u697d\u3057\u307f\u65b9\uff1aPython\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u30aa\u30ea\u30b8\u30ca\u30eb\u30c7\u30d0\u30c3\u30ac\u306e\u3059\u3059\u3081"]}