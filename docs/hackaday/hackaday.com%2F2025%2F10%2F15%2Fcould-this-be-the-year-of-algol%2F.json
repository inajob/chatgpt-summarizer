{"pubDate": "2025-10-16T02:00:14", "original_title": "Could This be the Year of Algol?", "link": "https://hackaday.com/2025/10/15/could-this-be-the-year-of-algol/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/10/algol.png", "original_content": "Ok, you caught us. It certainly isnt going to be the year of Algol. When you think of old programming languages, you usually think of FORTRAN and COBOL. You should also think of LISP. But only a few people will come up with Algol. While not a household name, it was highly influential, and now, GCC is on the verge of supporting it just like it supports other languages besides C and C++ these days.\nWhy bring an old language up to the forefront? We dont know, but we still find it interesting. We doubt theres a bunch of Algol code waiting to be ported, but you never know.\n\nAlgol first appeared in 1958 and was the lingua franca of academic computer discussions for decades. It was made to fix the problems with Fortran, and its influence is still felt today.\nFor example, Algol was the origin of blocks of code, which Algol set between begin/end pairs. The second version of Algol was where Backus-Naur form, or BNF, originated, something still of interest to language designers today.\nInterestingly, the new compiler will do Algol 68, which was the final and not terribly popular version. It was sort of the New Coke of early computer languages, with many people asserting that Algol 60 was the last real Algol. Algol was known for sometimes using funny characters like \u2261 and \u2282, but, like APL, had to adapt to more conventional character sets. Most of the Algol specifications didnt define I/O, either, so it wasnt enough to know Algol. You had to know which Algol so you could understand how the I/O worked.\nIf you want to learn Algol, theres a tutorial on GitHub (use the compiler online, if you like). While [Niklaus Wirth] didnt create Algol, he was a major player in some of its later development.\n", "title": "- Algol\u306e\u5fa9\u6d3b\uff1a\u53e4\u5178\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u304c\u518d\u8a55\u4fa1\u3055\u308c\u308b\u7406\u7531", "body": "Algol\u306f1958\u5e74\u306b\u767b\u5834\u3057\u3001\u5f71\u97ff\u529b\u306e\u3042\u308b\u53e4\u3044\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u3002GCC\u304cAlgol\u3092\u30b5\u30dd\u30fc\u30c8\u4e88\u5b9a\u3002", "titles": ["- Algol\u306e\u5fa9\u6d3b\uff1a\u53e4\u5178\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u304c\u518d\u8a55\u4fa1\u3055\u308c\u308b\u7406\u7531", "- Algol\u306e\u5f71\u97ff\u529b\uff1a\u73fe\u4ee3\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u6b8b\u308b\u907a\u7523", "- Algol 68\uff1a\u4eba\u6c17\u306e\u306a\u3044\u6700\u5f8c\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3064\u3044\u3066", "- \u30b3\u30fc\u30c9\u306e\u30d6\u30ed\u30c3\u30af\u3068BNF\u306e\u8d77\u6e90\uff1aAlgol\u306e\u91cd\u8981\u306a\u8ca2\u732e", "- GitHub\u3067\u5b66\u3076Algol\uff1a\u53e4\u304d\u826f\u304d\u8a00\u8a9e\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u7d39\u4ecb"]}