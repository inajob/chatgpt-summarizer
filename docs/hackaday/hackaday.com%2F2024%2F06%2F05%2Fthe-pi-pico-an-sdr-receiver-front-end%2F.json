{"pubDate": "2024-06-06T02:00:53", "original_title": "The Pi Pico, An SDR Receiver Front End", "link": "https://hackaday.com/2024/06/05/the-pi-pico-an-sdr-receiver-front-end/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/09/Raspberry_Pi_Pico_top.jpg", "original_content": "Making a software defined radio (SDR) receiver is a relatively straightforward process, given the right radio front end electronics and analogue-to-digital converters. Two separate data streams are generated using clocks at a 90 degree phase shift, and these are passed to the software signal processing for demodulation. But what happens if you lack a pair of radio front ends and a suitable clock generator? Along comes [Mordae] with an SDR using only the hardware on a Raspberry Pi Pico. The result is a fascinating piece of lateral thinking, extracting something from the hardware that it was never designed to do.\nThe onboard RP2040 ADC is of course far too slow for the task, so instead an input is used, with a negative feedback arrangement from another GPIO to form a crude 1-bit ADC. A PIO peripheral is then used to perform the quadrature mixing, resulting in the requisite pair of data streams. At this point these are sent over USB to GNU Radio for demodulating, mainly for convenience rather than necessarily because the microcontroller lacks the power.\nThe result is a working SDR front end, demonstrated pulling in an FM broadcast station. The Pico has to be overclocked to reach that frequency and its more than a little noisy, but were extremely impressed with how much has been done with so little. Oddly it isnt the first Pico SDR weve seen, but the previous one was a much more conventional and lower-frequency affair for the European Long Wave band."}