{"pubDate": "2023-06-03T14:00:55", "original_title": "Software Driving Hardware", "link": "https://hackaday.com/2023/06/03/software-driving-hardware/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2015/12/pizero.jpg", "original_content": "We were talking about [Christopher Barnatt]\u2019s very insightful analysis of what the future holds for the Raspberry Pi single board computers on the Podcast. On the one hand, they\u2019re becoming such competent computers that they are beginning to compete with lightweight desktop machines, instead of just being a hacker curiosity.\nOn the other hand, especially given the shortage and the increase in price that has come with the Pi\u2019s expanding memory endowments, a lot of people who would \u201cjust throw in a Raspberry Pi\u201d are starting to think more carefully about their options. Five years ago, this would have meant looking into what you could whip together on an Arduino-based platform, either on actual Arduino hardware or on an ESP8266 or similar, but that\u2019s a very different beast from a programmer\u2019s perspective. Working with microcontrollers used to be very different from working with even the smallest Linux machines.\nThese days, there is no shortage of microcontrollers that have enough memory \u2013 both flash and RAM \u2013 to support a higher-level environment like MicroPython. And if you think about it, MicroPython brings to the microcontrollers a lot of what people were using a Raspberry Pi for in projects anyway: a friendly interactive programming environment that was free of the compile-here, flash-there debug cycle. If you\u2019re happy coding Python on a single-board Linux computer, you\u2019ll be more or less happy coding in MicroPython or Circuit Python on a microcontroller.\nAnd what this leaves us with, as hackers, is a fantastic spectrum of choices. Where before there was a hard edge between programming C on an 8-bit PIC or an AVR and working with something that had a full Linux operating system like a Pi, it\u2019s all blurry now. And as the Pis, the Jetson, and all the other Linux SBCs are blurring the boundary with more traditional computers as they all become more competent and gain more computer-like peripherals. Nowadays your choice is much freer, and the hardware landscape more fluid. You don\u2019t have to let software development concerns drive your hardware choices, and we think that\u2019s a great thing.\n\nThis article is part of the Hackaday.com newsletter, delivered every seven days for each of the last 200+ weeks. It also includes our favorite articles from the last seven days that you can see on the web version of the newsletter.\n\nWant this type of article to hit your inbox every Friday morning? You should sign up!\n\n"}