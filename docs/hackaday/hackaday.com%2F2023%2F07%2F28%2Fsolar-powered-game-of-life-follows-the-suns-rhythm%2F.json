{"pubDate": "2023-07-28T11:00:17", "original_title": "Solar Powered Game of Life Follows the Sun\u2019s Rhythm", "link": "https://hackaday.com/2023/07/28/solar-powered-game-of-life-follows-the-suns-rhythm/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/07/Solar-Game-of-Life.jpg", "original_content": "Conways Game of Life is a beautiful example of how complex behavior can emerge from a few very simple rules. But while it uses biological terminology such as cells, alive and generation, the basic game is too simplistic to be a model for any real-world biological process. Its easy to add features to make it a bit more life-like, however, as [David Hamp-Gonsalves] has done by giving the Conways creation something of a circadian rhythm.\nThe basic idea is that the speed at which [David]s Game of Life evolves is governed by the amount of ambient light. The game runs off a solar cell that charges a battery, with the batterys voltage determining how long it takes to advance the game by one generation. The system is therefore highly active in full sunlight, and grinds almost to a complete halt at night.\nAn ESP32 runs the simulation and outputs the result to a 400 x 300 pixel e-ink display. The display is extremely power-efficient by its very nature; the ESPs main processor core, on the other hand, is deliberately placed into deep sleep mode most of the time to save as much power as possible. The Ultra Low Power (ULP) co-processor, meanwhile, keeps an eye on the lithium batterys voltage as its slowly being charged by the solar cell. When the voltage reaches 3.3 V, the main CPU wakes up and computes the Games new state. In bright sunlight this happens every few seconds, while on an overcast day it could take minutes or even hours.\n[David]s interesting idea of changing Lifes activity based on the amount of energy available turns the Game into something resembling a cold-blooded animal. Weve seen a similar approach in a solar creature that runs a Life-life simulation on a seven-segment LCD. If its speed you care about however, youre better off implementing Life in an FPGA.", "title": "\u30bd\u30fc\u30e9\u30fc\u30a8\u30cd\u30eb\u30ae\u30fc\u3067\u84c4\u96fb\u6c60\u3092\u5145\u96fb\u3059\u308b\u30b3\u30f3\u30a6\u30a7\u30a4\u306e\u751f\u547d\u30b2\u30fc\u30e0 ", "body": "\u300cConways Game of Life\u300d\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u306a\u30eb\u30fc\u30eb\u304b\u3089\u8907\u96d1\u306a\u632f\u308b\u821e\u3044\u304c\u751f\u3058\u308b\u7f8e\u3057\u3044\u4f8b\u3067\u3059\u3002\u5149\u306e\u91cf\u306b\u3088\u3063\u3066\u9032\u5316\u3059\u308b\u901f\u5ea6\u304c\u6c7a\u307e\u308b\u305f\u3081\u3001\u592a\u967d\u5149\u306e\u3042\u308b\u663c\u9593\u306f\u6d3b\u767a\u306b\u52d5\u304d\u3001\u591c\u9593\u306f\u307b\u3068\u3093\u3069\u505c\u6b62\u3057\u307e\u3059\u3002ESP32\u304c\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u3001\u7d50\u679c\u3092400 x 300\u30d4\u30af\u30bb\u30eb\u306ee-ink\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306b\u51fa\u529b\u3057\u307e\u3059\u3002\u30a8\u30cd\u30eb\u30ae\u30fc\u306e\u91cf\u306b\u57fa\u3065\u3044\u3066\u6d3b\u52d5\u304c\u5909\u5316\u3059\u308b\u305f\u3081\u3001\u51b7\u8840\u52d5\u7269\u306b\u4f3c\u305f\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002", "titles": ["\u30bd\u30fc\u30e9\u30fc\u30a8\u30cd\u30eb\u30ae\u30fc\u3067\u84c4\u96fb\u6c60\u3092\u5145\u96fb\u3059\u308b\u30b3\u30f3\u30a6\u30a7\u30a4\u306e\u751f\u547d\u30b2\u30fc\u30e0 ", "\u5149\u91cf\u306b\u3088\u3063\u3066\u9032\u884c\u30b9\u30d4\u30fc\u30c9\u304c\u5909\u308f\u308b\u751f\u547d\u30b2\u30fc\u30e0 ", "ESP32\u3068E-ink\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3092\u4f7f\u7528\u3057\u305f\u7701\u96fb\u529b\u306a\u751f\u547d\u30b2\u30fc\u30e0 ", "\u592a\u967d\u5149\u3067\u52d5\u304f\u751f\u547d\u30b2\u30fc\u30e0\u304c\u51b7\u8840\u52d5\u7269\u306e\u3088\u3046\u306b ", "\u5b9f\u969b\u306e\u751f\u7269\u30d7\u30ed\u30bb\u30b9\u3092\u30e2\u30c7\u30eb\u5316\u3057\u305f\u751f\u547d\u30b2\u30fc\u30e0"]}