{"pubDate": "2023-10-20T11:00:31", "original_title": "Debugging A 1950s Computer Sounds Like A Pain", "link": "https://hackaday.com/2023/10/20/debugging-a-1950s-computer-sounds-like-a-pain/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/10/whirlwind2.jpg", "original_content": "Debugging computers in the 1950s sounds like it wasnt an easy task. Thats one of the interesting facts from this fascinating talk by [Guy Fedorkow] about the Whirlwind, one of the first digital computers ever built. The development of this remarkable computer started at MIT (Funded by the US Navy) in 1949 as a flight simulator but pivoted to plotting interceptions in the early 1950s. That was because the USSR had just set off their first boosted nuclear bomb, which could be mounted on a missile or bomber. So, the threat of incoming missiles and atomic bombers became real, and the need arose to intercept nuclear bombers.\nAs a real-time computer, Whirlwind received radar data from radar stations around the US that showed the location of the interceptor and the incoming bogey, then calculated the vector for the two to meet up and, erm, have a frank exchange of views. So, how do you debug one of the first real-time computers? Carefully, it seems.\n\nThe GUI aspect of the Whirlwind was a cathode ray tube (CRT) display and a light gun that could be used to select a spot on the screen. Point the gun at the screen, press the button, and the computer plotted the chosen spot. It could also be used more like a mouse: you could select a program to run by pointing the light gun at a menu of numbers on the screen. In its intended use, the operator would use the light gun to designate the interceptor and target. Weve written more about the system (called Volscan) and how it evolved to be used in civilian air traffic control (ATC) systems here.\nWhile engaged in research problems involving extensive computation, Whirlwind computer, a portion of which is shown below, enhances the educational program at M.I.T. From the MIT Museum.\nAmusingly, [Guy Fedorkow] describes how the builders of Whirlwind got a local furniture maker to build the cabinet for the CRT, only to realize that their navy paymasters would hit the ceiling if they realized that they had spent money on making the cabinet look nice. So, they painted it battleship grey and hoped they would not notice. The Navy had cause to be concerned: Whirlwind was consuming nearly eighty percent of the budget of the US Navy research office, according to [Federokow].\nThe Whirlwind was not a complex computer, though: it was a 16-bit computer with only 2048 words of memory. It could handle just 50,000 add functions a second. Compare that to a Raspberry Pi 5, which can handle over 10 GFLOPS. The Whirlwind also consumed an incredible 100 kilowatts of power to perform this arduous computer task, while the Pi 5 needs about 12 watts. The Whirlwind didnt support floating point maths, so it used several shortcuts to calculate the vector for the interceptor that approximated the trigonometric maths needed.\nRemember that this is working in real-time, using actual radar data. That didnt leave enough space for breakpoints or logging. So, [Fedorkow] thinks that they used pre-arranged problems and good planning to debug the system: they\ndidnt just sit down and write the code and throw it on the machine. There are reports of all kinds of experiments and modules done to test pieces of the algorithm independently. So when they did assemble the whole thing, they probably knew how most of the pieces worked already. In fact one of the young Frank Hearts projects was to figure out how to play back the radar tapes onto 16mm film, I assume so they could see what the radar station would have been saying while the data was being replayed into Whirlwind. I think he tried several off-line tricks to try to get it to work with just the analog gear, but it seems ultimately he gave up and wrote WW code to drive a display. \u00a0\n(from the article notes (PDF link) to the\u00a0 article Recovering Software For the Whirlwind Computer)\nFrom the MIT Museum\nThe engineers broke the problem into parts and hand-calculated how the algorithm would interpret certain data sets. They then ran each part by calculating the results by hand, simulating the computer on paper. They did this because they only got access to the computer for about 12 hours a week, and they needed to ensure they got the most out of this time.\nThe Whirlwind project ran until 1959 when it was decommissioned and broken up into parts, replaced by the next wave of digital computers that offered much more computing power without the need to fill an entire basement for the power supply alone.\nThanks for the tip, [Stephen Walters]!\n\n", "title": "1950\u5e74\u4ee3\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u30c7\u30d0\u30c3\u30b0\u306f\u5bb9\u6613\u3067\u306f\u306a\u304b\u3063\u305f", "body": "1950\u5e74\u4ee3\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u30c7\u30d0\u30c3\u30b0\u306f\u5bb9\u6613\u3067\u306f\u306a\u304b\u3063\u305f\u3088\u3046\u3067\u3059\u3002Whirlwind\u306e\u958b\u767a\u306f\u7c73\u6d77\u8ecd\u306e\u8cc7\u91d1\u63f4\u52a9\u3092\u53d7\u3051\u30661949\u5e74\u306bMIT\u3067\u59cb\u307e\u308a\u3001\u521d\u671f\u306e1950\u5e74\u4ee3\u306b\u306f\u30df\u30b5\u30a4\u30eb\u3084\u7206\u6483\u6a5f\u3092\u6a19\u7684\u306b\u3059\u308b\u305f\u3081\u306e\u753b\u7b56\u306b\u5207\u308a\u66ff\u308f\u308a\u307e\u3057\u305f\u3002Whirlwind\u306f\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067\u3001\u7c73\u56fd\u5404\u5730\u306e\u30ec\u30fc\u30c0\u30fc\u30b9\u30c6\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u30ec\u30fc\u30c0\u30fc\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u3063\u3066\u69cb\u7bc9\u3055\u308c\u305f\u6226\u95d8\u6a5f\u306e\u4f4d\u7f6e\u3068\u63a5\u8fd1\u4e2d\u306e\u6575\u6a5f\u3092\u8a08\u7b97\u3057\u307e\u3057\u305f\u3002\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u30c7\u30d0\u30c3\u30b0\u306f\u3001\u624b\u8a08\u7b97\u3084\u4e88\u5b9a\u3055\u308c\u305f\u554f\u984c\u3092\u4f7f\u7528\u3057\u3066\u884c\u308f\u308c\u307e\u3057\u305f\u3002Whirlwind\u306f16\u30d3\u30c3\u30c8\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067\u3042\u308a\u30012048\u30ef\u30fc\u30c9\u306e\u30e1\u30e2\u30ea\u3057\u304b\u6301\u3063\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002", "titles": ["1950\u5e74\u4ee3\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u30c7\u30d0\u30c3\u30b0\u306f\u5bb9\u6613\u3067\u306f\u306a\u304b\u3063\u305f", "\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067\u306e\u30c7\u30d0\u30c3\u30b0\u306e\u65b9\u6cd5\u3068\u306f\uff1f", "Whirlwind\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u8208\u5473\u6df1\u3044\u30ae\u30ba\u30e2\u3068\u306f\uff1f", "Whirlwind\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f\u3069\u306e\u3088\u3046\u306b\u30c7\u30d0\u30c3\u30b0\u3055\u308c\u305f\u306e\u304b\uff1f", "\u30c7\u30b8\u30bf\u30eb\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u6700\u521d\u306e\u547d\u984c\u3068\u305d\u306e\u30c7\u30d0\u30c3\u30b0\u624b\u6cd5"]}