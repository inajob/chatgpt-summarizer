{"pubDate": "2025-10-31T08:00:38", "original_title": "There\u2019s Nothing Boring About Web Search on Retro Amigas", "link": "https://hackaday.com/2025/10/31/theres-nothing-boring-about-web-search-on-retro-amigas/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/10/Screenshot-2025-10-30-at-17-15-09-BoingSearch-e1761858982250.png", "original_content": "Do you have a classic Amiga computer? Do you want to search the web with iBrowse, but keep running into all that pesky modern HTML5 and HTTPS? In that case, [Nihirash] created BoringSearch.com just for you!\nBoringSearch was explicitly inspired by [ActionRetro]s FrogFind search portal, and works similarly in practice. From an end-user perspective, theyre quite similar: both serve as search engines and strip down the websites listed by the search to pure HTML so old browsers can handle it.\nBoring search in its natural habitat, iBrowse on Amiga.\nThe biggest difference we can see betwixt the two is that FrogFind will link to images while BoringSearch either loads them inline or strips them out entirely, depending on the browser you test with and how the page was formatted to begin with. (Ironically, modern Firefox doesnt get images from BoringSearchs page simplifier.) BoringSearch also gives you the option of searching with DuckDuckGo or Google via the SerpAPI, though note that poor [Nihirash] is paying out-of-pocket for google searches.\nBoringSearch is explicitly aimed at the iBrowse browser for late-stage Amigas, but should work equally well with any modern browser. Apparently this project only exists because FrogFind went down for a week, and without the distraction of retrocomptuer websurfing, [Nihirash] was able to bash out his own version from scratch in Rust. If you want to self-host or see how they did it, [Nihirash] put the code on GitHub under a donationware license.\nIf youre scratching your head why on earth people are still going on about Amiga in 2025, heres one take on it.", "title": "- \u30ec\u30c8\u30ed\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5411\u3051\u306e\u30a6\u30a7\u30d6\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u300cBoringSearch\u300d\u306e\u7d39\u4ecb", "body": "\u53e4\u3044Amiga\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5411\u3051\u306e\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u300cBoringSearch\u300d\u304c\u767b\u5834\u3057\u307e\u3057\u305f\u3002", "titles": ["- \u30ec\u30c8\u30ed\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5411\u3051\u306e\u30a6\u30a7\u30d6\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u300cBoringSearch\u300d\u306e\u7d39\u4ecb", "- Amiga\u30e6\u30fc\u30b6\u30fc\u5fc5\u898b\uff01\u53e4\u3044\u30d6\u30e9\u30a6\u30b6\u3067\u3082\u4f7f\u3048\u308b\u691c\u7d22\u6a5f\u80fd", "- FrogFind\u304b\u3089\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u3092\u53d7\u3051\u305fBoringSearch\u306e\u7279\u9577", "- Rust\u3067\u958b\u767a\u3055\u308c\u305fBoringSearch\u306e\u30b3\u30fc\u30c9\u3092GitHub\u3067\u516c\u958b", "- Amiga\u6642\u4ee3\u306e\u9b45\u529b\u3092\u518d\u767a\u898b\u3059\u308b\u305f\u3081\u306e\u30a6\u30a7\u30d6\u30b5\u30fc\u30d5\u30a3\u30f3\u30ac\u30a4\u30c9"]}