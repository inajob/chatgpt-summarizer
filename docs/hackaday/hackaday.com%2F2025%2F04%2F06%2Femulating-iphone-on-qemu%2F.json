{"pubDate": "2025-04-06T14:00:00", "original_title": "Emulating iPhone on QEMU", "link": "https://hackaday.com/2025/04/06/emulating-iphone-on-qemu/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/04/iph.png", "original_content": "[Georges Gagnerot] has been trying to emulate iOS and run iPhone software in a virtual environment. There were a few choices, and qemu-t8030 had a number of interesting features that you can check out in his post.\nThe project requires a patched QEMU, and [Georges] did some basic jailbreaking techniques. The real problem, of course, was not having the Apple Silicon GPU. Older versions of iOS let you select software rendering, but that option is gone on newer versions. However, it was possible to patch the phone to still use software rendering. There are still apps that directly use Metal or OpenGL that wont run, but thats another problem.\nThere is a plan to explore forwarding GPU calls to a real device. However, that seems difficult so it will have to wait for now.\n\nThat wasnt the last problem, of course. But the post gives you a great view into the detective work. There is still work to go, but it looks like a lot of progress.\nYou can find the t8030 code on GitHub. Most of the iPhone hacking we see is hardware even if it means cutting the screen."}