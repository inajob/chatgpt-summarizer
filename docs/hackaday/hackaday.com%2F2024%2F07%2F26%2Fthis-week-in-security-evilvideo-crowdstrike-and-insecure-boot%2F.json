{"pubDate": "2024-07-26T14:00:18", "original_title": "This Week in Security: EvilVideo, Crowdstrike, and InSecure Boot", "link": "https://hackaday.com/2024/07/26/this-week-in-security-evilvideo-crowdstrike-and-insecure-boot/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/01/darkarts.jpg", "original_content": "First up this week is the story of EvilVideo, a clever telegram exploit that disguises an APK as a video file. The earliest record we have of this exploit is on June 6th when it was advertised on a hacking forum.\nResearchers at ESET discovered a demo of the exploit, and were able to disclose it to Telegram on June 26th. It was finally patched on July 11. While it was advertised as a one-click exploit, thats being a bit generous, as the ESET demo video shows. But it was a clever exploit. The central trick is that an APK file can be sent in a Telegram chat, and it displays what looks like a video preview. Tap the video file to watch it, and Telegram prompts you to play it with an external player. But it turns out the external player in this case is Android itself, which prompts the target to install the APK. Sneaky.\n\n\nTraffic Control\nWe briefly covered this story a couple months ago, focusing on how bad of an idea it is to threaten a good faith researcher with legal action. Well the details of this traffic controller hack are available, and its about what youd expect. Part one is all about getting the hardware and finding a trivial security bypass. The web security tab in the user interface seems to be an iframe, and navigating directly to that iframe address simply doesnt trigger a login prompt. Thats the issue that [Andrew Lemon] first disclosed to Q-Free, leading to the legal nastygram.\nWell now we have part two of that research, and spoilers: it doesnt get any better. A couple false starts led [Andrew] to a desperation move. He had a new box to test and no login for it, so he started at the basics with the Burp proxy. And lo and behold, in the request was an odd string. 1.3.6.1.4.1.1206.3.36.1.6.10.1*IDO_0=2\nThat is an Object IDentifier (OID) for the Simple Network Management Protocol (SNMP). These things use a version of SNMP known as National Transportation Communications for Intelligent Transportation System Protocol, or NTCIP. And this device not only uses that protocol, it seems to do so without authentication. Among the fields that are readable and writable without auth are the system username and system password. No hashing in sight. Now we can only hope that this is ancient hardware that isnt in use any longer, or at least no longer connected to the Internet. And well also hope that vendors like Q-Free have learned their lessons since this software was written. Though given their response to the vulnerability disclosure, were not holding our breaths.\nThe Rest of the Crowdstrike Story\nYou may have noticed a bit of weirdness around the world last Friday. Early in the morning of the 18th, Croudstrike pushed a rapid response content update to their Falcon antivirus platform. Rapid Response data does get tested, but does not get a staged roll out. And in this case, a bug in the testing platform led to the invalid file being pushed out, and because the rollout was not staged, it went everywhere all at once.\nThis bogus configuration data triggered an out-of-bounds memory read in the Falcon kernel driver, leading to system crashes. The particularly bitter context is that Crowdstrike had done the same thing to Linux machines a few months earlier. Its beginning to seem that antivirus kernel drivers are a bad idea.\nMicrosoft has made it clear that this wasnt a Microsoft incident. And the little known fact is that Microsoft tried to put an end to antivirus kernel drivers years ago, and was blocked by government regulators. And why didnt Windows offer to boot without the crashing driver? The Crowdstrike kernel driver marks itself as a boot-start driver. The one ray of hope is that its possible for the system to stay up just long enough for Crowdstrike to pull an update before the system crash. It only takes something like 15 reboots.\n\nThis time it was Microsoft\nThere was, apparently, another Blue Screen crash this month. The July Patch Tuesday update dropped some computers into the BitLocker recovery screen, which just happens to be that same shade of blue. Its not yet clear what about this set of fixes triggered the problem, but it seems that getting the recovery key does get these machines running again.\nLetsKill OCSP\nLets Encrypt surprised a few of us by announcing the end of OCSP this week. The Online Certificate Status Protocol is used to query whether a given certificate is still valid. One of the problems with that protocol is that it requests status updates per DNS address, effectively sending a running browsing history over the Internet. Theres a technical issue, in that the attacks that OCSP is designed to defend against also place the attacker in a position to block OCSP requests, and clients will silently ignore OCSP requests that time out.\nThe replacement is the Certificate Revocation List (CRL), which is a simple list of revoked certificates. The problem is that those lists can be huge. Mozilla and Google have rolled out a clever solution, that uses data compression and aggressive optimization to handle those CRLs like any other browser update. And hence, OCSP is destined to go away.\nInSecure Boot\nBinarly is sounding the alarm on Secure Boot. The biggest problem is that at least five device manufacturer used demo keys in production. The master key predictably leaked, and as a result about 200 devices have broken secure boot protections. That key is labeled DO NOT TRUST - AMI Test PK? Perfect, ship it!\nBits and Bytes\nDocker Engine had a nasty regression, where a flaw fixed in 2019 wasnt properly forward-ported to later versions. CVE-2024-41110 is a CVSS 10.0 issue, where an API call with Content-Length of 0 is forwarded without any authentication.\nAn interesting bug was just fixed in curl, where a TLS certificate could trigger the curl ASN.1 parser to fail and return an error. When it did this, the function in question can call free() on a stack buffer, which is particularly bad idea. This is notable as the curl developers refer to it as a C mistake (likely to have been avoided had we not been using C). Time to add some Rust code to curl?\nAnd finally, theres something you should know about Github. Code is forever. This is all working as intended, but can catch you if youre not aware. Namely, private or deleted commits that are attached to a public repo are still accessible, if you know or guess the short commit hash. This has some important ramifications for cleaning up data leaks, and developing private forks. Knowing is half the battle!", "title": "\u30c6\u30ec\u30b0\u30e9\u30e0\u3092\u6a19\u7684\u306b\u3057\u305f\u5de7\u5999\u306aAndroid APK\u306e\u653b\u6483\u306e\u5206\u6790", "body": "EvilVideo\u306fTelegram\u3092\u60aa\u7528\u3059\u308b\u5de7\u5999\u306aAPK\u96a0\u3057\u6280\u8853\u3067\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u7814\u7a76\u8005\u304c\u305d\u306e\u8106\u5f31\u6027\u3092\u767a\u898b\u3057\u3001\u30d1\u30c3\u30c1\u3067\u4fee\u6b63\u3055\u308c\u305f\u3002\u3055\u3089\u306b\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u306aBlue Screen\u30af\u30e9\u30c3\u30b7\u30e5\u304c\u767a\u751f\u3057\u3001\u88fd\u54c1\u306b\u30c7\u30e2\u30ad\u30fc\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u306a\u3069\u306e\u554f\u984c\u3082\u3042\u308b\u3002Github\u306e\u30c7\u30fc\u30bf\u3092\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3059\u308b\u65b9\u6cd5\u306a\u3069\u306b\u5f71\u97ff\u304c\u3042\u308b\u3002", "titles": ["\u30c6\u30ec\u30b0\u30e9\u30e0\u3092\u6a19\u7684\u306b\u3057\u305f\u5de7\u5999\u306aAndroid APK\u306e\u653b\u6483\u306e\u5206\u6790", "\u4ea4\u901a\u5236\u5fa1\u88c5\u7f6e\u306e\u8106\u5f31\u6027\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d0\u30a4\u30d1\u30b9\u306e\u554f\u984c", "Crowdstrike\u306eFalcon\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u30e1\u30e2\u30ea\u30ea\u30fc\u30c9\u554f\u984c", "\u30de\u30a4\u30af\u30ed\u30bd\u30d5\u30c8\u306b\u3088\u308b\u30d6\u30eb\u30fc\u30b9\u30af\u30ea\u30fc\u30f3\u30af\u30e9\u30c3\u30b7\u30e5\u306e\u554f\u984c", "Let's Encrypt\u306b\u3088\u308bOCSP\u5ec3\u6b62\u3068CRL\u306e\u5c0e\u5165"]}