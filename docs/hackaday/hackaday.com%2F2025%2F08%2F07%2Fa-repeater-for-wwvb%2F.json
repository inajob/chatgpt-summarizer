{"pubDate": "2025-08-07T20:00:55", "original_title": "A Repeater for WWVB", "link": "https://hackaday.com/2025/08/07/a-repeater-for-wwvb/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/08/watchtower-main.png", "original_content": "For those living in the continental US who, for whatever reason, dont have access to an NTP server or a GPS device, the next best way to make sure the correct time is known is with the WWVB radio signal. Transmitting out of Colorado, the 60-bit 1 Hz signal reaches all 48 states in the low-frequency band and is a great way to get a clock within a few hundred nanoseconds of the official time. But in high noise situations, particularly on the coasts or in populated areas these radio-based clocks might miss some of the updates. To keep that from happening [Mike] built a repeater for this radio signal.\nThe repeater works by offloading most of the radio components to an Arduino. The microcontroller listens to the WWVB signal and re-transmits it at a lower power to the immediate area, in this case no further than a few inches away or enough to synchronize a few wristwatches. But it has a much better antenna for listening to WWVB so this eliminates the (admittedly uncommon) problem of [Mike]s watches not synchronizing at least once per day. WWVB broadcasts a PWM signal which is easy for an Arduino to duplicate, but this one needed help from a DRV8833 amplifier to generate a meaningfully strong radio signal.\nAlthough there have been other similar projects oriented around the WWVB signal, [Mike]s goal for this was to improve the range of these projects so it could sync more than a single timekeeping device at a time as well as using parts which are more readily available and which have a higher ease of use. Wed say hes done a pretty good job here, and his build instructions cover almost everything even the most beginner breadboarders would need to know to duplicate it on their own.", "title": "- WWVB\u4fe1\u53f7\u3092\u4f7f\u3063\u305f\u6642\u523b\u540c\u671f\u306e\u65b0\u3057\u3044\u30ec\u30b7\u30d4", "body": "WWVB\u4fe1\u53f7\u3092\u5229\u7528\u3057\u305f\u6642\u8a08\u540c\u671f\u30ea\u30d4\u30fc\u30bf\u30fc\u3092Arduino\u3067\u69cb\u7bc9\u3002\u3053\u308c\u306b\u3088\u308a\u4fe1\u53f7\u5f37\u5316\u3068\u8907\u6570\u540c\u671f\u304c\u53ef\u80fd\u306b\u3002", "titles": ["- WWVB\u4fe1\u53f7\u3092\u4f7f\u3063\u305f\u6642\u523b\u540c\u671f\u306e\u65b0\u3057\u3044\u30ec\u30b7\u30d4", "- Arduino\u3092\u5229\u7528\u3057\u305fWWVB\u4fe1\u53f7\u30ea\u30d4\u30fc\u30bf\u30fc\u306e\u4f5c\u6210", "- \u96fb\u6ce2\u6642\u8a08\u306e\u7cbe\u5ea6\u3092\u5411\u4e0a\u3055\u305b\u308b\u7c21\u5358\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "- Arduino\u3068\u30a2\u30f3\u30d7\u3067\u5f37\u5316\u3059\u308bWWVB\u4fe1\u53f7\u306e\u53d7\u4fe1\u65b9\u6cd5", "- \u521d\u5fc3\u8005\u3067\u3082\u3067\u304d\u308b\uff01\u6642\u9593\u3092\u6b63\u78ba\u306b\u4fdd\u3064\u96fb\u5b50\u5de5\u4f5c\u30ac\u30a4\u30c9"]}