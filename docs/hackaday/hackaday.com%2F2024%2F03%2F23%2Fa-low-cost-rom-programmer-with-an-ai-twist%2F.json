{"pubDate": "2024-03-23T11:00:00", "original_title": "A Low-Cost ROM Programmer With an AI Twist", "link": "https://hackaday.com/2024/03/23/a-low-cost-rom-programmer-with-an-ai-twist/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/03/65uino_ROM_programmer.png", "original_content": "There are 0x10 ways to look at ROM programmers: theyre either relatively low-cost tools that let you quickly get about the business of programming vintage ROMs and get back to your retrocomputing activities, or theyre egregiously overpriced on a per-use basis. [Anders Nielsen] seems to land in the latter camp, firmly enough that he not only designed a dedicated ROM programmer for his 65uino ecosystem, but also suffered the indignities of enlisting ChatGPT to help him program the thing.\nWell explain. [Anders] 65uino project has been going on for a while, with low-cost ROM programming only the latest effort. To his way of thinking, a $60 or $70 programmer might just be a significant barrier to those trying to break into retrocomputing, and besides, he seems to be more about the journey than the destination. He recently tackled the problem of generating the right programming voltages; here he turns his attention to putting that to work programming vintage ROMs like the W27C512.\nDoing so with a 6502-based Arduino-compatible microcontroller requires some silicon calisthenics, including a trio of shift registers to do the addressing using a minimum of GPIO. As for the ChatGPT part, [Anders] thought asking the chatbot to help write some of the code would be a great way to increase his productivity. We thought so too, at least once, and like us, [Anders] concluded that while perhaps helpful in a broad sense, the amount of work you put into checking a chatbots work probably exceeds the work saved. But no matter, because in the end the code and the hardware came together to create a prototype ROM programmer for only about $10 worth of parts.\nTrue, the resulting circuit is a bit complex, at least on a breadboard. It should clean up nicely for an eventual PCB version, though, one that plugs right into the 65uino board or even other microcontrollers. Either way, it could make creating custom ROMs for the 65uino a little more accessible.\n\n", "title": "\u5b89\u4fa1\u306aROM\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u3092\u81ea\u4f5c\uff0165uino\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "body": "\u5b89\u4fa1\u306aROM\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u4f5c\u696d\u3092\u30b9\u30e0\u30fc\u30ba\u306b\u3059\u308b\u304b\u3001\u9ad8\u4fa1\u304b\u3069\u3061\u3089\u304b\u3002[Anders Nielsen]\u306f\u5f8c\u8005\u3067\u300165uino\u5411\u3051ROM\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u3092\u8a2d\u8a08\u3057\u3001ChatGPT\u306b\u5354\u529b\u3055\u305b\u305f\u3002\u5f7c\u306f$10\u3067\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3092\u4f5c\u6210\u3057\u3001$60-$70\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u969c\u58c1\u306b\u306a\u308b\u3068\u8003\u3048\u3066\u3044\u308b\u3002", "titles": ["\u5b89\u4fa1\u306aROM\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u3092\u81ea\u4f5c\uff0165uino\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "65uino\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u7528ROM\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u3092\u8a2d\u8a08", "ChatGPT\u306b\u5354\u529b\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 - DIYROM\u30d7\u30ed\u30b0\u30e9\u30de\u30fc", "6502\u30d9\u30fc\u30b9\u306e\u30de\u30a4\u30b3\u30f3\u3067\u53e4\u3044ROM\u3092\u30d7\u30ed\u30b0\u30e9\u30e0", "10\u30c9\u30eb\u306e\u90e8\u54c1\u3067\u4f5c\u308b\u3001\u624b\u4f5c\u308a\u306eROM\u30d7\u30ed\u30b0\u30e9\u30de\u30fc"]}