{"pubDate": "2025-08-27T05:00:57", "original_title": "Simulating the Commodore PET", "link": "https://hackaday.com/2025/08/26/simulating-the-commodore-pet/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/08/Mainboard-CBM3032-banner.png", "original_content": "Over on his blog our hacker [cpt_tom] shows us how to simulate the hardware for a Commodore PET. Two of them in fact, one with static RAM and the other with dynamic RAM.\nThis project is serious business. The simulation environment used is Digital. Digital is a digital logic designer and circuit simulator designed for educational purposes. Its a Java program that runs under the JVM. It deals in .dig files which are XML files that represent the details of the simulated hardware components. You dont need to write the XML files by hand, there is a GUI for that.\nThis digital simulation from [cpt_tom] is based on the original schematics. To run [cpt_tom]s code you first need to clone his GitHub repository: https://github.com/innot/PET-Digital-Simulation. You will need to install Digtial and configure it with the PETComponentsDigitalPlugin.jar Java library that ships with [cpt_tom]s code (the details are in the blog post linked above).\nWhats not in the documentation is that you will need to update the paths to the binaries for the ROMs. This means searching in the .dig XML files for C:\\Users\\thoma\\Documents\\Projects\\PET-Digital-Simulation and replacing that path to whichever path actually contains your ROM binaries (they will be in the code from GitHub and have the same directory structure). This simulation is complete and the hardware components defined can actually run the binaries in the emulated ROMs.\nIt is immensely satisfying after youve got everything running to enter at the keyboard:\n10 PRINT \"HELLO, WORLD\"\nRUN\n\nTo be greeted with:\nHELLO, WORLD\nREADY.\n\nThis is what technology is all about! :)\nIf you do go through the process of downloading this code and loading it in the Digital simulator you will be presented with a complete schematic comprised of the following components: CPU, IEEE-488 Interface, Cassette and Keyboard, ROMS, RAMS, Master Clock, Display Logic, and Display RAMs. All the bits you need for a complete and functional computer!\nIf youre interested in the Commodore PET you might also like to check out A Tricky Commodore PET Repair And A Lesson About Assumptions.\nThanks to [Thomas Holland] for writing in to let us know about this one.\n<!-- 2025-08-26 jj5 - NOTE: there was a project page on Hackaday.io for this project but it wasn't used in this writeup. https://hackaday.io/project/203269-simulating-the-commodore-pet-at-signal-level -->", "title": "- \u30b3\u30e2\u30c9\u30fc\u30ebPET\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u4f53\u9a13\u3057\u3088\u3046", "body": "cpt_tom\u304c\u30b3\u30e2\u30c9\u30fc\u30ebPET\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u7d39\u4ecb\u3002Digital\u3092\u4f7f\u3044\u3001\u5b8c\u5168\u306a\u56de\u8def\u56f3\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002", "titles": ["- \u30b3\u30e2\u30c9\u30fc\u30ebPET\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u4f53\u9a13\u3057\u3088\u3046", "- Digital\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u3067\u5b66\u3076\u3001\u30b3\u30e2\u30c9\u30fc\u30ebPET\u306e\u5185\u90e8\u4ed5\u7d44\u307f", "- \u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u3092\u4f7f\u3063\u305f\u96fb\u5b50\u5de5\u4f5c\u306e\u65b0\u3057\u3044\u6311\u6226", "- GitHub\u304b\u3089\u306e\u30b3\u30fc\u30c9\u3067\u59cb\u3081\u308bPET\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "- \"HELLO, WORLD\"\u3092\u30d7\u30ea\u30f3\u30c8\u3059\u308b\uff01\u30b3\u30e2\u30c9\u30fc\u30ebPET\u306e\u9b45\u529b"]}