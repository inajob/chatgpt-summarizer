{"pubDate": "2024-04-21T05:00:00", "original_title": "Trolling IBM\u2019s Quantum Processor Advantage With a Commodore 64", "link": "https://hackaday.com/2024/04/20/trolling-ibms-quantum-processor-advantage-with-a-commodore-64/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/04/commodore_64_sparse_pauli_dynamics_setup.jpg", "original_content": "The memory map ofthe implementation, as set within the address space of the Commodore 64  about 15kB of the accessible 64kB RAM is used.\nTheres been a lot of fuss about the quantum advantage that would arise from the use of quantum processors and quantum systems in general. Yet in this high-noise, high-uncertainty era of quantum computing it seems fair to say that the advantage part is a bit of a stretch. Most recently an anonymous paper (PDF, starts at page 199) takes IBMs claims with its 127-bit Eagle quantum processor to its ludicrous conclusion by running the same Trotterized Ising model on the ~1 MHz MOS 6510 processor in a Commodore 64. (Worth noting: this paper was submitted to Sigbovik, the conference of the Association for Computational Heresy.)\nWe previously covered the same claims by IBM already getting walloped by another group of researchers (Tindall et al., 2024) using a tensor network on a classical computer. The anonymous submitter of the Sigbovik paper based their experiment on a January 2024 research paper by [Tomislav Begu\u0161i\u0107] and colleagues as published in Science Advances. These researchers also used a classical tensor network to run the IBM experiment many times faster and more accurately, which the anonymous researcher(s) took as the basis for a version that runs on the C64 in a mere 15 kB of RAM, with the code put on an Atmel AT28C256 ROM inside a cartridge which the C64 then ran from.\nThe same sparse Pauli dynamics algorithm was used as by [Tomislav Begu\u0161i\u0107] et al., with some limitations due to the limited amount of RAM, implementing it in 6502 assembly. Although the C64 is ~300,000x slower per datapoint than a modern laptop, it does this much more efficiently than the quantum processor, and without the high error rate. Yes, that means that a compute cluster of Commodore 64s can likely outperform a please call us for a quote quantum system depending on which linear algebra problem youre trying to solve. Quantum computers may yet have their application, but this isnt it, yet.\nThanks to [Stephen Walters] and [Pio] for the tip.", "title": "\u30b3\u30e2\u30c9\u30fc\u30eb64\u306e15kB RAM\u3092\u4f7f\u7528\u3057\u305f\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u5b9f\u9a13", "body": "\u30b3\u30e2\u30c9\u30fc\u30eb64\u306e\u30e1\u30e2\u30ea\u30de\u30c3\u30d7\u3092\u4f7f\u7528\u3057\u300115KB\u306eRAM\u3092\u4f7f\u3063\u3066\u3001\u540c\u3058Trotterized Ising\u30e2\u30c7\u30eb\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u3001C64\u4e0a\u3067\u5b9f\u9a13\u304c\u884c\u308f\u308c\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u3001\u9ad8\u3044\u30a8\u30e9\u30fc\u7387\u3084\u9045\u3055\u3092\u62b1\u3048\u308b\u91cf\u5b50\u30d7\u30ed\u30bb\u30c3\u30b5\u3088\u308a\u3082\u3001\u52b9\u7387\u7684\u306b\u51e6\u7406\u3067\u304d\u308b\u53ef\u80fd\u6027\u304c\u793a\u3055\u308c\u307e\u3057\u305f\u3002", "titles": ["\u30b3\u30e2\u30c9\u30fc\u30eb64\u306e15kB RAM\u3092\u4f7f\u7528\u3057\u305f\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u5b9f\u9a13", "\u91cf\u5b50\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u52b9\u529b\u3092\u8d85\u3048\u308b\u30b3\u30e2\u30c9\u30fc\u30eb64", "\u91cf\u5b50\u30d7\u30ed\u30bb\u30c3\u30b5\u306b\u4ee3\u308f\u308b\u4e00\u822c\u7684\u306a\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u624b\u6cd5", "\u30b3\u30e2\u30c9\u30fc\u30eb64\u306e\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u3092\u5229\u7528\u3057\u305f\u9ad8\u901f\u8a08\u7b97", "\u53e4\u5178\u7684\u306a\u30c6\u30f3\u30bd\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3088\u308b\u9ad8\u7cbe\u5ea6\u306a\u8a08\u7b97"]}