{"pubDate": "2023-07-25T23:00:41", "original_title": "486 Gets Animated Turbo Button Thanks to Arduino", "link": "https://hackaday.com/2023/07/25/486-gets-animated-turbo-button-thanks-to-arduino/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/07/arduturbo_feat.jpg", "original_content": "There was a point in time, excruciatingly brief, in which desktop computers often had a large TURBO button on their front panel. Some even featured an LCD that would indicate the current CPU frequency, providing visual conformation that your machine had leaped to a blistering 66 MHz.\nThe 486 that [someyob] is restoring had the Turbo button, but sadly there was just a simple LED to show whether or not it was engaged. But there\u00a0was a window in the front panel where it seemed like an LCD was intended to go, so they decided to wire up their own CPU indicator by sensing the state of the Turbo LED with an Arduino Pro Mini.\nNow to modern audiences, this might seem like cheating. After all, the Arduino isnt actually measuring the CPU speed, nor is it directly controlling it (thats still done by the original Turbo button wiring). But the truth is, even back in the day, the CPU frequency displays faked it  they just toggled between showing two predefined frequencies depending on the state of the button. The arrangement [someyob] has come up with does the same thing, except now theres some extra processing power in the mix, so the display can show some slick animations as it switches between 33 and 66 Mhz.\nIn the GitHub repository, [someyob] has provided the Arduino source code and schematics showing how the microcontroller was shoehorned into the existing front panel wiring without compromising its functionality. Theres even a brief video below that shows the display in operation.\nLike the idea but dont have a 486 laying around? Dont worry. Weve seen a similar panel built for modern machines that\u00a0 just doesnt look the part, it actually manages to be functional.\n\n", "title": "\u81ea\u4f5c\u306eCPU\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u30fc\uff1a\u53e4\u3044486\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306bArduino\u3092\u7d44\u307f\u8fbc\u3093\u3067\u30af\u30fc\u30eb\u306a\u8868\u793a\u3092\u5b9f\u73fe", "body": "\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306eTURBO\u30dc\u30bf\u30f3\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\u3002Arduino\u3092\u4f7f\u7528\u3057\u3066\u3001CPU\u306e\u901f\u5ea6\u3092\u8868\u793a\u3059\u308b\u30ab\u30b9\u30bf\u30e0\u30d1\u30cd\u30eb\u3092\u4f5c\u6210\u3002\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30dc\u30bf\u30f3\u914d\u7dda\u306f\u305d\u306e\u307e\u307e\u3067\u3001\u8868\u793a\u306f\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u4ed8\u304d\u3067\u5207\u308a\u66ff\u3048\u3089\u308c\u308b\u3002GitHub\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3068\u56de\u8def\u56f3\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3002", "titles": ["\u81ea\u4f5c\u306eCPU\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u30fc\uff1a\u53e4\u3044486\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306bArduino\u3092\u7d44\u307f\u8fbc\u3093\u3067\u30af\u30fc\u30eb\u306a\u8868\u793a\u3092\u5b9f\u73fe", "\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306eTurbo\u30dc\u30bf\u30f3\uff1aArduino\u3092\u4f7f\u3063\u3066CPU\u306e\u5468\u6ce2\u6570\u3092\u8868\u793a", "\u30ec\u30c8\u30ed\u306aCPU\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u30fc\uff1a\u7c21\u5358\u306aLED\u304b\u3089Arduino\u3092\u4f7f\u3063\u3066\u8868\u793a\u3092\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9", "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u4ed5\u7d44\u307f\u3092\u6539\u826f\uff1aLED\u304b\u3089LCD\u3078\u306e\u5909\u63db\u3067CPU\u306e\u901f\u5ea6\u3092\u8868\u793a", "\u30e6\u30fc\u30b6\u30fc\u306b\u3088\u308b\u6539\u9020\uff1a\u53e4\u3044\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306eTurbo\u30dc\u30bf\u30f3\u3092\u5229\u7528\u3057\u305f\u30af\u30ea\u30a8\u30a4\u30c6\u30a3\u30d6\u306a\u8868\u793a"]}