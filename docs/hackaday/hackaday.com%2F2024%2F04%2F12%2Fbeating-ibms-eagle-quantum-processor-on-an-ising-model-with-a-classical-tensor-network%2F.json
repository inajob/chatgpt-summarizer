{"pubDate": "2024-04-12T15:00:00", "original_title": "Beating IBM\u2019s Eagle Quantum Processor On An Ising Model With a Classical Tensor Network", "link": "https://hackaday.com/2024/04/12/beating-ibms-eagle-quantum-processor-on-an-ising-model-with-a-classical-tensor-network/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/03/Quantum-Summit_Hero-and-Carousel-Template_1920x720.jpg", "original_content": "The central selling point of qubit-based quantum processors is that they can supposedly solve certain types of tasks much faster than a classical computer. This comes however with the major complication of quantum computing being noisy, i.e. affected by outside influences. That this shouldnt be a hindrance was the point of an article published last year by IBM researchers where they demonstrated a speed-up of a Trotterized time evolution of a 2D transverse-field Ising model on an IBM Eagle 127-qubit quantum processor, even with the error rate of todays noisy quantum processors. Now, however, [Joseph Tindall] and colleagues have demonstrated with a recently published paper in Physics that they can beat the IBM quantum processor with a classical processor.\nIn the IBM paper by [Yougseok Kim] and colleagues as published in Nature, the essential take is that despite fault-tolerance heuristics being required with noisy quantum computers, this does not mean that there are no applications for such flawed quantum systems in computing, especially when scaling and speeding up quantum processors. In this particular experiment it concerns an Ising model, a statistical mechanical model, which has many applications in physics, neuroscience, etc., based around phase transitions.\nUnlike the simulation running on the IBM system, the classical simulation only has to run once to get accurate results, which along with other optimizations still gives classical systems the lead. Until we develop quantum processors with built-in error-tolerance, of course.", "title": "\u30ce\u30a4\u30ba\u306e\u5f71\u97ff\u3092\u53d7\u3051\u308b\u91cf\u5b50\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc", "body": "Qubit\u306b\u57fa\u3065\u304f\u91cf\u5b50\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306f\u3001\u53e4\u5178\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u3088\u308a\u3082\u7279\u5b9a\u306e\u30bf\u30b9\u30af\u3092\u306f\u308b\u304b\u306b\u901f\u304f\u89e3\u6c7a\u3067\u304d\u308b\u3068\u8a00\u308f\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30ce\u30a4\u30ba\u304c\u554f\u984c\u3067\u3059\u3002IBM\u7814\u7a76\u8005\u306f\u3001\u73fe\u5728\u306e\u30ce\u30a4\u30b8\u30fc\u306a\u91cf\u5b50\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306e\u30a8\u30e9\u30fc\u7387\u3067\u3082\u901f\u5ea6\u5411\u4e0a\u3092\u5b9f\u8a3c\u3057\u307e\u3057\u305f\u304c\u3001\u65b0\u3057\u3044\u8ad6\u6587\u3067\u306f\u53e4\u5178\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u4e0a\u56de\u308b\u3053\u3068\u3092\u793a\u3057\u307e\u3057\u305f\u3002", "titles": ["\u30ce\u30a4\u30ba\u306e\u5f71\u97ff\u3092\u53d7\u3051\u308b\u91cf\u5b50\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc", "IBM\u306e\u30a8\u30e9\u30fc\u7387\u306e\u91cf\u5b50\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306b\u3088\u308b\u30b9\u30d4\u30fc\u30c9\u30a2\u30c3\u30d7", "2D\u8ee2\u79fb\u5834\u30a4\u30b8\u30f3\u30b0\u30e2\u30c7\u30eb\u306e\u30a8\u30e9\u30fc\u7387\u306e\u91cf\u5b50\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3068\u306e\u6bd4\u8f03", "\u5c06\u6765\u306e\u91cf\u5b50\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306e\u8ab2\u984c", "\u53e4\u5178\u7684\u30b7\u30b9\u30c6\u30e0\u306e\u512a\u4f4d\u6027"]}