{"pubDate": "2025-07-31T23:00:39", "original_title": "2025 One Hertz Challenge: 4-Function Frequency Counter", "link": "https://hackaday.com/2025/07/31/2025-one-hertz-challenge-4-function-frequency-counter/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/07/4250581751870707463-e1753268674265.jpg", "original_content": "Frequency! Its an important thing to measure, which is why [Jacques Pelletier] built a frequency counter some time ago. The four-function unit is humble, capable, and also an entry into our 2025 One Hertz Challenge!\nThe build began a long while ago when electronic parts were still available in local stores, notes Jacques, dating the project somewhat. The manner of construction, too, is thoroughly old-school. The project case and the sweet red digits are both classic, but so is whats inside. The counter is based around 4553 BCD counter chips and 4511 decoder ICs. Laced together, the logic both counts frequency in binary-coded decimal and then converts that into the right set of signals to drive the 7-segment displays. Sample time is either 1 Hz or 0.1 Hz, which is derived from an 8MHz oscillator. It can act as a frequency meter, period meter, chronometer, or a basic counter. The whole build is all raw logic chips, there are no microprocessors or microcontrollers involved.\nIt just goes to show, you can build plenty of useful things without relying on code and RAM and all that nonsense. You just need some CMOS chips and a bucket of smarts to get the job done!\n \n\n\n", "title": "- \u30ec\u30c8\u30ed\u306a\u96fb\u5b50\u5de5\u4f5c\uff1a\u30a2\u30ca\u30ed\u30b0\u5f0f\u5468\u6ce2\u6570\u30ab\u30a6\u30f3\u30bf\u306e\u5236\u4f5c", "body": "\u30b8\u30e3\u30c3\u30af\u30fb\u30da\u30eb\u30c6\u30a3\u30a8\u304c\u53e4\u5178\u7684\u306a\u5468\u6ce2\u6570\u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u88fd\u4f5c\u3002\u30ed\u30b8\u30c3\u30af\u30c1\u30c3\u30d7\u3092\u4f7f\u7528\u3057\u305f\u30b7\u30f3\u30d7\u30eb\u306a\u8a2d\u8a08\u3002", "titles": ["- \u30ec\u30c8\u30ed\u306a\u96fb\u5b50\u5de5\u4f5c\uff1a\u30a2\u30ca\u30ed\u30b0\u5f0f\u5468\u6ce2\u6570\u30ab\u30a6\u30f3\u30bf\u306e\u5236\u4f5c", "- 4573 BCD\u30ab\u30a6\u30f3\u30bf\u3092\u4f7f\u3063\u305f\u5468\u6ce2\u6570\u6e2c\u5b9a\u5668\u306e\u4ed5\u7d44\u307f", "- \u30b3\u30fc\u30c9\u306a\u3057\u3067\u5b9f\u73fe\u3059\u308b\uff01\u30af\u30e9\u30b7\u30c3\u30af\u306a\u5468\u6ce2\u6570\u30e1\u30fc\u30bf\u30fc\u306e\u9b45\u529b", "- 1Hz\u30c1\u30e3\u30ec\u30f3\u30b8\u306b\u6311\u3080\uff01\u30b7\u30f3\u30d7\u30eb\u306a\u5468\u6ce2\u6570\u30ab\u30a6\u30f3\u30bf\u306e\u7d39\u4ecb", "- \u53e4\u304d\u826f\u304d\u96fb\u5b50\u5de5\u4f5c\uff1aCMOS\u30c1\u30c3\u30d7\u3067\u4f5c\u308b\u5468\u6ce2\u6570\u30ab\u30a6\u30f3\u30bf\u30fc"]}