{"pubDate": "2025-02-12T18:00:23", "original_title": "PCB Design Review: M.2 SSD Splitter", "link": "https://hackaday.com/2025/02/12/pcb-design-review-m-2-ssd-splitter/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/04/PCBdesign.jpg", "original_content": "Todays PCB design review is a board is from [Wificable]. iIs a novel dual-SSD laptop adapter board! See, CPUs and chipsets often let you split wide PCIe links into multiple smaller width links. This board relies on a specific laptop with a specific CPU series, and a BIOS mod, to put two M.2 NVMe SSDs into a single SSD slot of a specific series laptop.\nThis board has two crucial factors  mechanical compatibility, and electrical function. Looking into mechanics, its a 0.8 mm thick PCB that plugs into a M.2 socket, and it has sockets for two SSDs on it  plenty of bending going on. For electronics, it has a PCIe REFCLK clock buffer, that [Wificable] found on Mouser  a must have for PCIe bifurcation, and a must-work for this boards core! Apart from that, this is a 4-layer board, it basically has to be for diffpairs to work first-try.\nOf course, the clock buffer chip is the main active component and the focus of the board, most likely mistakes will happen there  lets look at the chip first.\nAll Eyes On Chip\n\nThe schematic is from a server board schematic  which is wonderful! Datasheet schematics are not always as complete or as succinct as youd like them to be, and its super helpful to have a known-working schematic designed by a third party, that is production-grade and well-tested for 24/7 operation. We used that for our M.2 card design,\n\nThe symbol. It works, but cross-checking it against the original schematic isnt as easy.\nOf course, the symbol had to be redrawn for KiCad, and [Wificable] also rearranged the symbol corresponding to the physical pinout, as opposed to arranging them logically, like many KiCad symbols do. This is mostly a matter of preference and either way is fair  I switch between either of the two, depending on the situation. One note, though  when copying a schematic, I highly recommend you use the same pin arrangement as that schematic, its just really helpful to avoid mistakes.\nIn this case, Id argue the logical arrangement is also cleaner, and thats what Id personally go for. However, design reviews are about function way more than aesthetics, and the chips wiring looked fine!\nIn my view, policing aesthetics is generally a no-go for PCB design  most you can do is suggestions. The line between aesthetic problems and practical problems is often blurry, lets say, when the problem is about track routing, connector layout, making the schematic easy to check at a glance, or a good few other things. When in doubt, think about the best effort-to-payoff ratio for the person receiving the review.\nLayout-wise, things are also fine  but they could be a little finer. The decoupling capacitors do need vias on their GND pads  easy to add, and a big benefit as far as power delivery goes. There are other areas where vias are called for! That, or having vias arranged a little differently, at the very least. Lets take a look!\nWell-Grounded\n\n\n\n\n\nThere are quite a few ground-related changes Id recommend here specifically, given that its a high-speed design. Ive been reading a fair few how to treat ground fills better documents, and they discuss about a row of signals with vias, ground unable to get between them. The recommended way is to arrange the vias diagonally, instead, letting some of the ground polygon fill between the gaps and freeing up space for GND vias  and thats what we can do here, too.\nfrom Gen 4 PCIe Connector  Channel Design and Optimization: 16G T/s for Free, [Intel]Its also important to add vias on all GND pads next to high-speed signals, as close to the GND pads as possible. In our case, this means the M.2 edge and socket GND pads, so we have to move their respective GND vias as close to them as possible  signals have to be moved around a bit for this, but its worthwhile. Keep in mind  use the smallest vias your fab offers, at least without a price increase, because it helps a ton during design, especially considering how comically large the default KiCad vias are! The default is 0.8/0.4 (outer/drill), but you can safely go down to 0.6/0.4, and at fabs like JLCPCB, 0.5/0.3 is available without a price increase.\nDo Not Bend\nFor dessert, we look at mechanics more closely. One thing that springs out to me  this is a 0.8 mm board inserted into a M.2 socket. The cutout in the middle is a liability. Some sort of cutout is necessary to accomodate plastic features of the laptop, but having a wide center-to-edge slot is a recipe for PCB bends. In this case, the edge-to-center slot can become a shorter one, mechanically connected on the edge again, just needs a little bit more measurement.\n\n\n\n\nSo far, the boards have been produced, thanks to Aislers new 0.8 mm four-layer process. Theyve been partially tested: [Wificable] didnt get the chip yet, but has already successfully done the BIOS mod, and tested the bifurcation using magnet wire to switch between REFCLKs. Whenever [Wificable] finds time to finish testing, we will hear from her about how well the chip functions!\nAs usual, if you would like a design review for your board, submit a tip to us with [design review] in the title, linking to your board files. KiCad design files strongly preferred, both repository-stored files (GitHub/GitLab/etc) and shady Google Drive/Dropbox/etc .zip links are accepted."}