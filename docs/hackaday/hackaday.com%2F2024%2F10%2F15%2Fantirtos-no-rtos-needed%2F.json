{"pubDate": "2024-10-15T11:00:51", "original_title": "ANTIRTOS: No RTOS Needed", "link": "https://hackaday.com/2024/10/15/antirtos-no-rtos-needed/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/10/antirtos_feat.png", "original_content": "Embedded programming is a tricky task that looks straightforward to the uninitiated, but those with a few decades of experience know differently. Getting what you want to work predictably or even fit into the target can be challenging. When you get to a certain level of complexity, breaking code down into multiple tasks can become necessary, and then most of us will reach for a real-time operating system (RTOS), and the real fun begins. [Aleksei Tertychnyi] clearly understands such issues but instead came up with an alternative they call ANTIRTOS.\nThe idea behind the project is not to use an RTOS at all but to manage tasks deterministically by utilizing multiple queues of function pointers. The work results in an ultra-lightweight task management library targeting embedded platforms, whether Arduino-based or otherwise. Its pure C++, so it generally doesnt matter. The emphasis is on rapid interrupt response, which is, we know, critical to a good embedded design. Implemented as a single header file that is less than 350 lines long, it is not hard to understand (provided you know C++ templates!) and easy to extend to add needed features as they arise. A small code base also makes debugging easier. A vital point of the project is the management of delay routines. Instead of a plain delay(), you write a custom version that executes your short execution task queue, so no time is wasted. Of course, you have to plan how the tasks are grouped and scheduled and all the data flow issues, but thats all the stuff youd be doing anyway.\nThe GitHub project\u00a0page has some clear examples and is the place to grab that header file to try it yourself. When you really need an RTOS, you have a lot of choices, mostly costing money, but\u00a0heres our guide to two popular open source projects: FreeRTOS and ChibiOS. Sometimes, an RTOS isnt enough, so we\u00a0design our own full OS from scratch  sort\u00a0of.", "title": "\u9ad8\u52b9\u7387\u306a\u7d44\u307f\u8fbc\u307f\u30bf\u30b9\u30af\u7ba1\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\u300cANTIRTOS\u300d\u306e\u958b\u767a", "body": "\u7d44\u307f\u8fbc\u307f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u719f\u7df4\u8005\u306b\u306f\u96e3\u3057\u3044\u304c\u3001[Aleksei Tertychnyi]\u306fANTIRTOS\u3068\u3044\u3046\u65b9\u6cd5\u3092\u8003\u6848\u3002RTOS\u3092\u4f7f\u308f\u305a\u306b\u8efd\u91cf\u306a\u30bf\u30b9\u30af\u7ba1\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63d0\u4f9b\u3057\u3001\u5272\u308a\u8fbc\u307f\u5fdc\u7b54\u3092\u91cd\u8996\u3002GitHub\u3067\u5165\u624b\u53ef\u80fd\u3002 RTOS\u304c\u5fc5\u8981\u306a\u5834\u5408\u306fFreeRTOS\u3084ChibiOS\u3092\u5229\u7528\u3002", "titles": ["\u9ad8\u52b9\u7387\u306a\u7d44\u307f\u8fbc\u307f\u30bf\u30b9\u30af\u7ba1\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\u300cANTIRTOS\u300d\u306e\u958b\u767a", "\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\uff08RTOS\uff09\u3092\u4f7f\u308f\u306a\u3044\u4ee3\u66ff\u624b\u6bb5\u3068\u306f\uff1f", "\u7d44\u307f\u8fbc\u307f\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5411\u3051\u306e\u8d85\u8efd\u91cf\u30bf\u30b9\u30af\u7ba1\u7406\u30e9\u30a4\u30d6\u30e9\u30ea", "\u7d44\u307f\u8fbc\u307f\u30c7\u30b6\u30a4\u30f3\u306b\u91cd\u8981\u306a\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u5fdc\u7b54\u6027\u3092\u6301\u3064ANTIRTOS", "\u30d7\u30ed\u30b0\u30e9\u30de\u30d6\u30eb\u306a\u9045\u5ef6\u30eb\u30fc\u30c1\u30f3\u7ba1\u7406\u3067\u52b9\u7387\u7684\u306a\u7d44\u307f\u8fbc\u307f\u958b\u767a\u3092\u5b9f\u73fe"]}