{"pubDate": "2025-09-08T23:00:51", "original_title": "How to Use the AT24C32 EEPROM for 4KB External Memory for Microcontrollers", "link": "https://hackaday.com/2025/09/08/how-to-use-the-at24c32-eeprom-for-4kb-external-memory-for-microcontrollers/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/09/AT24C32-EEPROM-Explained-banner.jpg", "youtube": "https://www.youtube.com/watch?v=_Ke4A_McTEY", "original_content": "Over on YouTube [Electronic Wizard] explains how to use the AT24C32 EEPROM for external memory for microcontrollers.\nHe begins by explaining that you dont want to try modifying your microcontroller flash memory for storing settings, you want to use a separate EEPROM for that. Sometimes your microcontroller will have EEPROM memory attached, but you might still find yourself needing to attach more. The AT24C32 EEPROM is a 4KB non-volatile memory chip. Its available in various 8-pin packages and two voltage levels, either 2.7 to 5.5 volts or 1.8 to 5.5 volts, and its programmed using the I2C protocol.\n\nThe AT24C32 has three address pins, A{0,1,2}, a Serial Data pin (SDA), a Serial Clock Input (SCL), and a Write Protect pin. He explains how to use the address pins to set the device I2C address and goes into some detail about how the I2C protocol works. Microcontrollers usually have an API for talking to I2C devices, for STM32 controllers that is functions such as HAL_I2C_Master_Transmit(). He refers the viewer to the datasheet for how to accomplish various write and read operations over I2C. The AT24C32 uses 16 bits for addresses of which only 12 are relevant (13 bits are relevant for the 8KB version of the EEPROM the AT24C64).\nIf youre interested in EEPROMs you might also like to read Erasing EEPROMs Isn\u2019t Always As Easy As It Seems and How Do You Test If An EEPROM Can Hold Data For 100 Years?\n"}