{"pubDate": "2024-06-21T20:00:53", "original_title": "Tiny Tapeout 4: A PWM clone of Covox Speech Thing", "link": "https://hackaday.com/2024/06/21/tiny-tapeout-4-a-pwm-clone-of-covox-speech-thing/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/06/tt4-cvx-carrier-featured.png", "original_content": "Tiny Tapout is an interesting project, leveraging the power of cloud computing and collaborative purchasing to make the mysterious art of IC design more accessible for hardware hackers. [Yeo Kheng Meng] is one such hacker, and they have produced their very first custom IC for use with their retrocomputing efforts. As they lament, they left it a little late for the shuttle run submission deadline, so they came up with a very simple project with the equivalent behaviour of the Covox Speech Thing, which is just a basic R-2R ladder DAC hanging from a PC parallel port.\nThe computed gate-level routing of the ASIC layout\nThe plan was to capture an 8-bit input bus and compare it against a free-running counter. If the input value is larger than the counter, the output goes high; otherwise, it goes low. This produces a PWM waveform representing the input value. Following the digital output with an RC low-pass filter will generate an analogue representation. Its all very simple stuff. A few details to contend with are specific to Tiny Tapout, such as taking note of the enable and global resets. These are passed down from the chip-level wrapper to indicate when your design has control of the physical IOs and is selected for operation. [Yeo] noticed that the GitHub post-synthesis simulation failed due to not taking note of the reset condition and initialising those pesky flip-flops.\nAfter throwing the design down onto a Mimas A7 Artix 7 FPGA board for a quick test, data sent from a parallel port-connected PC popped out as a PWM waveform as expected, and some test audio could be played. Whilst it may be true that you dont have to prototype on an FPGA, and some would argue that its a lot of extra effort for many cases, without a good quality graphical simulation and robust testbench, youre practically working blind. And thats not how working chips get made.\nIf you want to read into Tiny Tapeout some more, then weve a quick guide for that. Or, perhaps hear it direct from the team instead?\n\n", "title": "IC\u30c7\u30b6\u30a4\u30f3\u521d\u5fc3\u8005\u3078\u306e\u30a2\u30af\u30bb\u30b9\u5411\u4e0a\uff1aTiny Tapout\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "body": "Tiny Tapout\u306f\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30cf\u30c3\u30ab\u30fc\u5411\u3051\u306bIC\u30c7\u30b6\u30a4\u30f3\u3092\u3088\u308a\u30a2\u30af\u30bb\u30b9\u3057\u3084\u3059\u304f\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3001\u30ec\u30c8\u30ed\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u306b\u4f7f\u7528\u3059\u308b\u305f\u3081\u306e\u521d\u306e\u30ab\u30b9\u30bf\u30e0IC\u304c\u751f\u7523\u3055\u308c\u305f\u3002PWM\u6ce2\u5f62\u3092\u751f\u6210\u3057\u3066\u97f3\u58f0\u3092\u518d\u751f\u3002FPGA\u30dc\u30fc\u30c9\u3067\u30c6\u30b9\u30c8\u3057\u3001\u904b\u7528\u3092\u793a\u3059IO\u306b\u6ce8\u610f\u3002", "titles": ["IC\u30c7\u30b6\u30a4\u30f3\u521d\u5fc3\u8005\u3078\u306e\u30a2\u30af\u30bb\u30b9\u5411\u4e0a\uff1aTiny Tapout\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "\u30ec\u30c8\u30ed\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u7528\u306e\u30ab\u30b9\u30bf\u30e0IC\u958b\u767a", "PWM\u6ce2\u5f62\u3092\u751f\u6210\u3059\u308b\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\uff1aCovox Speech Thing", "FPGA\u30dc\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u305fPWM\u6ce2\u5f62\u306e\u30c6\u30b9\u30c8", "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u8a2d\u8a08\u306e\u91cd\u8981\u6027\uff1aTiny Tapout\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u5b66\u3073"]}