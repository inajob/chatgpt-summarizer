{"pubDate": "2023-10-23T20:00:56", "original_title": "Using LEDs To Determine a Video Camera\u2019s True Framerate", "link": "https://hackaday.com/2023/10/23/using-leds-to-determine-a-video-cameras-true-framerate/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/10/camera_framerate_test_with_leds.jpg", "original_content": "Interpolation and digital cropping are two techniques which are commonly used by marketing folk to embellish the true specifications of a device. Using digital cropping a fictitious zoom level can be listed among the bullet points, and with frame interpolation the number of frames per second (FPS) recorded by the sensor is artificially padded. This latter point is something which [Yuri D\u2019Elia] came across with a recently purchased smartphone that lists a 960 FPS recording rate at 720p. A closer look reveals that this is not quite the case.\nThe smartphone in question is the Motorola Edge 30 Fusion, which is claimed to support 240 and 960 FPS framerates at 720p, yet the 50 MP OmniVision OV50A sensor in the rear camera is reported as only supporting up to 480 FPS at 720p. To conclusively prove that the Motorola phone wasnt somehow unlocking an unreported feature in this sensor, [Yuri] set up an experiment using three LEDs, each of which was configured to blink at either 120, 240 or 480 Hz in a side-by-side configuration.\nAs [Yuri] explains in the blog post, each of these blinking frequencies would result in a specific pattern in the captured video, allowing one to determine whether the actual captured framerate was equal to, less than or higher than the LEDs frequency. Perhaps most disappointingly about the results is that this smartphone didnt even manage to hit the 480 FPS supported by the OV50A sensor, and instead pegged out at a pedestrian 240 FPS. Chalk another one up for the marketing department.", "title": "\u30e2\u30c8\u30ed\u30fc\u30e9\u306e\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306f\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u3092\u904e\u5927\u8868\u793a\u3057\u3066\u3044\u308b", "body": "\u30e2\u30c8\u30ed\u30fc\u30e9\u306e\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306e\u5e83\u544a\u306b\u306f960 FPS\u306e\u64ae\u5f71\u3068\u66f8\u304b\u308c\u3066\u3044\u308b\u304c\u3001\u5b9f\u969b\u306f240 FPS\u3057\u304b\u64ae\u308c\u306a\u3044\u3053\u3068\u304c\u5224\u660e\u3057\u305f\u3002\u5e83\u544a\u306e\u6570\u5b57\u306b\u7d0d\u5f97\u3067\u304d\u306a\u3044[Yuri D'Elia]\u304c\u5b9f\u9a13\u3092\u884c\u3044\u3001\u7d50\u679c\u306f\u5931\u671b\u306e240 FPS\u3060\u3063\u305f\u3002\u30de\u30fc\u30b1\u30c6\u30a3\u30f3\u30b0\u306e\u305f\u3081\u306e\u8a87\u5927\u5e83\u544a\u3068\u8a00\u3048\u308b\u3002", "titles": ["\u30e2\u30c8\u30ed\u30fc\u30e9\u306e\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306f\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u3092\u904e\u5927\u8868\u793a\u3057\u3066\u3044\u308b", "\u30c7\u30d0\u30a4\u30b9\u306e\u4ed5\u69d8\u3092\u98fe\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b\u88dc\u5b8c\u3068\u30c7\u30b8\u30bf\u30eb\u30af\u30ed\u30c3\u30d4\u30f3\u30b0", "\u901a\u5e38\u306e\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u3088\u308a\u3082\u9ad8\u3044\u6570\u5b57\u304c\u793a\u3055\u308c\u3066\u3044\u308b\u304c\u3001\u5b9f\u969b\u306f240 FPS\u306e\u307f", "LED\u3092\u4f7f\u7528\u3057\u305f\u5b9f\u9a13\u3067\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u304c\u6b63\u78ba\u306b\u78ba\u8a8d\u3055\u308c\u308b", "\u30e2\u30c8\u30ed\u30fc\u30e9\u306e\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306f\u30aa\u30e0\u30cb\u30d3\u30b8\u30e7\u30f3\u30bb\u30f3\u30b5\u30fc\u306e\u4ed5\u69d8\u3092\u8d85\u3048\u3089\u308c\u306a\u304b\u3063\u305f"]}