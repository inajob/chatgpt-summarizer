{"pubDate": "2024-01-15T19:30:54", "original_title": "Reverse-Engineering The ESP32\u2019s WiFi Binary Blob With A Faraday Cage", "link": "https://hackaday.com/2024/01/15/reverse-engineering-the-esp32s-wifi-binary-blob-with-a-faraday-cage/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/01/faraday_esp32_testsetup.jpg", "original_content": "The Faraday cage constructed by Jasper Devreker.\nAs part of a team reverse-engineering the binary blob driver for the ESP32s WiFi feature at Ghent University, [Jasper Devreker] saw himself faced with the need to better isolate the network packets coming from the ESP32-under-test. This is a tough call in todays WiFi and 2.4 GHz flooded airwaves. To eliminate all this noise, [Jasper] had to build a Faraday cage, but ideally without racking up a massive invoice and/or relying on second-hand parts scavenged from eBay.\nWe previously reported on this reverse-engineering project, which has since seen an update. Although progress has been made, filtering out just the packets they were interested in was a big challenge. The solution was a Faraday cage, but on a tight budget.\nRather than relying on exotic power filters, [Jasper] put a battery inside a Faraday cage he constructed out of wood and conductive fabric. To get Ethernet data in and out, a fiber link was used inside a copper tube. Initial testing was done using a Raspberry Pi running usbip and a WiFi dongle.\u00a0 The Faraday cage provided enough attenuation that the dongle couldnt pick up any external WiFi signals in listening mode.\nThe total cost of this build came down to a hair over \u20ac291, which makes it feasible for a lot of RF experiments by hobbyists and others. We wish [Jasper] and the rest of the team a lot of luck in figuring out the remaining secrets of Espressifs binary WiFi blob using this new tool."}