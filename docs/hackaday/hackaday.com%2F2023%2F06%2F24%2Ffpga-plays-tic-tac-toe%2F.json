{"pubDate": "2023-06-24T08:00:54", "original_title": "FPGA Plays Tic-Tac-Toe", "link": "https://hackaday.com/2023/06/24/fpga-plays-tic-tac-toe/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/06/fpga-game-main.jpg", "original_content": "As computers get more and more powerful and artificial intelligence algorithms improve, few games remain where the best humans can reliably beat their electronic counterparts. In chess this barrier was passed in 2005 with the last human win against a computer, and recently humans lost to computers at go. Simpler games like tic-tac-toe have been solved for all possible positions for a while now, so even a simple computer will always win or tie the game. But that doesnt mean that theres nothing left to learn about these games as [Hayden] demonstrates with this tic-tac-toe game built entirely on an FPGA.\n[Hayden] is making this as part of a college course on digital design, so it really starts at first principles for working with FPGAs. Its programmed in Verilog on a Basys 3 board, which also hosts the switches used as the games input and handles the VGA video output as well. The build uses state machines to keep track of the moves played on each of the squares, and another state machine to keep track of whether or not the current game has been won. If so, it highlights the winning moves in red, and stops taking further inputs until it is reset. Some more logic ties everything together along with a customized VGA driver to produce the entire gaming experience.\nA game like tic-tac-toe is a great way to master the fundamentals of a system like this before moving on to more complex programs, especially on an FPGA platform that might handle a lot of the things we take for granted on more traditional computing systems, such as the video output. If youre interested in taking more of a deep dive into the world of FPGAs, we published a primer about them a few years ago that will get you started.\n\n", "title": "FPGA\u3092\u4f7f\u7528\u3057\u305f\u30c6\u30a3\u30c3\u30af\u30bf\u30c3\u30af\u30c8\u30fc\u306e\u30b2\u30fc\u30e0\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5", "body": "\u4eba\u5de5\u77e5\u80fd\u304c\u9032\u5316\u3059\u308b\u306b\u3064\u308c\u3066\u3001\u96fb\u5b50\u30b2\u30fc\u30e0\u306f\u4eba\u9593\u306b\u52dd\u3064\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u304d\u3066\u3044\u308b\u304c\u3001Hayden\u306fFPGA\u3092\u4f7f\u3063\u3066\u30c1\u30c3\u30af\u30bf\u30c3\u30af\u30c8\u30fc\u3092\u4f5c\u308a\u3001\u30c7\u30b8\u30bf\u30eb\u30c7\u30b6\u30a4\u30f3\u306e\u57fa\u672c\u3092\u5b66\u3076\u6a5f\u4f1a\u3068\u3057\u3066\u7d39\u4ecb\u3057\u3066\u3044\u308b\u3002Basys 3\u30dc\u30fc\u30c9\u306bVerilog\u3067\u66f8\u304b\u308c\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u8fbc\u307f\u3001\u72b6\u614b\u30de\u30b7\u30f3\u3067\u52d5\u3044\u3066\u3044\u308b\u3002\u30c1\u30c3\u30af\u30bf\u30c3\u30af\u30c8\u30fc\u306f\u30b7\u30f3\u30d7\u30eb\u306a\u30b2\u30fc\u30e0\u3060\u304c\u3001FPGA\u3092\u4f7f\u3063\u3066\u4f5c\u308b\u3053\u3068\u3067\u57fa\u672c\u3092\u5b66\u3076\u306e\u306b\u6700\u9069\u3067\u3042\u308b\u3002", "titles": ["FPGA\u3092\u4f7f\u7528\u3057\u305f\u30c6\u30a3\u30c3\u30af\u30bf\u30c3\u30af\u30c8\u30fc\u306e\u30b2\u30fc\u30e0\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5", "\u4eba\u5de5\u77e5\u80fd\u306b\u6253\u3061\u52dd\u3064\u305f\u3081\u3001FPGA\u3092\u6d3b\u7528\u3057\u3066\u30c6\u30a3\u30c3\u30af\u30bf\u30c3\u30af\u30c8\u30fc\u306e\u30b2\u30fc\u30e0\u3092\u4f5c\u6210\u3059\u308b", "\u65b0\u3057\u3044\u3053\u3068\u3092\u5b66\u3076\u305f\u3081\u306bFPGA\u4e0a\u3067\u30c6\u30a3\u30c3\u30af\u30bf\u30c3\u30af\u30c8\u30fc\u306e\u30b2\u30fc\u30e0\u3092\u4f5c\u6210\u3059\u308b", "Verilog\u3068Basys 3\u30dc\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u305f\u30c6\u30a3\u30c3\u30af\u30bf\u30c3\u30af\u30c8\u30fc\u306e\u30b2\u30fc\u30e0\u306e\u4f5c\u6210\u65b9\u6cd5", "FPGAs\u3092\u3088\u308a\u6df1\u304f\u6398\u308a\u4e0b\u3052\u308b\u305f\u3081\u306e\u30c6\u30a3\u30c3\u30af\u30bf\u30c3\u30af\u30c8\u30fc\u306e\u30b2\u30fc\u30e0\u306e\u4f5c\u6210"]}