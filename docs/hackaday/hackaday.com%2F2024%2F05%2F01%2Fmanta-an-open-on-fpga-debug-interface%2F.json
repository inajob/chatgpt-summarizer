{"pubDate": "2024-05-01T18:30:16", "original_title": "Manta: An Open On-FPGA Debug Interface", "link": "https://hackaday.com/2024/05/01/manta-an-open-on-fpga-debug-interface/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/04/hadimg_manta_feat.png", "original_content": "We always can use more tools for FPGA debugging, and the Manta project by [Fischer Moseley] delivers without a shadow of a doubt. Manta lets you add a debug and data transfer channel between your computer and your FPGA, that you can easily access with helpfully included Python libraries.\nWith just a short configuration file as input, it gives you cores you add into your FPGA design, tapping the signals of interest as an FPGA-embedded logic analyzer, interacting with registers, and even letting you quickly transfer tons of data if you so desire.\nManta is easy to install, is developer-friendly, has been designed in Amaranth, and is fully open source as you would expect. At the moment, Manta supports both UART and Ethernet interfaces for data transfer. As for embedding the Manta cores into your project, they can be exported to both Amaranth and Verilog. You should check out the documentation website  it contains everything you might want to know to get started quick.\nThe Manta project has started out as our hackers MIT thesis, and were happy that we can cover it for you all. FPGA-embedded logic analyzers are a fascinating and much-needed tool, and weve had our own [Al Williams] tell you about his on-FPGA logic analysis journey!", "title": "Manta\u30d7\u30ed\u30b8\u30a7\u30af\u30c8: FPGA\u30c7\u30d0\u30c3\u30b0\u3092\u652f\u63f4", "body": "FPGA\u30c7\u30d0\u30c3\u30b0\u306b\u5f79\u7acb\u3064Manta\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306fPython\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u3001FPGA\u3068\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u9593\u306e\u30c7\u30d0\u30c3\u30b0\u3084\u30c7\u30fc\u30bf\u9001\u4fe1\u30c1\u30e3\u30cd\u30eb\u3092\u63d0\u4f9b\u3059\u308b\u3002Manta\u306f\u7c21\u5358\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u53ef\u80fd\u3067\u3001UART\u3084Ethernet\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3002Amara\u306b\u8a2d\u8a08\u3055\u308c\u305f\u3053\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3001\u8ad6\u6587\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304b\u3089\u59cb\u307e\u308a\u3001\u7c21\u5358\u306a\u30b3\u30a2\u633f\u5165\u3068\u9ad8\u901f\u30c7\u30fc\u30bf\u8ee2\u9001\u3092\u53ef\u80fd\u306b\u3059\u308b\u3002", "titles": ["Manta\u30d7\u30ed\u30b8\u30a7\u30af\u30c8: FPGA\u30c7\u30d0\u30c3\u30b0\u3092\u652f\u63f4", "FPGA\u8a2d\u8a08\u306b\u5f79\u7acb\u3064Manta\u30b3\u30a2", "FPGA-embedded\u30ed\u30b8\u30c3\u30af\u30a2\u30ca\u30e9\u30a4\u30b6\u30fc", "Manta: UART\u3068Ethernet\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u30b5\u30dd\u30fc\u30c8", "Manta\u30d7\u30ed\u30b8\u30a7\u30af\u30c8: \u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3092\u30c1\u30a7\u30c3\u30af"]}