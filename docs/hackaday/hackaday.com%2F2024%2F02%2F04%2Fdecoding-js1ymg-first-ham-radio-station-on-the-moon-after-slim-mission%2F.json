{"pubDate": "2024-02-05T06:00:00", "original_title": "Decoding JS1YMG: First Ham Radio Station On The Moon After SLIM Mission", "link": "https://hackaday.com/2024/02/04/decoding-js1ymg-first-ham-radio-station-on-the-moon-after-slim-mission/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/02/20240125-4_01_LEV-2-JAXA-cr.jpg", "original_content": "When Japans SLIM lunar lander made a rather unconventional touch-down on the lunar surface, it had already disgorged two small lunar excursion vehicles from its innards: LEV-1 and LEV-2. Of these, the LEV-1 is not only capable of direct to Earth transmission, but it also has been assigned its own amateur radio license: JS1YMG, which makes it the first Ham radio station on the Moon. LEV-1 receives data from LEV-2, which is transmitted to Earth using its 1 Watt UHF circular polarization antenna as Morse code at 437.410 MHz. Although the data format hasnt been published, [Daniel Est\u00e9vez] (EA4GPZ) has been sleuthing around to figure it out.\nUsing captures from the 25 meter radiotelescope at Dwingeloo in the Netherlands, [Daniel] set to work deciphering what he knew to be telemetry data following a CCSDS standard. After some mix-and-matching he found that the encoding matched PCM/PSK/PM with a symbol rate of 64 baud and 2048 kHz subcarrier. The residual carrier is modulated in amplitude with Morse code, but initially this Morse code made no sense.\n\nWaterfall of the LEV-1 signal (Credit: Daniel Est\u00e9vez)\nFortunately a few fellow Hams pitched in and figured out that the amplitude signs for the Morse code were inverted. By inverting the amplitude, suddenly the Morse code looked a lot more clear, with the LEV-1s call sign and what looked like hexadecimal data following it. Each of the frames is also followed by a CRC-16, which should make it possible to start decoding the data transmitted in each frame.", "title": "\u6708\u9762\u3067\u306e\u521d\u306e\u30a2\u30de\u30c1\u30e5\u30a2\u7121\u7dda\u5c40\uff01\u65e5\u672c\u306eSLIM\u6708\u7740\u9678\u6a5f\u304c\u30cf\u30e0\u30e9\u30b8\u30aa\u30b9\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u904b\u55b6", "body": "\u65e5\u672c\u306eSLIM\u6708\u7740\u9678\u6a5f\u306f\u3001\u6708\u306e\u8868\u9762\u306b\u73cd\u3057\u3044\u7740\u9678\u3092\u3057\u3001LEV-1\u3068LEV-2\u3068\u3044\u30462\u3064\u306e\u5c0f\u578b\u306e\u6708\u65c5\u884c\u8eca\u3092\u5c55\u958b\u3057\u307e\u3057\u305f\u3002LEV-1\u306f\u5730\u7403\u3078\u306e\u76f4\u63a5\u901a\u4fe1\u304c\u53ef\u80fd\u3067\u3042\u308a\u3001\u30a2\u30de\u30c1\u30e5\u30a2\u7121\u7dda\u514d\u8a31(JS1YMG)\u3082\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\u3002LEV-1\u306fLEV-2\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d7\u4fe1\u3057\u3001437.410 MHz\u306e1\u30ef\u30c3\u30c8UHF\u5186\u504f\u6ce2\u30a2\u30f3\u30c6\u30ca\u3092\u4f7f\u3063\u3066\u30e2\u30fc\u30eb\u30b9\u4fe1\u53f7\u3067\u5730\u7403\u306b\u9001\u4fe1\u3055\u308c\u307e\u3059\u3002\u30c7\u30fc\u30bf\u5f62\u5f0f\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u304c\u3001[Daniel Est\u00e9vez]\u6c0f(EA4GPZ)\u304c\u89e3\u6790\u306b\u53d6\u308a\u7d44\u3093\u3067\u3044\u307e\u3059\u3002", "titles": ["\u6708\u9762\u3067\u306e\u521d\u306e\u30a2\u30de\u30c1\u30e5\u30a2\u7121\u7dda\u5c40\uff01\u65e5\u672c\u306eSLIM\u6708\u7740\u9678\u6a5f\u304c\u30cf\u30e0\u30e9\u30b8\u30aa\u30b9\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u904b\u55b6", "25\u30e1\u30fc\u30c8\u30eb\u306e\u96fb\u6ce2\u671b\u9060\u93e1\u3092\u4f7f\u3044\u3001\u6708\u306e\u30c7\u30fc\u30bf\u3092\u89e3\u8aad\u3059\u308b", "LEV-1\u304b\u3089\u306eMorse\u7b26\u53f7\u3067\u9001\u4fe1\u3055\u308c\u308b\u30c7\u30fc\u30bf\u306e\u89e3\u8aad\u65b9\u6cd5", "LEV-2\u304b\u3089\u53d7\u4fe1\u3057\u3001Earth\u3078\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3059\u308bLEV-1\u306e\u30a2\u30f3\u30c6\u30ca", "LEV-1\u306e\u9001\u4fe1\u30c7\u30fc\u30bf\u306b\u306f\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306bCRC-16\u304c\u4ed8\u3044\u3066\u3044\u308b"]}