{"pubDate": "2025-05-13T02:00:04", "original_title": "A Single-Pixel Camera Without Moving Parts Using Compressed Sensing", "link": "https://hackaday.com/2025/05/12/a-single-pixel-camera-without-moving-parts-using-compressed-sensing/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/05/okooptics_single-pixel_camera_compressed_sensing.jpg", "youtube": "https://www.youtube.com/watch?v=EE9AETSoPHw", "original_content": "One of the reconstructed images, using all 4,096 matrix patterns as input, next to the original object. (Credit: okooptics, Jon Bumstead)\nTheres a strange allure to single-pixel cameras due to the simultaneous simplicity and yet fascinating features that they can offer, such as no set resolution limit. That said, the typical implementations that use some kind of scanning (MEMS) mirror or similar approach suffer from various issues even when youre photographing a perfectly stationary and static scene due to their complex mechanical nature. Yet theres a way around this, involving a LED matrix and a single photoresistor, as covered by [Jon Bumstead] in an article with accompanying video.\nAs he points out, this isnt a new concept, with research papers cited that go back many years. At the core lies the signal processing technique called compressed sensing, which is incidentally also used with computed tomography (CT) and magnetic resonance imaging (MRI) scanners. Compressed sensing enables the reconstruction of a signal from a series of samples, by using existing knowledge of the signal.\nIn the case of this single-pixel camera, the known information is the illumination, which is a Hadamard matrix pattern displayed on the 64 x 64 pixel LED matrix, ergo 4,096 possible patterns. A total of 4,096 samples are thus recorded, which are subsequently processed with a Matlab script. As pointed out, even 50% of the maximum possible matrices can suffice here, with appropriately chosen patterns.\nWhile not an incredibly fast method, it is fully solid-state, can be adapted to use other wavelengths, and with some tweaking of the used components probably could cut down the sampling time required.\n\n", "title": "- \u30b7\u30f3\u30b0\u30eb\u30d4\u30af\u30bb\u30eb\u30ab\u30e1\u30e9\u306e\u9b45\u529b\u3068\u305d\u306e\u4ed5\u7d44\u307f", "body": "\u5358\u4e00\u753b\u7d20\u30ab\u30e1\u30e9\u306f\u3001LED\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u3068\u30d5\u30a9\u30c8\u30ec\u30b8\u30b9\u30bf\u3092\u7528\u3044\u3066\u3001\u5149\u306e\u30d1\u30bf\u30fc\u30f3\u304b\u3089\u753b\u50cf\u3092\u518d\u69cb\u7bc9\u3059\u308b\u6280\u8853\u3067\u3059\u3002", "titles": ["- \u30b7\u30f3\u30b0\u30eb\u30d4\u30af\u30bb\u30eb\u30ab\u30e1\u30e9\u306e\u9b45\u529b\u3068\u305d\u306e\u4ed5\u7d44\u307f", "- LED\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u3092\u4f7f\u7528\u3057\u305f\u65b0\u3057\u3044\u753b\u50cf\u518d\u69cb\u6210\u6280\u8853", "- \u30b3\u30f3\u30d7\u30ec\u30b9\u30c8\u30bb\u30f3\u30b7\u30f3\u30b0\u306b\u3088\u308b\u4fe1\u53f7\u51e6\u7406\u306e\u5fdc\u7528", "- 64x64\u30d4\u30af\u30bb\u30eb\u3067\u5b9f\u73fe\u3059\u308b4,096\u30d1\u30bf\u30fc\u30f3\u306e\u53ef\u80fd\u6027", "- \u96fb\u5b50\u5de5\u4f5c\u3067\u4f5c\u308b\u30b7\u30f3\u30d7\u30eb\u306a\u30ab\u30e1\u30e9\u30b7\u30b9\u30c6\u30e0\u306e\u63d0\u6848"]}