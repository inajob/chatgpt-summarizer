{"pubDate": "2025-07-02T15:30:54", "original_title": "Making a Smarter Laptop Cooler", "link": "https://hackaday.com/2025/07/02/making-a-smarter-laptop-cooler/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/06/laptop_cooler_automation.png", "original_content": "\n[Bogdan Micea] uses a laptop cooler, but was a bit annoyed that his cooler would run at the same power no matter how hard the laptop was working. Rather than keep adjusting the cooler\u2019s power manually, he automated it by installing an Arduino Pro Micro as a controller in the cooler and writing a Rust controller application for his computer. [Bogdan]\u2019s cooler is controlled by four buttons, which can have different functions depending on how long they\u2019re pressed. After mapping out their functionality and minor quirks, [Bogdan] soldered four transistors in parallel with the buttons to let the Arduino simulate button presses; another four Arduino pins accept input from the buttons to monitor their state. The Arduino USB port connects to the cooler\u2019s original USB power input, so the cooler looks superficially unchanged. When the cooler starts up, the Arduino sets it to a known state, then monitors the buttons. Since it can both monitor and control the buttons, it can notify the computer when the coolers state changes, or change the state when the computer sends a command.On the computer\u2019s part, the control software creates a system tray that displays and allows the user to change the cooler\u2019s current activity. The control program can detect the CPU\u2019s temperature and adjust the cooler\u2019s power automatically, and the Arduino can detect the laptop\u2019s suspend state and control power accordingly. Somewhat surprisingly, this seems to be the first laptop cooler we\u2019ve seen modified. We have seen a laptop cooler used to overclock a Teensy, though, and a laptop\u2019s stock fans modified."}