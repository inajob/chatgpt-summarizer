{"pubDate": "2023-10-14T05:00:42", "original_title": "Because You Can: Linux On An Arduino Uno", "link": "https://hackaday.com/2023/10/13/because-you-can-linux-on-an-arduino-uno/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/10/arduino-linux-featured-1.jpg", "original_content": "There are a few Will it run tropes when it comes to microcontrollers, one for example is Will it run Doom?, while another is Will it run Linux?. In one of the lowest spec examples of the last one, [gvl610] has got an up-to-date Linux kernel to boot on a vanilla Arduino Uno. And your eyes didnt deceive you, thats a full-fat kernel rather than the cut-down \u03bcClinux for microcontrollers.\nThose of you whove been around a while will probably have guessed how this was done, as the ATmega328 in the Uno has no MMU and is in to way powerful enough for the job. Its running an emulator, in this case just enough RISC-V to be capable, and as youd imagine its extremely slow. Youll be waiting many hours for a shell with this machine.\nThe code is written in pure AVR C, and full instructions for compilation are provided. Storage comes from an SD card, as the ATmegas meagre 32k is nowhere near enough. If youre having a bit of deja vu here we wouldnt blame you, but this one is reputed to be worse than the famous 2012 Worst PC Ever, which emulated ARM instead of RISC-V.\nThanks [Electronics Boy] for the tip!"}