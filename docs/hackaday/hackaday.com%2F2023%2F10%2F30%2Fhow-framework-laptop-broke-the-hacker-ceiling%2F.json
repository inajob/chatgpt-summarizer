{"pubDate": "2023-10-30T14:00:30", "original_title": "How Framework Laptop Broke The Hacker Ceiling", "link": "https://hackaday.com/2023/10/30/how-framework-laptop-broke-the-hacker-ceiling/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/10/Framework.jpg", "original_content": "Weve been keeping an eye on the Framework laptop over the past two years  back in 2021, theyve announced a vision for a repairable and hacker-friendly laptop based on the x86 architecture. Theyre not claiming to be either open-source or libre hardware, but despite that, they have very much delivered on repairability and fostered a hacker community around the laptop, while sticking to pretty ambitious standards for building upgradable hardware that lasts.\n\nIve long had a passion for laptop hardware, and when Hackaday covered Framework announcing the motherboards-for-makers program, I submitted my application, then dove into the ecosystem and started poking at the hardware internals every now and then. A year has passed since then, and Ive been using a Framework as a daily driver, reading the forums on the regular, hanging out in the Discord server, and even developed a few Framework accessories along the way. Id like to talk about what Ive seen unfold in this ecosystem, both from Framework and the hackers that joined their effort, because I feel like we have something to learn from it.\nIf you have a hacker mindset, you might be wondering  just how much is there to hack on? And, if you have a business mindset, you might be wondering  how much can a consumer-oriented tech company achieve by creating a hacker-friendly environment? Today, Id like to give you some insights and show cool things Ive seen happen as an involved observer, as well as highlight the path that Framework is embarking upon with its new Framework 16.\nAs Community Expands, So Do The Options\n\nOne of the selling points of a Framework laptop is that none of its external ports are set in stone  instead, it has USB-C-based slots for cards that can have various ports on them. This doesnt give you more ports than the usual, maybe even less depending on which cards you get, but it does give you more flexibility in what ports you give yourself.\nMaybe you prefer three external displays and a Thunderbolt dock, maybe you want three USB-A ports, or maybe you want to go full USB-C  whatever combination youd like to use day to day, you can likely combine a few cards and get there. The Expansion Card standard also opens the door for third-party cards  cards that someone else has designed, either a hacker or Framework themselves in the future, or maybe even cards that you might want to design for your own use. In particular, Framework has published KiCad PCB files and 3D case drawings, keeps a separate forum area for expansion card development, and even gives more targeted support to individual hackers prototyping their own Expansion Cards.\nOver the two years, weve seen a ton of expansion card ideas, mockups, designs and actual hardware. Id estimate that out of all the expansion card ideas, 50% of them have stayed in the idea realm, 40% have been designed but never built, and 10% have been built and become available to users. The 10% include cards like UART, CAN and RS485 expansion cards, a Solo 2 security token adapter, an ESP32-S3 devboard, an optoisolated USB port card, an EC debugging adapter for your low-level laptop hacking needs, a USB3-connected logic analyzer, and other ones. By making expansion cards into a playground for hackers, Framework has let quite a few beginners go through their own making a PCB idea into reality journeys, something thats so often a stepping stone to a myriad of wonderful projects down the line.\nThere are also less involved but nevertheless useful projects, like multiple Logitech mouse dongle hider cards using off-the-shelf adapters, a SNACK project thats a 3D-printed empty expansion card you can store things in, or a conveniently-sized full-size SD card reader turned expansion card with just a little bit of PCB cutting!\nThere are a few upcoming cards, too  the dual-port USB-C card project is impressive, giving you two extra USB3-capable USB-C ports! Three different people and companies are working on an LTE card, and I might just make it four, purely because I have an outrageous idea that would be fun to make real. Framework also hasnt been slacking  weve got an Ethernet expansion card, a 3.5mm audio adapter card that fits the upcoming Framework 16 but works everywhere, and weve also got firmware updates and rework instructions to enable power saving on the DisplayPort and HDMI cards theyve already shipped.\nIn that way, USB-C and the Framework laptop are a match made in heaven, and the mechanical standard is reasonably well thought-out. If I were to be designing a laptop or other portable device today, Id absolutely add a Framework-compatible Expansion Card socket!\nInnovation in consumer laptop space seems to be mostly stagnant and improvements superficial, so having a ripe for the taking standard like this on the table is exciting, as even the currently relatively small number of third-party expansion cards makes it super worthwhile as a selling point. Given that MNT Reform has gone all-in on the USB-C in its Pocket edition, it could very well turn out to be a community mod  not that you cant already plug an Expansion Card into a random USB-C socket, as the cards are fundamentally USB-C compatible!\nFramework has also recently announced a video series where theyre going to take a full-sized SD Expansion Card from idea to manufacturing, and I have a suspicion that it wont be limited to PCB design tutorials. Seeing a company get an actual product through their pipeline, explaining the reasoning behind it, is not the kind of lesson you get every day, and you cant expect any other laptop company to give you such insights, as it stands.\nReduce, Reuse, Rejoice\nWhen it comes to repairability, upgradability and hacker-friendliness, theres an elephant in the room  individual part reuse, from the motherboards and screens, to keyboards and cases. Since the beginning, Framework has promised that you would be able to upgrade your motherboard when they release a new one, and indeed, theres now 12th generation Intel CPU motherboards available, with 13th gen Intel and even AMD motherboards on the horizon. This is amazing, but what do you do with the old motherboard you now have laying on your desk, which is effectively a full computer in need of a home?\nFramework has addressed this from multiple angles  the most fun one was the motherboards for makers program, a seed effort where theyve sent out motherboards to people who described what kind of project theyd like to do. The reality of such an effort is lower-than-100% ROI  plenty of people will put the board on a shelf, and I have to admit that Ive effectively done the same with the board I got, never using it for the purpose I stated I would. However, weve seen a good few prominent projects grace our pages, and my view is that the main achievement of this program has been putting the idea of you can build things with this mainboard rather than 100% return on the hardware investment. Something is better than nothing?\n\nIve noticed that Framework hooks into Ive built it myself aspect of maker culture. Even if youre just printing out a new case for a motherboard, its a project that youre directing, and having a finished project under your belt feels good. With Framework, whenever you decide to upgrade your motherboard, you get a whole computer in return, thats also a project part, and a seed for a project that you might just bring to reality.\nOn Hackaday alone, weve covered a cyberdeck, a cool-looking handheld, a tablet, a futuristic-looking terminal, a rebuild of venerable Thinkpad 701C, a mechanical keyboard, and all sorts of other devices like this all-in-one. On the Framework Discord server, Ive just watched someone work on a build where a Framework board is packed together with a PC PSU and a Thunderbolt-connected external GPU for a reasonably powerful yet compact gaming machine. Upgrading such a laptop isnt just a regular kind of upgrade you can do in the future, its a moment you can eagerly await with a special project idea in mind.\nThe Thinkpad 701C rebuild project is still ongoing, and involves an impressive amount of custom PCBs\nPart reuse has been the area that Ive focused on  I love such mostly-unexplored niches, and Ive been building laptop hardware reuse projects long before that. This is where Framework has given free reign to the community, publishing partial schematics focused on external connectors of the board, and following up whenever people had further inquiries. Theyve released DXFs of the motherboard and associated boards, pinout, connector and part sourcing information for third-party boards, notes on the wiring intricacies, even EC sourcecode and a decent amount of sourcecode or libraries for various parts of the ecosystem, and they are quite helpful to all projects seeking to go beyond expansion cards and motherboard reuse. The Framework board has essentially become a kind of high-power x86 CPU module you can use for your project, with all sorts of interfaces you can pull out of USB-C and lower-level onboard ports, and a ready-to-go battery power solution if you need that.\nBecause of trade secret concerns and subsequent NDAs with the companies Framework has to work with in the x86 platform space, we may never see full Framework laptop schematics  what we hackers have is a 12-page PDF with the high-level board overview and Framework-specific connector schematics. This partial openness is understandable, and, its way better than building projects using smuggled schematics that only become available years after the devices release.\nThere were a few nuances stemming from the proprietary aspects, that I and others had to reverse-engineer  for instance, Compal screwing up the pinout on the input cover connector symbol using a completely pin numbering different notation than the connectors datasheet. However, simply probing the board with a multimeter has led to success, and in the end, Ive successfully developed a RP2040-based controller for the keyboard+touchpad combo of the Framework  which has been a good playground for me to learn QMK, and also a platform for my experiments with HID over I2C, a wonderful technology that I hope I can introduce to you all sometime soon!\nOne thing we didnt see materialize was third-party motherboards  despite us getting info like DXF outlines. However, a few people did start hacking on it, and as someone who talks with other hackers in the Framework community, I know that we might just get a surprise project down the road!\nThat said, as much as itd be fun to have such a board, theres not much demand  all in all, people have been pretty satisfied with the 12th and 13th generation Intel motherboard upgrades. Also, AMD motherboards already getting into the hands of people who have preordered them, and given that, we might just see an influx of projects based on Framework motherboards in the Hackaday Tips line! It wont be the only influx we see, either.\nBigger, Faster, More Expandable\nAbout a year ago, Framework has announced the Framework 16  a 16 gaming/workstation laptop, larger, all-AMD, and with a discrete GPU. Its no doubt a response to people who wanted something more beefy than the 13 model, and it also has two standout features that push the Frameworks expandability standard even further  the Input Module ecosystem, and the Expansion Bay, giving you input device modularity and GPU replacements respectively.\nAn RGB LED-packed community-designed Input Module by [Joe Schroedl]The Expansion Bay has a PCIe x8 link you can bifurcate into two x4 links, a beefy power bus capable of bidirectional power transfer, and a few extra useful connections like a direct-to-panel eDP input, I2C, and a few GPIOs. From the business standpoint, its also a fun way to reduce SKUs they have to offer, and from a hackability standpoint, its a port for the ultimate kind of upgrades given its sheer PCIe capabilities. The connector, once again, makes use of reasonably accessible FX-Beam interconnect lineup, and Framework has released reference design information  which led to a community-sourced KiCad template, and a few in-progress projects have popped up that are adding things like OcuLink, extra expansion card sockets, or even an MXM GPU and a Dell docking station port.\nThe Input Modules, on the other hand, take the 13 laptops single-piece keyboard+touchpad combination, and split it into modules socketed onto a common base, with the individual modules connected over USB or I2C. For a user, this means you can easily add a numpad to your Framework, remove it if youre numpad-averse, or stack eight numpads in case you suffer from numpad deprival-induced trauma. It also means you can create your own modules that go in the place of the keyboard or the touchpad  from macropads to smartcard readers, and even extra screens! Framework has, once again, provided reference designs, and community members are already manufacturing their own cards, like this RGB LED matrix card thats already been manufactured and is now in its second revision!\nRaising The Bar\nNow, this is a lot to say about a two-year-old product, but I guess my background helps. Ive spent a decade using devices like laptops and phones and then a decade more fixing and improving them, and during that time, Ive watched them turn more and more into black boxes with knobs to tune the endless stream of entertainment. The difference is especially stark when I compare it to the 8-bit computing years Ive been taught about, years that raised the generation whose knowledge and advice helped me find my place in the world of hacking and electronics. Weve had a treasure trove of technological improvements since then, sure, but weve lost some core principles that made computers more human-friendly, and accumulated a fair bit of cruft that made the personal computer world feel dull and grey  no matter how bright the everpresent RGB lights shine.\nLooking at what Framework has achieved so far, I feel reassured. A lot of the most annoying cruft has been shed here, and you can see people having fun with the concept, driven because they get to improve upon a thing they will be using on the daily, or build something new that helps them live a fulfilling life in this tech-focused world.\nJust throughout the few last days, Ive been watching someone on the Framework Discord server build a powerful router out of a Framework motherboard, with PCIe Ethernet cards in both of the M.2 sockets, and a colorful 3D-printed case that makes the project look solid while shielding it from dust. Given the trove of existing mechanical designs you can start with, its been an easy project for them to build, and its been fun to observe for me too. It warms my heart to see people build their own tech so easily, because ultimately, it isnt something you can buy  not just the specific device you build, but the fun you have on the way, and the power that it gives you.\nThe hacker-driven projects I list, arent there just for the technical value  each one of them holds a fair bit of joy from the person who worked on it. And thats, without doubt, because Frameworks focus on the hackability has\u00a0 helped people channel the fundamental desire to play with the technology we use, each hacker imbuing their creation or mod with a piece of their soul. Thats a stark contrast to the soulless machines designed to be used in a certain way for a few years and then discarded  each Framework laptop is a gateway to a Framework laptop-based project, and each Framework project brings yet another hacker into our community.\nA cyberdeck build that weve just covered a week ago\nI dont know if these relatively high standards can nudge other companies to take lead, though we can all hope. I do know how powerful can examples of actual success be when it comes to making the world turn, and it matters that we can highlight a company thats making large steps in the hacker-friendly direction while maintaining undeniable mass appeal. Sure, you can form an underground movement with repurposed and low-volume tech, but producing hackable things at scale is how you shape a generation, and we could always use a bit more of that.\nFramework is, in many ways, an ecosystem ripe to be conquered by the hacking spirit, from upgrades to repairs made simple. I personally cant wait to see where it goes, and whether its high standards can nudge other companies into a better direction as the repairability, hackability and openness promises come true one by one. The Framework experiment has, without a doubt, paid off, and sets a high standard for hacker community involvement and outreach  one that we havent been seeing companies do on such a scale, and can only hope to see more in the future."}