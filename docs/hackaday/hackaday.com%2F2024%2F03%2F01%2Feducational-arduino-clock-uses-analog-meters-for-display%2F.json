{"pubDate": "2024-03-01T21:00:57", "original_title": "Educational Arduino Clock Uses Analog Meters For Display", "link": "https://hackaday.com/2024/03/01/educational-arduino-clock-uses-analog-meters-for-display/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/02/1843191708287353275-e1709031625970.jpeg", "original_content": "When it comes to educational electronic projects, its hard to go past building a clock. You learn tons about everything from circuit concepts and assembly skills to insights about the very nature of time itself. And you get a clock at the end of it! [hamblin.joe] wanted to do a simple project for kids along these lines, so whipped up a neat design using analog meters to display the time.\nThe build relies on that old stalwart, the Arduino Uno, to run the show. Its hooked up to a DS3231 real-time clock module so it can keep accurate time for long periods, as is befitting a clock. Displaying the time is done via the use of two analog meters, each fitted with a custom backing card. One displays hours, the other, minutes. The analog meters are simply driven by the PWM outputs of the Arduino.\nIts not a hugely complex project, but it teaches so much. It provides an opportunity to educate the builders about real-time clocks, microcontroller programming, and even the concepts behind pulse width modulation. To say nothing of the physical skills, like learning to solder or how to assemble the laser-cut enclosure. Ultimately, it looks like a really great way for [hamblin.joe] and his students to dive into the world of modern electronics.", "title": "\u5b50\u3069\u3082\u5411\u3051\u30a2\u30ca\u30ed\u30b0\u30e1\u30fc\u30bf\u30fc\u3092\u4f7f\u3063\u305f\u6642\u8a08\u306e\u4f5c\u308a\u65b9", "body": "\u96fb\u5b50\u5de5\u4f5c\u306b\u95a2\u3057\u3066\u3001\u6642\u8a08\u3092\u4f5c\u308b\u3053\u3068\u306f\u5b66\u3073\u304c\u591a\u3044\u3002\u30a2\u30ca\u30ed\u30b0\u30e1\u30fc\u30bf\u30fc\u3092\u4f7f\u7528\u3057\u305f\u30c7\u30b6\u30a4\u30f3\u3001Arduino Uno\u3068DS3231 RTC\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u4f5c\u6210\u3002\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30af\u30ed\u30c3\u30af\u3068PWM\u3067\u6642\u9593\u8868\u793a\u3002\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30af\u30ed\u30c3\u30af\u3084\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u5b66\u3079\u308b\u30b7\u30f3\u30d7\u30eb\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3002", "titles": ["\u5b50\u3069\u3082\u5411\u3051\u30a2\u30ca\u30ed\u30b0\u30e1\u30fc\u30bf\u30fc\u3092\u4f7f\u3063\u305f\u6642\u8a08\u306e\u4f5c\u308a\u65b9", "Arduino Uno\u3092\u7528\u3044\u305f\u30b7\u30f3\u30d7\u30eb\u306a\u96fb\u5b50\u6642\u8a08\u306e\u88fd\u4f5c", "\u5404\u6642\u9593\u3084\u5206\u3092\u8868\u793a\u3059\u308b\u30a2\u30ca\u30ed\u30b0\u30e1\u30fc\u30bf\u30fc", "\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30af\u30ed\u30c3\u30af\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u306e\u9023\u643a", "\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3084PWM\u306e\u6982\u5ff5\u3092\u5b66\u3076"]}