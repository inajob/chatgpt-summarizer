{"pubDate": "2025-08-20T02:00:16", "original_title": "Lisp in 99 Lines of C With TinyLisp", "link": "https://hackaday.com/2025/08/19/lisp-in-99-lines-of-c-with-tinylisp/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/08/tinylisp_lisp850_sharp_pc-g850vs.jpg", "original_content": "As one of the oldest programming languages still in common use today, and essential for the first wave of Artificial Intelligence research during the 1950s and 60s, Lisp is often the focus of interpreters that can run on very low-powered systems. Such is the case with [Robert van Engelen]s TinyLisp, which only takes 99 lines of C code and happily runs on the Z80-based Sharp PC-G850V(S) pocket computer with its 2.3 kB of internal RAM and native C support.\nThe full details on how TinyLisp was implemented and how to write it yourself can be found in the detailed article thats part of the GitHub project. It supports static scoping, double-precision floating point and features 21 Lisp primitives along with a garbage collector. Two versions for the Sharp PC-G850 (using BCD (i.e. NaN) boxing) are provided, along with a number of generic implementations, using either double or single precision floating point types. A heavily commented version is probably the version to keep alongside the article while reading.\nTinyLisp is  as the name implies  very tiny, and thus more full-featured Lisp implementations are widely available. This includes two versions  linked at the bottom of the Readme  also by [Robert] that use a gargantuan 1,000 lines of C, providing a more advanced garbage collector and dozens more Lisp primitives to handle things like exceptions, file loading, strings and debug features.", "title": "99\u884c\u306eC\u30b3\u30fc\u30c9\u3067\u52d5\u304fTinyLisp\u3068\u306f\uff1f", "body": "Lisp\u8a00\u8a9e\u3092\u57fa\u306b\u3057\u305fTinyLisp\u306f\u300199\u884c\u306eC\u30b3\u30fc\u30c9\u3067Z80\u6a5f\u3067\u52d5\u4f5c\u3057\u3001\u8efd\u91cf\u3067\u57fa\u672c\u6a5f\u80fd\u3092\u6709\u3057\u3066\u3044\u307e\u3059\u3002", "titles": ["99\u884c\u306eC\u30b3\u30fc\u30c9\u3067\u52d5\u304fTinyLisp\u3068\u306f\uff1f", "\u30ec\u30c8\u30edPC\u3067\u697d\u3057\u3080\uff01TinyLisp\u306e\u5b9f\u88c5\u65b9\u6cd5", "Z80\u30de\u30a4\u30b3\u30f3\u5411\u3051\u306e\u30b3\u30f3\u30d1\u30af\u30c8Lisp\u8a00\u8a9e", "TinyLisp\u306e\u7279\u5fb4\u3068\u4f7f\u3044\u65b9\u3092\u5fb9\u5e95\u89e3\u8aac", "\u5c0f\u3055\u304f\u3066\u3082\u5f37\u529b\uff01TinyLisp\u3067\u5b66\u3076\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u57fa\u790e"]}