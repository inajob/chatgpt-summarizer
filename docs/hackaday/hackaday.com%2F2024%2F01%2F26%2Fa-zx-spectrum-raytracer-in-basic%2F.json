{"pubDate": "2024-01-27T06:00:08", "original_title": "A ZX Spectrum Raytracer,  in BASIC", "link": "https://hackaday.com/2024/01/26/a-zx-spectrum-raytracer-in-basic/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/01/Screenshot-from-2024-01-25-20-58-55-featured.png", "original_content": "[Gabriel Gambetta] knows a few things about ray tracers, being the author of Tiny Raytracer, a raytracer written in just 912 bytes of JavaScript. As a long-time fellow sufferer of the UK-designed ZX Spectrum, could these two love affairs be merged? Could the Tiny Raytracer fit on the ZX Spectrum? In BASIC? The answer is an affirmative, albeit with our beloved speccys many limitations.\nRay tracing with only 15 primary colours\nThe story starts with [Gabriel]s Computer Graphics From Scratch (CGFS) raytracer algorithms\u00a0and an existing code base that was ported to the ZX Spectrums very limited BASIC dialect, using VSCode for editing, BAS2TAP to generate a tape image file (essentially an audio track) and executed with FUSE. With the toolchain sorted, [Gabriel] adds just enough code to deal with the ray intersection equations of a sphere, and renders a three-sphere scene to a 3222 pixel colour image, taking a mere 15 minutes of runtime. Fellow sufferers will remember the spectrum had a 3222 block attribute array (or colour array) with two colour values for foreground and background pixels. Each attribute block contains 88 pixels, each of which could be foreground (on) or background (off.) The next stage was then to expand the code to handle pixels as well as blocks, by simply expanding the raytracing to the full 256176 resolution, and for each block simply determine the two most common colours, and run with those for the whole block. It sort of works, in a very spectrum-esq attribute clash kind of fashion.\n\nBut now the runtime is 17 hours! Next, a spot of performance tweaking, using quite a few spectrum BASIC hacks, and some graphical approximations such as casting rays for each corner pixel of the block, and if theyre identical, colouring all the remaining 60 pixels the same and moving on. This effort reduced runtime to two hours.\nNext [Gabriel] bravely ditches the flat lighting model, models a single light source and pulls out the only remaining trick in the monochrome spectrum world, that of dithering intensity values for each block, using a simple 88 ordered dither pattern, that doesnt look too bad, all things considered. A quick stop on the way to completion, to add shadows and the run time is back to 17 hours, but its worth it. Clearly, this is optimised for a single scene type, one where spheres feature predominantly, but the principles are there, and cubes are just a few more lines of code away. Any takers?\nRaytracing is one of those fun, but complex tasks that people just love to wedge into inappropriate hardware, like this TI-84Plus CE graphing calculator, and if thats a bit hard to access, heres something equally mad running in plain old Excel.", "title": "ZX Spectrum\u3067Tiny Raytracer\u3092\u5b9f\u884c\u3059\u308b\u65b9\u6cd5", "body": "Tiny Raytracer\u3092\u4f5c\u3063\u305fGabriel Gambetta\u306f\u3001ZX Spectrum\u3067\u52d5\u304f\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3057\u300115\u5206\u30673222\u30d4\u30af\u30bb\u30eb\u306e\u30ab\u30e9\u30fc\u753b\u50cf\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u6210\u529f\u3057\u307e\u3057\u305f\u3002\u30e9\u30f3\u30bf\u30a4\u30e0\u306f2\u6642\u9593\u3067\u3057\u305f\u304c\u3001\u6700\u9069\u5316\u306e\u305f\u3081\u306b\u3044\u304f\u3064\u304b\u306e\u5de5\u592b\u3092\u3057\u307e\u3057\u305f\u3002\u305f\u3060\u3057\u3001\u30e9\u30f3\u30bf\u30a4\u30e0\u306f\u307e\u305f\u3082\u308417\u6642\u9593\u306b\u623b\u308a\u307e\u3059\u3002", "titles": ["ZX Spectrum\u3067Tiny Raytracer\u3092\u5b9f\u884c\u3059\u308b\u65b9\u6cd5", "15\u8272\u3067\u306e\u30ec\u30a4\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0\u306b\u6311\u6226\u3059\u308b", "ZX Spectrum\u306e\u9650\u3089\u308c\u305fBASIC\u65b9\u8a00\u3067\u306e\u30ec\u30a4\u30c8\u30ec\u30fc\u30b9", "ZX Spectrum\u4e0a\u3067\u306e\u30ab\u30e9\u30d5\u30eb\u306a\u30ec\u30a4\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0", "\u30ab\u30c3\u30d7\u30b9\u30bf\u30c3\u30af\u3084\u8fd1\u4f3c\u3092\u4f7f\u3044ZX Spectrum\u3067\u306e\u30ec\u30a4\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0\u901f\u5ea6\u3092\u6700\u9069\u5316"]}