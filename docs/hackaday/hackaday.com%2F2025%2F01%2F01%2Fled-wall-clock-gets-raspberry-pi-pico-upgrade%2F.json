{"pubDate": "2025-01-01T15:00:00", "original_title": "LED Wall Clock Gets Raspberry Pi Pico Upgrade", "link": "https://hackaday.com/2025/01/01/led-wall-clock-gets-raspberry-pi-pico-upgrade/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/01/clockpico_feat.jpg", "original_content": "When [Rodrigo Feliciano] realized that the reason his seven-segment LED wall clock wasnt working was because the original TG1508D5V5 controller was fried, he had a decision to make. He could either chuck the whole thing, or put in the effort to reverse engineer how the displays were driven and replace the dead controller with something a bit more modern. Since youre reading this post on Hackaday, we bet you can guess which route he decided to take.\nIf you happen to own the same model of clock as [Rodrigo], then you really lucked out. Hes done a fantastic job documenting how he swapped the original controller out for a Raspberry Pi Pico W, which not only let him bring the clock back to life, but let him add new capabilities such as automatic time setting via Network Time Protocol (NTP).\nBut even if you dont have this particular clock theres probably something you can learn from this project, as its a great example of practical reverse engineering. By loading a high-resolution image of the back of the PCB into KiCad, [Rodrigo] was able to place all the components into their correct positions and following traces to see whats connected to what.\nPretty soon he not only had a 3D model of the clocks PCB, but a schematic he could use to help wire in the Pi Pico. Admittedly this is a pretty straightforward PCB to try and reverse engineer, but hey, you have to start somewhere.\nWe had high hopes for KiCads image import feature when it was introduced, and its great to see real-world examples like this trickle in as more folks learn about it.\n\n"}