{"pubDate": "2024-10-24T05:00:58", "original_title": "Seven New Street Fighter 2 Arcade Rom Hacks", "link": "https://hackaday.com/2024/10/23/seven-new-street-fighter-2-arcade-rom-hacks/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/10/modified_ui.png", "original_content": "[Sebastian Mihai] is a prolific programmer and hacker with a particular focus on retrocomputing and period games, and this latest hack, adding new gameplay elements to Capcoms Street Fighter II  Champion Edition, is another great one. [Sebastian] was careful to resist changing the game physics, as thats part of what makes this game feel the way it does, but added some fun extra elements, such as the ability to catch birds, lob barrels at the other player, and dodge fire. The title screen was updated for each of the different versions, so there is no doubt about which was being played. This work was based on their previous hacks to Knights of the Round. Since both games shared the same Capcom CPS-1 hardware, the existing 68000 toolchain could be reused, reducing the overhead for this new series of hacks.\nBinary modification program flow\nObviously, without access to the games source code, the hacks (all seven of them!) were made by binary modification, first learning about how the original program stores aspects of the game and hacking in a little hand-grafted assembly here and there to sneak in the extra elements without interfering too much with the original code operation. [Sebastian] stripped out some title screen effects to speed boot time and removed some in-game graphics, such as the score and the insert coin images, to free up some graphical tiles to reuse for the new elements. [Sebastian] first needed to understand the game code, which meant disassembly and hand annotation of the entire binary, which was done using the MAME debugger. As the linked article demonstrates, saying this is a big task is somewhat of an understatement.\nA simple approach was taken to the mods consisting of three types of binary patches. The first, or short circuit, are simple NOPs inserted to disable subroutine calls or RTS to force an early return in a subroutine. The second type is a blob of code residing in some unused ROM space and storing state in a spare section of RAM. This is where the main parts of the new code reside. Finally, hooks are injected into the code at key locations, which jump into the binary blob where modified behaviour is required. This can do any needed initialisation before returning to the main game logic. Making significant changes to the game would be very hard without any spare space in the system, but we guess you could do it by stripping out other game elements, but [Sebastian] didnt need to go there. If youre into retro gaming and particularly modding, then going deeper into [Sebastian]s homepage will reveal an astonishing number of projects and hacks.\nSometimes, our fond memories of games of old are skewed a little over the years, and the gameplay wasnt that great in reality. So, what can we do? How about a little Redux, Zelda II style? If youre really down the rabbit hole of retro hardware, then dealing with all those pesky EPROM chips is getting more difficult these days. To help with that, heres a modern take on the necessary hardware.\n", "title": "\u30b9\u30c8\u30ea\u30fc\u30c8\u30d5\u30a1\u30a4\u30bf\u30fcII\u306e\u65b0\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u30cf\u30c3\u30af", "body": "\u30bb\u30d0\u30b9\u30c1\u30e3\u30f3\u306f\u3001\u30b9\u30c8\u30ea\u30fc\u30c8\u30d5\u30a1\u30a4\u30bf\u30fcII\u306b\u65b0\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u305f\u30cf\u30c3\u30ad\u30f3\u30b0\u3092\u884c\u3063\u305f\u3002", "titles": ["\u30b9\u30c8\u30ea\u30fc\u30c8\u30d5\u30a1\u30a4\u30bf\u30fcII\u306e\u65b0\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u30cf\u30c3\u30af", "\u30d0\u30a4\u30ca\u30ea\u6539\u9020\u306b\u3088\u308b\u30ec\u30c8\u30ed\u30b2\u30fc\u30e0\u306e\u30e2\u30c7\u30a3\u30d5\u30a3\u30b1\u30fc\u30b7\u30e7\u30f3\u624b\u6cd5", "\u30a8\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u7528\u3044\u305f\u30bb\u30d0\u30b9\u30c1\u30e3\u30f3\u306e\u30cf\u30c3\u30ad\u30f3\u30b0\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "\u6614\u306e\u30b2\u30fc\u30e0\u3092\u65b0\u3057\u3044\u8981\u7d20\u3067\u8607\u3089\u305b\u308b\u6280\u8853", "\u30ec\u30c8\u30ed\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u73fe\u4ee3\u7684\u30a2\u30d7\u30ed\u30fc\u30c1\u3068\u8ab2\u984c"]}