{"pubDate": "2023-08-29T15:30:34", "original_title": "WiFi, PWM Backlight, and Graphics On Updated Chumby Kernel", "link": "https://hackaday.com/2023/08/29/wifi-pwm-backlight-and-graphics-on-updated-chumby-kernel/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/08/chumby_showing_off_backlight.jpeg", "original_content": "For some, the Chumby was a peek at what could have been. That vision never died for [Doug Brown], and he has been working tirelessly on bringing mainline Linux kernel support to the customizable smart display. He has posted several updates but recently got graphics and the PWM backlight working.\nOf course, we covered when [Doug] first started working on the new kernel, so its high time we revisited the progress. The WiFi hardware uses a Marvell 88W8686 chipset, which talks over the SDIO bus, so its a matter of convincing the libertas driver to talk to it. With a USB to Ethernet adapter, [Doug] could boot new kernels over NFS, so he didnt have to walk over to swap the SD card. After dealing with an unhandled fault when trying to read the SDHCI_HOST_VERSION register, [Doug] had access points showing up in NetworkManager but could not connect. As a nasty hack, he temporarily removed the interrupts and switched to polling in the driver. While that worked, it would never get upstreamed. A critical interrupt was being dropped, and commands went out of sequence. A second, perhaps ugly hack, read a register after acknowledging an SDIO interrupt, which seemed to work. But it was still a hack, and [Doug] wanted something cleaner. In a blind stroke of luck, he found the errata online and noticed that it mentioned that an interrupt could be missed when a signal was asserted. After following the workaround with a lot of head-scratching and deep diving, he had a fully working WiFi driver.\nGraphics were a more straightforward endeavor compared to WiFi. He enabled the simpledrm driver (similar to simplefb) but using Direct Rendering Manager. He had a working panel that could run Qt apps by adding the frame buffer to the device tree with the correct compatible string, registers, and data. However, there was a Vivante GC300 graphics accelerator onboard that he wanted to use. A driver for Vivante GPUs already exists in the kernel, but after enabling it, the driver detects the GC300 and then starts complaining. He discovered that older revisions of the GC300 (like the ones found in Chumbys) mapped registered at different addresses and didnt set some bits in their idle registers. Of course, just loading a GPU driver isnt quite enough. He modified an x11 server that supported Vivante accelerators to support the GC300.\nFor hacking purposes, [Doug] set the backlight GPIO high. While easy to see, perhaps not the best for a device meant to blend in. The PAX166 comes with PWM hardware, though confusingly, it has two PWM modes for pin 84. PWM1 and PWM2 share some common clock and reset bits in a decidedly undocumented way. PWM2 doesnt work until you configure and then turn off PWM1. However, the backlight turned off once out of UBoot and into Linux. Linux re-initialized the hardware too quickly, causing the device to freak out. This was solved using the abrupt shutdown register.\nIts a journey through debugging, Linux internals, and device tree hackery. Perhaps the most incredible thing is that these changes are submitted for upstreaming to the Linux kernel, with many landing in Linux 6.2. While its a shame\u00a0new Chumbys arent being made, making your own smart display has never been easier.", "title": "Chumby\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u53ef\u80fd\u306a\u30b9\u30de\u30fc\u30c8\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306bLinux\u30ab\u30fc\u30cd\u30eb\u30b5\u30dd\u30fc\u30c8\u3092\u8ffd\u52a0", "body": "\u300cChumby\u300d\u306eLinux\u30ab\u30fc\u30cd\u30eb\u30b5\u30dd\u30fc\u30c8\u3092\u4f5c\u696d\u4e2d\u306e[Doug Brown]\u304c\u3001\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u3068PWM\u30d0\u30c3\u30af\u30e9\u30a4\u30c8\u306e\u6a5f\u80fd\u3092\u5b9f\u88c5\u3002WiFi\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306b\u306fMarvell 88W8686\u30c1\u30c3\u30d7\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u3001libertas\u30c9\u30e9\u30a4\u30d0\u30fc\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a66\u307f\u308b\u306a\u3069\u9032\u5c55\u3002Linux 6.2\u306b\u5411\u3051\u3066\u5909\u66f4\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u308b\u3002", "titles": ["Chumby\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u53ef\u80fd\u306a\u30b9\u30de\u30fc\u30c8\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306bLinux\u30ab\u30fc\u30cd\u30eb\u30b5\u30dd\u30fc\u30c8\u3092\u8ffd\u52a0", "Marvell\u30c1\u30c3\u30d7\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u305fChumby\u306eWiFi\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u8a2d\u5b9a\u65b9\u6cd5", "Vivante GC300\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf\u306e\u30c9\u30e9\u30a4\u30d0\u30fc\u3092Chumby\u306b\u8ffd\u52a0", "\u30d0\u30c3\u30af\u30e9\u30a4\u30c8\u306ePWM\u5236\u5fa1\u306b\u95a2\u3059\u308b\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u8a2d\u5b9a\u65b9\u6cd5", "\u591a\u304f\u306e\u5909\u66f4\u304cLinux\u30ab\u30fc\u30cd\u30eb\u306b\u63d0\u51fa\u3055\u308c\u3001\u81ea\u5206\u81ea\u8eab\u3067\u30b9\u30de\u30fc\u30c8\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u5bb9\u6613\u306b\u306a\u308a\u307e\u3057\u305f"]}