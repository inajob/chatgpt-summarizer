{"pubDate": "2024-07-31T15:30:37", "original_title": "Reverse Engineering a Soundsystem\u2019s API", "link": "https://hackaday.com/2024/07/31/reverse-engineering-a-soundsystems-api/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/07/stereo-main.jpg", "original_content": "Weve all been stymied by a smart thermostat, coffee maker, or other device which would work fine on its own but ultimately seems to be worse off for having an Internet connection \u00a0 so when something actually pulls off this feat its quite noteworthy. [James] has a powerful set of connected speakers and while they dont have all of the functionality he needed built-in, an included web API at least allowed him to build in the features he wanted.\nThe major problem with these speakers isnt that theyre incredibly loud (although they are), but rather that the wide range of available volumes for such a loud soundsystem doesnt leave a lot of fine adjustment in the range where [James] typically uses these speakers. To tackle the problem, he first found the web interface the speakers present and then discovered a somewhat hidden application programming interface (API) within that allows for some manual control. He built a second website which serves as a volume slider within the range he wants, and the web server sends this volume to the speakers via this API which allows much finer control than the built-in user interface.\nHaving a usable API included with Internet-connected devices is not always the case, although its a great model for any company wanting to allow their customers better control of the products they buy. If you need to roll out your own API for connected devices that dont have one already, take a look at [Sean Boyce]s guide from 2019."}