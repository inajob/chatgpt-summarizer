{"pubDate": "2024-06-21T08:00:39", "original_title": "Is That a Large Smartwatch? Or a Tiny Cray?", "link": "https://hackaday.com/2024/06/21/is-that-a-large-smartwatch-or-a-tiny-cray/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/06/cray.png", "original_content": "While we arent typically put off by a large wristwatch, we were taken a bit aback by [Chris Fenton]s latest timepiece  if you can call it that. Its actually a 1/25th-scale Cray C90 worn as a wristwatch. The whole thing started with [Chris] trying to build a Cray in Verilog. He started with a Cray-1 but then moved to a Cray X-MP, which is essentially a Cray-1 with two extra address bits. Then he expanded it to 32 bits, which makes it a Cray Y-MP/C90/J90 core. As he puts it, If you wanted something practical, go read someone elses blog.\nThe watch emulates a Cray C916 and uses a round OLED display on the top. While the move from 22 to 32 address bits sounds outdated, keep in mind the Cray addresses 64-bit words exclusively, so were talking access to 32 gigabytes of memory. The hardware consists of an off-the-shelf FPGA board and a Teensy microcontroller to handle mundane tasks like driving the OLED display and booting the main CPU. Interestingly, the actual Cray 1A used Data General computers for a similar task.\nOf course, any supercomputer needs a super program, so [Chris] uses the screen to display a full simulation of Jupiter and 63 of its moons. The Cray excels at programs like this because of its vector processing abilities. The whole program is 127 words long and sustains 40 MFLOPs. Of course, that means to read the current time, you need to know where Jupiters moons are at all times so you can match it with the display. He did warn us this would not be practical.\nWhile the Cray wouldnt qualify as a supercomputer today, we love learning about what was state-of-the-art not that long ago. Cray was named, of course, after [Seymour Cray] who had earlier designed the Univac 1103, several iconic CDC computers, and the Cray computers, of course.", "title": "\u8155\u6642\u8a08\u30b5\u30a4\u30ba\u306eCray C90: \u30cf\u30a4\u30c6\u30af\u306a\u30a6\u30a7\u30a2\u30e9\u30d6\u30eb\u30c7\u30d0\u30a4\u30b9", "body": "\u30e6\u30fc\u30b6\u30fc\u306fChris Fenton\u306b\u3088\u308b1/25\u30b9\u30b1\u30fc\u30eb\u306eCray C90\u30a6\u30a9\u30c3\u30c1\u3092\u8981\u7d04\u306e\u5bfe\u8c61\u3068\u3057\u3066\u9078\u629e\u3057\u307e\u3057\u305f\u3002\u300cChris\u300d\u306fCray-1\u3092\u69cb\u7bc9\u3057\u3001Cray Y-MP/C90/J90\u30b3\u30a2\u306b\u62e1\u5f35\u3057\u307e\u3057\u305f\u3002\u6642\u8a08\u306fCray C916\u3092\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3057\u300132\u30ae\u30ac\u30d0\u30a4\u30c8\u306e\u30e1\u30e2\u30ea\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002Jupiter\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8868\u793a\u3002", "titles": ["\u8155\u6642\u8a08\u30b5\u30a4\u30ba\u306eCray C90: \u30cf\u30a4\u30c6\u30af\u306a\u30a6\u30a7\u30a2\u30e9\u30d6\u30eb\u30c7\u30d0\u30a4\u30b9", "Verilog\u3067\u518d\u73fe\u3059\u308bCray: FPGA\u3092\u4f7f\u7528\u3057\u305f\u30e6\u30cb\u30fc\u30af\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "\u8d85\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3092\u6a21\u5023\u3059\u308b\u8155\u6642\u8a08\u30a6\u30a9\u30c3\u30c1: \u5b9f\u7528\u6027\u3092\u6368\u3066\u305f\u9769\u65b0\u7684\u30c7\u30b6\u30a4\u30f3", "\u30b8\u30e5\u30d4\u30bf\u30fc\u306e\u6a21\u64ec\u8868\u793a: Cray C916\u642d\u8f09\u306e\u7279\u6b8a\u306a\u6642\u8a08", "\u53e4\u4ee3\u306e\u30b9\u30fc\u30d1\u30fc\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf: Cray\u306e\u6b74\u53f2\u3092\u305f\u3069\u308b\u8208\u5473\u6df1\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8"]}