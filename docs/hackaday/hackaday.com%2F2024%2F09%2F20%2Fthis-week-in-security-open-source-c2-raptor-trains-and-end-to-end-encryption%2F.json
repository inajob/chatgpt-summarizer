{"pubDate": "2024-09-20T14:00:46", "original_title": "This Week in Security: Open Source C2, Raptor Trains, and End to End Encryption", "link": "https://hackaday.com/2024/09/20/this-week-in-security-open-source-c2-raptor-trains-and-end-to-end-encryption/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/01/darkarts.jpg", "original_content": "Open Source has sort of eaten everything in software these days. And that includes malware, apparently, with open source Command and Control (C2) frameworks like Sliver and Havoc gaining traction. And of course, this oddball intersection of Open Source and security has intrigued at least one security researcher who has found some interesting vulnerabilities.\nBefore we dive into what was found, you may wonder why open source malware tools exist. First off, trustworthy C2 servers are quite useful for researchers, who need access to such tools for testing. Then there is Red Teaming, where a security professional launches a mock attack against a target to test its defenses. A C2 is often useful for education and hobby level work, and then there are the true criminals that do use these Open Source tools. It takes all types.\nA C2 system consists of an agent installed on compromised systems, usually aiming for stealth. These agents connect to a central server, sending information and then executing any instructions given. And finally theres a client, which is often just a web interface or even a command line interface.\nNow what sort of fun is possible in these C2 systems? Up first is Sliver, written in Go, with a retro command line interface. Sliver supports launching Metasploit on compromised hosts. Turns out, it accidentally supported running Metasploit modules against the servers OS itself, leading to an easy remote shell from an authenticated controller account.\nHavoc has a fancy user interface for the clients, and also a command injection flaw. A service name field gets used to generate a shell command, so youre only a simple escape away from running commands. Thats not quite as useful as the API that failed open when a bad username/password was given. Oops.\nTrains!\n[Bertin Jose] has a bit of a side hobby, of scanning the Internet for interesting endpoints, with an emphasis on industrial control systems. In an automated scan, a CZAT7 device popped up  a traction power substation controller. This is a miniature power station that supplies power to electric railways. And this one was not only connected to the Internet, it exposed a web interface that probably wasnt intended to be public. And it included coordinates. Its delightful that we can point to a picture on Google Maps, to the little building in Poland where this controller lives.\n[Bertin] has enough experience with control devices like these, to know that 1111 is a common password. Its wild that for these devices, both 1111 and 2222 worked for read/write access to the devices. This is where there was clearly a line, where fiddling around further inside these real devices would be ill-advised. What turned out to be more of a problem is finding the right people to disclose the device to. There was never a response, but the device seems to be finally off the Internet.\nRaptor Train\nWe have news this week of a joint effort between Lumen Technologies and the US DoJ to take down the Raptor Train, a botnet that lives on a variety of routers, IoT devices, and cameras and NVRs. This botnet is interesting, that each device was only compromised for an average of 17 days at a time, with the infection only persisting until the next reboot.\nWhats always fun about watching malware activity like this is to line up activity with timezones around the world. This one roughly corresponds to a 10:00 AM to 7:00 PM working day in China Standard Time, which checks out with the likely attribution to the Chinese group, Flax Typhoon. The count of total devices was somewhere around 260,000, with exploitation due to a combination of 0-day and n-day vulnerabilities. Turns out maybe its not a great idea to put those cameras on the Internet.\nDiscord and DAVE\nDiscord has rolled out DAVE, Discord Audio and Video end-to-end Encryption. This new solution will provide encryption for voice and video for DMs, Group DMs, and other live calls on Discord. The solution is Open Source, and was designed in collaboration with trailofbits.\nLots of established cryptography was used, and at a brief look the scheme seems to check out. Notably missing is any mention of quantum-resistant cryptography. Thats not entirely unexpected, as were still several years away from practical quantum computers, and the cryptography schemes designed to be immune to quantum cryptography are still quite new and immature.\nThe Other Side of the Coin\nIn an interesting counterpoint to Discords new scheme, Interpol has taken down Ghost, an end-to-end-encrypted communications platform widely used for organized crime. It seems that Ghost was designed and marketed specifically for criminal use, but one has to ask the question about whether Discord will also face repercussions for the move to strong encryption.\nBits and Bytes\nThe folks at Cyber Security Associates have the scoop on doing a Patch Diff on a vulnerability fixed in a recent Windows Patch Tuesday. The short explanation is that incoming calls to the driver werent checked for whether they originated in the kernel or in userspace.\nAnd finally, theres a real mystery on the Internet. GreyNoise describes Noise Storms of spoofed packets flooding the Internet. These seem to be malicious, coming in waves since January 2020. The inclusion of the string LOVE in recent packets suggests the name LOVE Storm. GreyNoise has made packet captures available, if any of our readers feel like joining in on the sleuthing to figure out what these packets are up to.", "title": "\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9C2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\uff1aSliver\u3068Havoc", "body": "\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306eC2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304c\u53f0\u982d\u3057\u3066\u304a\u308a\u3001Sliver\u3084Havoc\u306a\u3069\u306e\u30c4\u30fc\u30eb\u304c\u6ce8\u76ee\u3092\u96c6\u3081\u3066\u3044\u308b\u3002C2\u30b7\u30b9\u30c6\u30e0\u306f\u60c5\u5831\u3084\u6307\u793a\u3092\u9001\u4fe1\u3057\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u3057\u3066Web\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3084\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3002\u307e\u305f\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u7814\u7a76\u8005\u306f\u6709\u76ca\u306a\u8106\u5f31\u6027\u3092\u898b\u3064\u3051\u3066\u3044\u308b\u3002", "titles": ["\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9C2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\uff1aSliver\u3068Havoc", "\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u7814\u7a76\u8005\u306e\u8abf\u67fb\uff1a\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30de\u30eb\u30a6\u30a7\u30a2\u30c4\u30fc\u30eb\u306e\u8106\u5f31\u6027", "\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3067\u898b\u3064\u304b\u3063\u305f\u7523\u696d\u5236\u5fa1\u30b7\u30b9\u30c6\u30e0\uff1aCZAT7\u30c7\u30d0\u30a4\u30b9", "Raptor Train\uff1aLumen Technologies\u3068\u7c73\u56fdDoJ\u306e\u5171\u540c\u4f5c\u6226", "Discord\u306e\u65b0\u6a5f\u80fdDAVE\uff1a\u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9\u306e\u97f3\u58f0\u304a\u3088\u3073\u30d3\u30c7\u30aa\u6697\u53f7\u5316"]}