{"pubDate": "2023-09-26T05:00:39", "original_title": "Tetris Clone Uses 1000 Lines of Code, and Nothing Else", "link": "https://hackaday.com/2023/09/25/tetris-clone-uses-1000-lines-of-code-and-nothing-else/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/09/Cattech-2000.jpg", "original_content": "If youre programming on a modern computer, you typically make use of lots of work done by other people. Theres operating systems to abstract away the complexities of modern hardware, standard libraries to implement common tasks, and tons of third-party libraries that prevent you from having to reinvent the wheel all the time: youre definitely not the first one trying to draw graphics onto a screen or store data in a file.\nBut if its the wheels youre most interested in, then theres nothing wrong with inventing new ones now and then. [Michal Zalewski], for instance, has made a beautiful Tetris clone in just 1000 lines of C, without using anyone elses code.\nThe purpose of this exercise is to show that its possible to make a game with graphics comparable to modern, complex computing systems, without relying on operating systems or third-party libraries. The hardware consists of not much more than an ARM Cortex-M7 MCU, a 240320 LCD screen and a few buttons soldered onto a piece of prototyping board, all powered by a set of AAA batteries.\nThe software is similarly spartan: just pure C code running directly on the CPU core. Graphic elements, some generated by AI and others hand-drawn, are stored in memory as plain bitmaps. They are manipulated by 150 lines of code that shuffles sprites around the display at a speed high enough to generate smooth motion. Game mechanics take up about 250 lines, while sound consists of simple square-wave chiptunes written in just 50 lines of code.\n[Michal]s code is very well documented, and his blog post gives even more details about all the problems he had to solve. One example is the length of keypresses: when do you interpret a keypress as a single press, and when does it become press and hold? Apparently, waiting 250 ms after the first press and 100 ms after subsequent ones does the trick. [Michal] is a bit of an expert on bare-bones game programming by now: he has previously pushed several 8-bit micros to their very limits. Third-party libraries can make your programming life a lot easier, but its good to reflect on the dangers of relying too much on other peoples code.\n\n", "title": "1000\u884c\u306eC\u8a00\u8a9e\u3067\u4f5c\u3089\u308c\u305f\u7f8e\u3057\u3044\u30c6\u30c8\u30ea\u30b9\u30af\u30ed\u30fc\u30f3", "body": "\u30e2\u30c0\u30f3\u306a\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u3001\u4ed6\u306e\u4eba\u304c\u4f5c\u6210\u3057\u305f\u4f5c\u696d\u3092\u591a\u304f\u5229\u7528\u3057\u307e\u3059\u3002\u3060\u3051\u3069\u3001\u65b0\u3057\u3044\u76f4\u4ea4\u5ea7\u6a19\u7cfb\u3092\u767a\u660e\u3059\u308b\u3053\u3068\u3082\u60aa\u304f\u306f\u3042\u308a\u307e\u305b\u3093\u3002Michal Zalewski\u306f\u3001\u4ed6\u306e\u4eba\u306e\u30b3\u30fc\u30c9\u3092\u4f7f\u7528\u305b\u305a\u306b\u308f\u305a\u304b1000\u884c\u306eC\u3067\u7f8e\u3057\u3044\u30c6\u30c8\u30ea\u30b9\u30af\u30ed\u30fc\u30f3\u3092\u5236\u4f5c\u3057\u307e\u3057\u305f\u3002\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u8907\u96d1\u3055\u3092\u62bd\u8c61\u5316\u3059\u308b\u305f\u3081\u306e\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3084\u3001\u5171\u901a\u306e\u30bf\u30b9\u30af\u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3001\u30db\u30a4\u30fc\u30eb\u3092\u518d\u767a\u660e\u3059\u308b\u3053\u3068\u3092\u9632\u3050\u305f\u3081\u306e\u591a\u304f\u306e\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\n \u3053\u306e\u30a8\u30af\u30b5\u30b5\u30a4\u30ba\u306e\u76ee\u7684\u306f\u3001\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3084\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u983c\u3089\u305a\u306b\u3001\u73fe\u4ee3\u306e\u8907\u96d1\u306a\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3068\u540c\u7b49\u306e\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u6301\u3064\u30b2\u30fc\u30e0\u3092\u4f5c\u6210\u3067\u304d\u308b\u3053\u3068\u3092\u793a\u3059\u3053\u3068\u3067\u3059\u3002\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306f\u3001ARM Cortex-M7 MCU\u3001240320\u306e\u6db2\u6676\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3001\u304a\u3088\u3073\u30d7\u30ed\u30c8\u30bf\u30a4\u30d4\u30f3\u30b0\u30dc\u30fc\u30c9\u306b\u306f\u3093\u3060\u4ed8\u3051\u3055\u308c\u305f\u3044\u304f\u3064\u304b\u306e\u30dc\u30bf\u30f3\u304b\u3089\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u5168\u3066\u306e\u8981\u7d20\u304c\u5358\u306a\u308b\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u3068\u3057\u3066\u30e1\u30e2\u30ea\u306b\u683c\u7d0d\u3055\u308c\u3001\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u4e0a\u3067\u30b9\u30d7\u30e9\u30a4\u30c8\u3092\u30b9\u30e0\u30fc\u30ba\u306b\u52d5\u304b\u3059\u305f\u3081\u306e150\u884c\u306e\u30b3\u30fc\u30c9\u306b\u3088\u3063\u3066\u64cd\u4f5c\u3055\u308c\u307e\u3059\u3002\u30b2\u30fc\u30e0\u306e\u4ed5\u7d44\u307f\u306f\u7d04250\u884c\u3067\u3001\u97f3\u306f\u308f\u305a\u304b50\u884c\u306e\u30b3\u30fc\u30c9\u3067\u66f8\u304b\u308c\u305f\u30b7\u30f3\u30d7\u30eb\u306a\u30b9\u30af\u30a8\u30a2\u6ce2\u306e\u30c1\u30c3\u30d7\u30c1\u30e5\u30fc\u30f3\u3067\u3059\u3002\nMichal\u306e\u30b3\u30fc\u30c9\u306f\u975e\u5e38\u306b\u3088\u304f\u6587\u66f8\u5316\u3055\u308c\u3066\u304a\u308a\u3001\u30d6\u30ed\u30b0\u6295\u7a3f\u3067\u306f\u5f7c\u304c\u89e3\u6c7a\u3057\u305f\u554f\u984c\u306e\u8a73\u7d30\u304c\u3055\u3089\u306b\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u554f\u984c\u306e\u4f8b\u3068\u3057\u3066\u3001\u30ad\u30fc\u5165\u529b\u306e\u9577\u3055\u304c\u3042\u308a\u307e\u3059\u3002\u6700\u521d\u306e\u62bc\u4e0b\u5f8c\u306b250\u30df\u30ea\u79d2\u5f85\u3061\u3001\u305d\u306e\u5f8c\u306e\u62bc\u4e0b\u5f8c\u306f100\u30df\u30ea\u79d2\u5f85\u3064\u3068\u8003\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002Michal\u306f\u7d20\u306e\u30b2\u30fc\u30e0\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u30a8\u30ad\u30b9\u30d1\u30fc\u30c8\u3067\u3042\u308a\u3001\u3053\u308c\u307e\u3067\u306b\u3044\u304f\u3064\u304b\u306e8\u30d3\u30c3\u30c8\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3092\u9650\u754c\u307e\u3067\u8ffd\u3044\u8fbc\u3093\u3067\u304d\u307e\u3057\u305f\u3002\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u7c21\u5358\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u4ed6\u306e\u4eba\u306e\u30b3\u30fc\u30c9\u306b\u904e\u5ea6\u306b\u4f9d\u5b58\u3059\u308b\u5371\u967a\u6027\u306b\u3064\u3044\u3066\u8003\u3048\u308b\u3053\u3068\u3082\u5927\u5207\u3067\u3059\u3002", "titles": ["1000\u884c\u306eC\u8a00\u8a9e\u3067\u4f5c\u3089\u308c\u305f\u7f8e\u3057\u3044\u30c6\u30c8\u30ea\u30b9\u30af\u30ed\u30fc\u30f3", "\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3084\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30fc\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3057\u3067\u30e2\u30c0\u30f3\u306a\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u30b2\u30fc\u30e0\u3092\u4f5c\u6210", "ARM Cortex-M7 MCU\u3068LCD\u30b9\u30af\u30ea\u30fc\u30f3\u3092\u4f7f\u7528\u3057\u3066\u4f5c\u3089\u308c\u305f\u30b2\u30fc\u30e0", "\u30e1\u30e2\u30ea\u5185\u306e\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u3067\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u64cd\u4f5c\u3059\u308b", "AI\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u8981\u7d20\u3068\u624b\u63cf\u304d\u306e\u8981\u7d20\u3092\u6301\u3064\u30b2\u30fc\u30e0"]}