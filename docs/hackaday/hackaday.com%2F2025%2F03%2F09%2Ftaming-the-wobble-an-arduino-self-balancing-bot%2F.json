{"pubDate": "2025-03-09T14:00:14", "original_title": "Taming the Wobble: An Arduino Self-Balancing Bot", "link": "https://hackaday.com/2025/03/09/taming-the-wobble-an-arduino-self-balancing-bot/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/03/stabilizing-robot-1200.jpg", "original_content": "Getting a robot to stand on two wheels without tipping over involves a challenging dance with the laws of physics. Self-balancing robots are a great way to get into control systems, sensor fusion, and embedded programming. This build by [mircemk]\u00a0shows how to make one with just a few common components, an Arduino, and a bit of patience fine-tuning the PID controller.\nAt the heart of the bot is the MPU6050  a combo accelerometer/gyroscope sensor that keeps track of tilt and movement. An Arduino Uno takes this data, runs it through a PID loop, and commands an L298N motor driver to adjust the speed and direction of two DC motors. The power comes from two Li-ion batteries feeding everything with enough juice to keep it upright. The rest of the magic lies in the tuning.\nPID (Proportional-Integral-Derivative) control is what makes the robot stay balanced. Kp (proportional gain) determines how aggressively the motors respond to tilting. Kd (derivative gain) dampens oscillations, and Ki (integral gain) helps correct slow drifts. Set them wrong, and your bot either wobbles like a confused penguin or falls flat on its face. A good trick is to start with only Kp, then slowly add Kd and Ki until it stabilizes. Then don\u2019t forget to calibrate your MPU6050; each sensor has unique offsets that need to be compensated in the code.\nOnce dialed in, the result is a robot that looks like it defies gravity. Whether you\u2019re hacking it for fun, turning it into a segway-like ride, or using it as a learning tool, a balancing bot is a great way to sharpen your control system skills. For more inspiration, check out this earlier attempt from 2022, or these self-balancing robots (one with a little work) from a year before that. You can read up on [mircemk]s project details here.", "title": "- \u91cd\u5fc3\u3092\u4fdd\u3064\u30ed\u30dc\u30c3\u30c8\u3092\u4f5c\u308d\u3046: PID\u5236\u5fa1\u5165\u9580", "body": "\u81ea\u7acb\u4e8c\u8f2a\u30ed\u30dc\u30c3\u30c8\u306fPID\u5236\u5fa1\u3067\u30d0\u30e9\u30f3\u30b9\u3092\u4fdd\u3061\u3001Arduino\u3067\u52d5\u4f5c\u3002\u30bb\u30f3\u30b5\u30fc\u8abf\u6574\u304c\u9375\u3002", "titles": ["- \u91cd\u5fc3\u3092\u4fdd\u3064\u30ed\u30dc\u30c3\u30c8\u3092\u4f5c\u308d\u3046: PID\u5236\u5fa1\u5165\u9580", "- \u81ea\u5df1\u30d0\u30e9\u30f3\u30b9\u30ed\u30dc\u30c3\u30c8\u306e\u57fa\u672c\u3068\u8abf\u6574\u65b9\u6cd5", "- Arduino\u3068MPU6050\u3092\u4f7f\u3063\u305f\u81ea\u7acb\u578b\u30ed\u30dc\u30c3\u30c8\u306e\u4f5c\u6210", "- \u30d0\u30e9\u30f3\u30b9\u3092\u4fdd\u3064\u305f\u3081\u306e\u30bb\u30f3\u30b5\u30fc\u878d\u5408\u3068\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0", "- \u81ea\u5206\u3060\u3051\u306e\u81ea\u7acb\u4e8c\u8f2a\u30ed\u30dc\u30c3\u30c8\u3092\u4f5c\u308b\u305f\u3081\u306e\u30b9\u30c6\u30c3\u30d7\u30ac\u30a4\u30c9"]}