{"pubDate": "2024-06-13T14:00:05", "original_title": "PCB Design Review: A 5V UPS With LTC4040", "link": "https://hackaday.com/2024/06/13/pcb-design-review-a-5v-ups-with-ltc4040/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/04/PCBdesign.jpg", "original_content": "Do you have a 5 V device you want to run 24/7, no matter whether you have electricity? Not to worry  Linear Technology has made a perfect IC for you, the LTC4040; with the perfect assortment of features, except perhaps for the hefty price tag.\n[Lukilukeskywalker] has shared a PCB for us to review  a LTC4040-based stamp you can drop onto your PCB whenever you want a LTC4040 design. Its a really nice module to see designed  things like LiFePO4 support make this IC a perfect solution for many hacker usecases. For instance, are you designing a custom Pi HAT? Drop this module to give your HAT the UPS capability for barely any PCB effort. if your Pi or any other single-board computer needs just a little bit of custom sauce, this module spices it up alright!\n\n\n\n\n\nThis one is a well-designed module! I almost feel like producing a couple of these, just to make sure I have them handy. If you like the LTC4040, given its numerous features and all, this is also not the only board in town  heres yet another LTC4040 board that has two 18650 holders, and referencing its PCB design will help me today in this review, you can take a look at it too!\nNow, having looked at this PCB for a fair bit, it has a few things that we really do want to take care of. Part of todays review will be connector selection, another would be the module form-factor, some layout, and some suggestions on sizing the passives  the rows of 1206 components are pretty, but theyre also potentially a problem. Lets waste no time and delve in.\nBattery Wireup And Formfactor\nThe battery connector uses JST-SH, one pin for VBAT and one for GND. The problem with this is that the module is capable of 2.5 A at 5 V = 12 W. At 3.6 V, thats 4 A if not more and JST-SH is only rated for 1 A per pin. Using this module with a battery as-intended will melt things. You could add a bigger connector like the standard JST-PH, but thatd increase the module size, and my assessment is that this board doesnt have to be larger than it already is.\n\n\n\n\nThankfully, this is an open-source module, so we can change its pinout easily enough, adding pins for the battery into the mix. Currently, this board feels breadboardable, but it isnt quite  its pretty wide, so it will take two breadboards to handle, and a breadboard would also probably be disappointed with the pin amount required. With that in mind, adding pins at the top looks convenient enough.\nIn general, shuffling the pins around will help a fair bit. My hunch is to make the modules castellations asymmetric, say, do 7-5-5-5  one side with seven pins, three sides with five pins. It might not look as perfect, but whats important is that it will be way way harder to mount incorrectly, something Ive done with a module of my own design  that was not fun to fix. If you are worried about having enough pins to fill the resulting 22-pin combination, its always great to just add GND, doubly so for a power-related module!\n\nAdding more castellations also helps us shuffle the pinout around, freeing up the routing  lets go through the pins and see what that could help with.\nPinout Changes\nThe schematic is seriously nice looking  every single block is nicely framed and has its description listed neatly. Comparing it with reference schematic, it looks pretty good!\nTheres a few nits to pick. For instance, BST_OFF and CHG_OFF need to be grounded for the IC to work  datasheet page 10. You could ground them through a resistor and pull them onto a castellation, but you cant leave them floating. This is not easy to notice, however, unless you go through the pins one by one and recheck their wiring; I noticed it because I was looking at the board, saw two unconnected pins and decided to check.\nMy hunch is that, first, all the pins were given power names, and then two of them were missed as not connected anywhere, which is an understandable mistake to make.\nLets keep with the schematic style  add two more connectors, one 5-pin and one 7-pin, rearrange the pinout, and keep them in their own nicely delineated area. The 7-pin connector gets the battery pins and a healthy dose of ground, and as for the 5 extra pins at the bottom, theyll serve as extra ground pins, and give us shuffling slots for pins that are best routed southward.\nComponents And Placement\nHaving 1206 resistors on such a module is a double-edged sword. On one hand, given the adjustability, you definitely want resistors that youd be able to replace easily, so 0402 is not a great option. However, 1206 can actually be harder to replace with a soldering iron, since you need to heat up both sides. The writing is more readable on 1206, no doubt, and its also nice that this module is optimized by size. Still, for the sake of routability, I will start by replacing the LEDs and LED resistors with 0603 components  those are resistors you will not be expected to replace, anyway.\nAlso, I have a hunch that a few components need to be moved around. First one is the RProg, no doubt  its in the way of the switching path, going right under the SW polygon. Then, I will rotate the Rsense resistor so that its oriented vertically  it feels like that should make the VIN track less awkward, and show whether theres any space to be freed on the left.\nResistors replaced, a few components moved, and heres where the fun begins. The IGATE track is specifically designated in the datasheet as pretty sensitive, to the point the PDF talks about leakage from this track to the other tracks  it is a FET gate driver output, after all. Having it snake all around power tracks feels uncomfortable Id like to refactor these FETs a bit, and see if I can make the IGATE track a bit more straightforward, perhaps also make the space usage on the left more optimized. While doing that, I will be shuffling pins between the castellated edges every now and then.\nAfter a bit of shuffling and component rerouting, it felt like I wasnt getting anywhere. It was time to try and reconstruct the circuit in the way it could make sense, prioritizing the power path and starting with it. For that, I pulled out both FETs, current sense resistor and the feedback divider out of the circuit, and tried rearranging them until it looked like they would work.\n\n\n\n\n\nFollowing quite a few attempts at placing the components, I had to settle on the last one. I_GATE took quite a detour, though I did route it via-less in the end; VIN and CLN went on the bottom layer to give room to I_GATE (and be able to cross each other), and all the non-sensitive signals went into vias so that they could be routed outside of the switching area. It turned out the pinout is seriously not conducive to a neat layout; I suppose, some chips are just like that. Perhaps, it was that the gate driver only couldve had been located on this particular, so thats why the IGATE pin is on the opposite side of where the FET could be, instead of it, say, being next to V_SYS outputs.\nPost-Redesign Clarity\nIs the board better now? In many ways, yes; in some ways, no. I dont know that its necessarily prettier, if that makes sense, there were certainly things about the boards original state that were seriously nice. The package chosen for the FETs definitely didnt help routing with my I_GATE target in mind, giving no leeway to route things between pins; if I were to change them to DFN8, I could indeed more easily provide a VSYS guard track that the datasheet suggests you use for I_GATE.\nIve also rearranged the pinout quite a bit. That does mean the STATUS/POWER side distinction of the original board no longer works, but now pins dont have to go across the board, cutting GND in half. After looking into the datasheet, I didnt find any use for the CSN pin being broken out, since its just a sense resistor net; that space is now occupied by a GND pin, and theres one less track to route out.\nTheres now a good few GND pins on the board  way more than you might feel like you need; the right header feels particularly empty. If you wanted, you could add a Maxim I2C LiIon fuel gauge onto the board, since theres now enough space in the top right, and quite a few free pins on the right. This would let your UPS-powered device also query the UPSs status, for one. Of course, such things can always be added onto the actual board that the module would mount onto.\nI also removed designators about things that felt too generic  specifically, resistors that only have one possible value and wont need to be replaced, like LED resistors and pullups for mode selection jumpers. All in all, this board is now a little easier to work with, and perhaps, its ground distribution is a little better.\n\n\n\n\nThis modules idea, and both its authors and my implementation are seriously cool! I hope Ive helped make it cooler, if at least in the battery connector department. Both the pre-review and post-review versions are open-source, so you can also base your own castellated module off this board if you desire  its a good reference design for both LTC4040 and also self-made castellated modules. Its only 30 mm x 30 mm, too, so it will be very cheap to get made. I hope my input can make this module all that cooler, and, at this point, I want to make a board around this module  stay tuned!\nAs usual, if you would like a design review for your board, submit a tip to us with [design review] in the title, linking to your board files. KiCad design files strongly preferred, both repository-stored files (GitHub/GitLab/etc) and shady Google Drive/Dropbox/etc .zip links are accepted.", "title": "LTC4040\u3092\u4f7f\u7528\u3057\u305fStamp\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u81ea\u4f5c\u8a2d\u8a08\u6982\u8981", "body": "Linear Technology\u304c\u958b\u767a\u3057\u305fLTC4040\u306f\u3001\u5e38\u66425V\u30c7\u30d0\u30a4\u30b9\u3092\u4f7f\u7528\u53ef\u80fd\u306b\u3059\u308bIC\u3067\u3042\u308b\u3002Lukilukeskywalker\u304c\u30c7\u30b6\u30a4\u30f3\u3057\u305fLTC4040\u57fa\u677f\u306f\u3001LiFePO4\u30b5\u30dd\u30fc\u30c8\u3082\u3042\u308a\u3001Pi HAT\u306a\u3069\u306e\u69d8\u3005\u306a\u7528\u9014\u306b\u6700\u9069\u3002\u30b3\u30cd\u30af\u30bf\u306e\u9078\u629e\u3068\u914d\u7f6e\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8a2d\u7f6e\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3002", "titles": ["LTC4040\u3092\u4f7f\u7528\u3057\u305fStamp\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u81ea\u4f5c\u8a2d\u8a08\u6982\u8981", "LTC4040\u30dc\u30fc\u30c9\u306e\u30d4\u30f3\u914d\u5217\u306e\u6700\u9069\u5316", "LTC4040\u30c7\u30b6\u30a4\u30f3\u306e\u30d0\u30c3\u30c6\u30ea\u30fc\u30b3\u30cd\u30af\u30bf\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306e\u91cd\u8981\u6027", "LTC4040\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u8a2d\u8a08\u5909\u66f4\u3068\u90e8\u54c1\u914d\u7f6e\u306e\u6700\u9069\u5316", "LTC4040\u30dc\u30fc\u30c9\u306e\u518d\u8a2d\u8a08\u3068\u6a5f\u80fd\u5411\u4e0a"]}