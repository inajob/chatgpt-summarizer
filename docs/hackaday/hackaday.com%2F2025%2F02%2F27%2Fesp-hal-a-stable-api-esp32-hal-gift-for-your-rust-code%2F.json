{"pubDate": "2025-02-27T19:30:46", "original_title": "esp-hal, a Stable-API ESP32 HAL Gift For Your Rust Code", "link": "https://hackaday.com/2025/02/27/esp-hal-a-stable-api-esp32-hal-gift-for-your-rust-code/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2015/12/rust.jpg", "original_content": "Looking to write Rust on the ESP32? Youre in luck, a new challenger has entered the scene, looking to help you write code that lasts  [Scott Mabin] and the team from Espressif have brought us the esp-hal 1.0.0-beta. From a personal project to an Espressif-sponsored one to an effort under Espressifs wing, [Scott] tells us about the arduous journey of bringing first-class Rust support to ESP32 chips, Xtensa and RISC-V alike.\nIn particular, esp-hal, with the hal part standing for Hardware Abstraction Layer, focuses on providing you with a stable API to access hardware, making sure your code can remain stable for years to come. For now, you get drivers for GPIO, UART, SPI and I2C, as well as a number of auxiliary features like time and SoC reset, more than enough for a large amount of projects we hackers build with a generic MCU in mind.\nNext stop? WiFi and BLE support, of course, an ESP32 just doesnt feel the same without these two. Rust is a fun and seriously promising language, and its a joy to use! So, if you have a wireless-less project in mind and youre looking for a HAL, try out the esp-hal, it might just be exactly what you need.\nIf youre looking for examples, heres an STM32 touchpad project with Rust firmware, a PIC32 Rust blinky demo, and weve even featured larger projects like this ESP32 open-source (reverse-engineered) WiFi MAC stack being written in Rust. In case you missed it, weve introduced Rust to you a couple of times, even as far as 2015!"}