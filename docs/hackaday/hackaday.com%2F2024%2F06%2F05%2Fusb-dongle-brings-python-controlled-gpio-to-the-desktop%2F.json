{"pubDate": "2024-06-06T05:00:30", "original_title": "USB Dongle Brings Python-Controlled GPIO to the Desktop", "link": "https://hackaday.com/2024/06/05/usb-dongle-brings-python-controlled-gpio-to-the-desktop/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/06/usbgpio.jpg", "original_content": "Microcontroller dev boards are wonderfully useful items, in testament to which most of us maintain an ample collection of the things. But dragging one out to do a simple job can be a pain, what with making sure you have the whole toolchain set up to support the device, not to mention the inevitable need to solder or desolder header pins. Wouldnt it be nice if there was a simple plug-and-play way to add a few bits of GPIO to your desktop or laptop machine?\n[Nick Bild] thinks so, and came up with the USBgpio. The hardware in the dongle is pretty much what youd expect  an Arduino Nano 33 IoT. Yes, you could just bust out a Nano and do this yourself, but [Nick] has done all the heavy lifting already. Eleven of the Nanos IO pins plus 3.3V and ground are broken out to header pins that stick out of the 3D-printed enclosure, and the dongle is powered over the USB cable. [Nick] also built a Python library for the USBgpio, making it easy to whip up a quick program. You just import the library, define the serial port and baud rate, and the library takes care of the rest. The video below shows a quick blinkenlight test app.\nEarth-shattering stuff? Perhaps not; [Nick] admits as much by noting the performance doesnt really dazzle. But thats hardly the point of the project, and if you need a couple of pins of IO on the desktop for a quick tactical project or some early-stage prototyping, USBgpio could be your friend. \n", "title": "USBgpio: \u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u3084\u30e9\u30c3\u30d7\u30c8\u30c3\u30d7\u306bGPIO\u3092\u8ffd\u52a0\u3059\u308b\u7c21\u5358\u306a\u65b9\u6cd5", "body": "USBgpio\u306f\u3001\u7c21\u5358\u306bGPIO\u3092\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u3084\u30e9\u30c3\u30d7\u30c8\u30c3\u30d7\u306b\u8ffd\u52a0\u3067\u304d\u308b\u4fbf\u5229\u306a\u6a5f\u5668\u3002Arduino Nano 33 IoT\u3092\u4f7f\u3044\u3001Python\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u63d0\u4f9b\u3002\u6027\u80fd\u306f\u9ad8\u304f\u306a\u3044\u304c\u3001\u30d7\u30ed\u30c8\u30bf\u30a4\u30d4\u30f3\u30b0\u3084\u5c0f\u898f\u6a21\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u4fbf\u5229\u3002", "titles": ["USBgpio: \u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u3084\u30e9\u30c3\u30d7\u30c8\u30c3\u30d7\u306bGPIO\u3092\u8ffd\u52a0\u3059\u308b\u7c21\u5358\u306a\u65b9\u6cd5", "Arduino Nano 33 IoT\u3092\u4f7f\u7528\u3057\u305fUSBgpio\u306e\u4f5c\u6210\u65b9\u6cd5", "USBgpio: Python\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u305f\u7c21\u5358\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f5c\u6210\u624b\u9806", "DIY\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u4fbf\u5229\u306aUSBgpio: \u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u306b\u7c21\u5358\u306bGPIO\u3092\u8ffd\u52a0", "USBgpio: \u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u74b0\u5883\u3067\u306e\u7c21\u5358\u306a\u30c6\u30af\u30cb\u30ab\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u6700\u9069"]}