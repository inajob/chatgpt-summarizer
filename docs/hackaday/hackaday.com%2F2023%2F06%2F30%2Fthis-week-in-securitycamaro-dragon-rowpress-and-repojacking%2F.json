{"pubDate": "2023-06-30T14:00:13", "original_title": "This Week in Security:Camaro Dragon, RowPress, and RepoJacking", "link": "https://hackaday.com/2023/06/30/this-week-in-securitycamaro-dragon-rowpress-and-repojacking/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/01/darkarts.jpg", "original_content": "Malicious flash drives have come a long ways since the old days of autorun infections. Its not an accident that Microsoft has tightened down the attack surface available of removable media. So how exactly did a malicious flash drive lead to the compromise of a European hospital? Some sophisticated firmware on the drive? A mysterious zero day? Nope, just hidden files, and an executable using the drive name and icon. Some attacker discovered that a user trying to access a flash drive, only to be presented with what looks like the same flash drive icon, will naturally try to access it again, running an .exe in the process.\nThat executable runs a signed Symantec binary, included on the drive, and sideloads an OCX that hijacks the process. From there, the computer is infected, as well as any other flash drives in the machine. Part of the obfuscation technique is an odd chain of executables, executed recursively for a hundred copies. Naturally once the infection has rooted itself in a given machine, it takes commands from a CC server, and sends certain files out to its waiting overlords. Checkpoint Research has attributed this campaign to Camaro Dragon, a name straight from the 80s that refers to a Chinese actor with an emphasis on espionage.\nRowPress\nIt may sound like an exercise, but RowPress is actually the latest DRAM attack, in the same vein as RowHammer. Where RowHammer repeatedly opened and closed a DRAMs activation line to induce errors on a neighboring line, RowPress simply keeps the activation line opened longer than normal. And it works better than RowHammer, surprisingly. And because its a novel technique, it sidesteps a lot of the protections built for Rowhammer and other techniques.\nOne of the interesting observations is that the temperature of system memory makes a difference. Once RAM is over 80 degrees Celsius, most of the RAM tested became significantly more vulnerable to RowPress memory corruption. And while this attack has been demonstrated on real hardware, there isnt a Proof of Concept demonstrating an Elevation of Privilege attack yet. As similar as this is to the Row Hammer attack, its likely that the existing attacks could be adapted. The researchers behind this paper do suggest some mitigation techniques, so future DRAM modules will likely be safer from this particular attack.\nRepoJacking\nWeve talked about RepoJacking in passing before, but this week brings a detailed report on how many GitHub repositories might be vulnerable to this attack. To refresh our memory, RepoJacking is possible when a user or organization makes a name change on GitHub. A user may have started on GitHub using a pseudonym, and made the change to a legal name. GitHub helpfully does a silent redirect, so anything pointing at the old username continues to work.\nThe problem is that those old usernames are not reserved, and are available for new registration. Snag a historic username, recreate the repositories, and suddenly anyone using the old link is pointing at your code. And the work done by Aquasec research suggests that around 3% of the existing GitHub repositories are vulnerable in this way. The solution here is to do what I did way back in 2016 when I changed my GitHub username, and immediate register the old username as a placeholder account.\nGitHub is aware of this problem, and has made some attempts to protect popular accounts against this issue. Unfortunately those attempts are woefully inadequate, and the vast majority of repositories dont trigger the safeguards. And the consequences can be nasty. Just consider what could happen if a popular project was repojacked, and the install script was tampered with.\nFake Repositories\nSpeaking of malicious GitHub repositories, researchers at VulnCheck discovered a repo containing a Signal 0-day. Except that 0-day was actually a python malware dropper. While the code itself wasnt particularly hard to recognize as sketchy, quite a bit of care seems to have been given to constructing a fake organization to give the malware an aura of legitimacy. High Sierra Cyber Security is a fake organization, and fake accounts borrowing names and pictures from real researchers have been set up as employees of the fake firm.\nThis campaign is very reminiscent of the North Korean approach, of sending similar fake research to other researchers. So far theres no verifiable link between the two campaigns. Regardless, watch out for this particular sting.\nBackup Ransoms You\nAn MDSec research team set their sights on ArcServe UDP, a commercial backup solution. Very quickly it became apparent that this solution had some problems, namely a trivial authentication bypass. The authentication flow sends a URL to the authenticating client thats used for authentication. That URL can be modified in the browser, leading to a Man-in-the-Middle attack against the authentication process. One bit of information that can be captured this way is an authUUID for the authentication account. And since theres a validateUserByUuid() method, its an instant admin account compromise.\nFrom there, its possible to request the encrypted account password. And note, the password is only encrypted, not hashed. And it uses a static, universal encryption process and seed. So, MDSec wrote a decrypter in just a few lines of code, allowing the admin password to be extracted in plaintext. Its not great, particularly if youre relying on an ArcServe backup for Ransomware protection, since an attack can easily include the backup itself. A patch to fix these issues was released on the 27th, without crediting MDSec for the research.\nBits and bytes\nArbitrary file delete is quite effective for denial of service, but its not particularly usable for more interesting attacks, right? Well, Zero Day Initiative has some interesting work on that point. The setup here is an underprivileged user on a Windows machine, that has managed to pull off an arbitrary folder delete. The rest of the story is that the Config.MSI folder can be deleted and recreated while another process is attempting and then failing a program install. By creating a new version of that folder, the system rollback state can be overwritten, leading to escalation of privilege upon the installer attempting to undo installation. Clever!\nThe Junos OS had a Denial of Service issue, where a Border Gateway Protocol update could cause BGP session flaps. Whats interesting is that this issue has been observed in the real world. BGP is a particularly interest protocol, since it does so much unseen heavy lifting to keep the Internet working. This sort of flaw could also be used in a bigger BGP attack, where Internet traffic is intentionally mis-routed.\nAnd finally, that Barracuda flaw that has been in play since October 2022 gets an in-depth treatment from Mandiant. This document contains good Indicators of Compromise, as well as additional detection rules for Snort and Suricata. The scariest part of this whole story is the six months the vulnerability was being used in targeted attacks before it was discovered and patched.", "title": "\u60aa\u610f\u306e\u3042\u308b\u30d5\u30e9\u30c3\u30b7\u30e5\u30c9\u30e9\u30a4\u30d6\u304c\u30e8\u30fc\u30ed\u30c3\u30d1\u306e\u75c5\u9662\u3092\u4fb5\u5bb3\u3057\u305f", "body": "\u60aa\u610f\u306e\u3042\u308b\u30d5\u30e9\u30c3\u30b7\u30e5\u30c9\u30e9\u30a4\u30d6\u304c\u30e8\u30fc\u30ed\u30c3\u30d1\u306e\u75c5\u9662\u306e\u4fb5\u5bb3\u306b\u3064\u306a\u304c\u3063\u305f\u3002RowPress\u653b\u6483\u306fDRAM\u306e\u5b89\u5168\u3092\u56de\u907f\u3057\u305f\u3002GitHub\u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u3082\u653b\u6483\u306b\u8106\u5f31\u3002Fake Repositories\u3067\u30b9\u30d1\u30a4\u30a6\u30a7\u30a2\u304c\u507d\u88c5\u3055\u308c\u3066\u3044\u305f\u3002ArcServe UDP\u306b\u306f\u8106\u5f31\u6027\u304c\u3042\u308a\u3001\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u304c\u30e9\u30f3\u30b5\u30e0\u30a6\u30a7\u30a2\u306b\u542b\u307e\u308c\u308b\u53ef\u80fd\u6027\u3082\u3002\u4efb\u610f\u306e\u30d5\u30a9\u30eb\u30c0\u524a\u9664\u3067\u7279\u6a29\u6607\u683c\u653b\u6483\u304c\u53ef\u80fd\u3002Junos OS\u306eBGP\u3082\u653b\u6483\u3055\u308c\u308b\u30ea\u30b9\u30af\u304c\u3042\u308b\u3002Barracuda\u306e\u8106\u5f31\u6027\u306f\u9577\u671f\u9593\u60aa\u7528\u3055\u308c\u305f\u3002", "titles": ["\u60aa\u610f\u306e\u3042\u308b\u30d5\u30e9\u30c3\u30b7\u30e5\u30c9\u30e9\u30a4\u30d6\u304c\u30e8\u30fc\u30ed\u30c3\u30d1\u306e\u75c5\u9662\u3092\u4fb5\u5bb3\u3057\u305f", "RowPress\uff1a\u65b0\u3057\u3044DRAM\u653b\u6483\u624b\u6cd5", "GitHub\u30ea\u30dd\u30b8\u30c8\u30ea\u304cRepoJacking\u306b\u8106\u5f31", "\u507d\u306eGitHub\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u6ce8\u610f", "ArcServe UDP\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u304c\u30e9\u30f3\u30b5\u30e0\u30a6\u30a7\u30a2\u3092\u5f15\u304d\u8d77\u3053\u3059\u53ef\u80fd\u6027\u304c\u3042\u308b"]}