{"pubDate": "2024-11-12T15:00:30", "original_title": "Ubiquitous Successful Bus: Version 3", "link": "https://hackaday.com/2024/11/12/ubiquitous-successful-bus-version-3/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/04/usb-featured.jpg", "original_content": "USB 2 is the USB we all know and love. But about ten years ago, USB got an upgrade: USB 3.0. And its a lot faster. It started off ten times the speed of USB 2, with 5 Gbps, and later got 20 Gbps and 40 Gbps revisions. How does that work, and how do you hack on it? Well, for a start, its very different from USB 2, and the hacking differs in many important ways.\nIn fact, USB 3 is an entirely separate interface from USB 2, and it does not depend on USB 2 in any way whatsoever  some people think that USB 3 negotiation happens through USB 2, but thats a complete myth. USB 2 and USB 3 are electrically, physically, and logically distinct interfaces. Except for the fact that USB 3 is backwards compatible with USB 2, they are simply entirely different.\nThis also means that every USB-A port with USB 3 capabilities (typically blue, but not always) carries two interfaces; indeed, if you want, you can split a typical USB 3 port into a USB 3-only USB-A port and a USB 2-only USB-A port. USB 3-only ports are not legal per USB 3 standard, youre expected to keep USB 2 there, but only for user convenience; you can split it with a hub and get, like, three extra USB 2 branches for your own use. Even if its forbidden, it works flawlessly  its what Im currently using to connect my mouse to my laptop as Im typing this!\nNot to say that USB 3 is all easy to work with  theres a fair bit of complexity.\n\nFor A More Civilized Age\nUSB 3 is fully differential, and full duplex. Its still point-to-point, but unlike USB 2 with its pseudodifferential half-duplex transmitters, there are two differential pairs  one RX, one TX. Its like UART: TX on one end connects to RX on the other end, RX connects to TX, so the two pairs have to be crossed over, typically, inside the cable  for instance, high-speed USB-C cables have the USB 3-intended pairs crossed-over by default! Oh, and you have to put series capacitors on each end, at each TX output.\nBy [Unconventional2], CC BY-SA 4.0In this way, USB 3 physical layer is just like PCIe; in fact, it can be done using basically the same hardware inside the chip! The routing requirements are tougher than USB 2, so you really want to make sure the tracks are impedance-matched, and use a four-layer PCB instead of a two-layer one. Wondering about routing USB 3? Refer to my guide on routing PCIe, keeping the above restrictions in mind. Heres a bonus  unlike USB 2, you can flip the pair polarity for ease of routing!\nDevice detection isnt done with resistors  instead, the USB 3 peripheral produces regular pulses on the TX pair, known as LPFS mode, and the peripheral on the other end listens to the RX pair for these pulses. Thats also how polarity flips get compensated for.\nThere are no resistors to add, though if you want to connect different USB 3 devices on your board, you might need to take care of some common mode level matching every now and then, like niconico shows us in detail in the extensive readme for their wonderful PCB housing a USB 2  USB 3 transaction translator.\nJust like PCIe, youre not expected to handle USB 3 yourself. Unlike USB 2, you cant quite hand-wire it either  there are products of Eastern manufacture that do, and the failures are quite prominent. If you are shopping for USB 3 hubs and find one with a captive cable, be careful  it might be wired in a lax way, neglecting USB 3 requirements, and you wont be able to fix it without buying a new hub. Better stick to USB 3 hubs equipped with microUSB3\u00a0 and USB-C ports!\nIf you want your links to work guaranteed, dont hand-wire them, rather, use impedance-matched traces on your PCB as much as possible, PCB track quality really matters here, and could easily limit your speed; even big companies might screw it up!\nFor instance, [WifiCable] has tinkered on a laptop with USB 3 ports limited to 5 Gbps mode by a chipset setting, and once the setting was unlocked, the ports would negotiate 10 Gbps mode, but had constant stability issues. Ive also seen Dell route a USB 3 link over an FPC, only to get stability issues with certain kinds of hubs.\nThe Three Versions\nYou might have heard of the USB 3 naming shenanigans, with like fifteen different names and logos used to refer to different USB3 versions  like USB 3.0 USB 3.1, USB 3.1 Gen 2, USB 3.2, and so on. I am pleased to inform you there are only three versions  the dozen different names and logos are duplicates of each other, a marketing strategy that confused people more than it helped, nothing more. If you want to learn more about how it came, you can read here, but lets be fair, you likely dont need to know that.\nThese are as big as they look, and havent really caught on. by [Anil \u00d6ztas], CC BY-SA 4.0 There are only three USB 3 versions as far as cold hard hacking is concerned  you can refer to them as 5 Gbps, 10 Gbps, and 20 Gbps. The 10G bps is just 5 Gbps but overclocked in a few different ways. The 20 Gbps version requires USB-C, and, to simplify it, is like two USB 3 links ganged together. You cant just put two links together to get 20 Gbps mode, though  it does require a different USB 3 peripheral, and it doesnt work like two USB3 links, even though it has backwards compatibility.\nAs for matters more physical, theres four different connectors you will see USB 3 on  USB-A, USB-B, microUSB 3, and USB-C, each of them getting extra two pairs of pins, and, for the first three, an extra GND pin. This GND line helps provide a more stable ground reference, is perhaps not as much encumbered by the ground current, and with the GND pin placed between the two pairs, it helps prevent crosstalk. USB-A is used on hosts, USB-B and microUSB3 are mainstays on devices, and USB-C, in its universality, can be used everywhere.\nremember, microUSB3 is backwards compatible with microUSB cables! By [William.wl.li], CC BY-SA 4.0On some devices of Eastern manufacture, in the dark days before USB-C, you might have seen USB-A used as a device port, and the devices would come bundled with the forbidden USB A-to-A cable. MicroUSB3 has the reputation for being finicky, and USB-B 3 is quite bulky, to the point where not all devices could even afford the added height. If youre in a pinch and you need a USB 3 device port, you can still use USB-A  people will call it cursed, but you might as well wear this badge proudly.\nNowadays, if USB-C isnt an option because you cant be bothered to find a mux, a device with microUSB3 would be my second choice. The trick is to buy a few USB-C to microUSB3 cables on Aliexpress. I swear by them, and if you have some microUSB3 devices at home, you should grab two or three cables like that and never worry about microUSB3 again. Not that the forbidden A-A cable is hard to find nowadays, either!\nLast thing to mention is, you might see USB 3 cables and sockets in an initially unexpected place  carrying a PCIe x1 link, again, in hardware of Eastern design. USB 3 cables are only used there for the extra lines: USB 2 pins carry REFCLK, and the two high-speed pairs carry, DRAIN typically carries GND, and the USB2 VBUS and GND tend to carry two PCIe link management signals.\nThis is an unspoken standard across Eastern vendors of many PCIe accessories  you might see slight pinout variations, but nothing too major. Honestly, I respect that a lot, Ive recommended it to my hardware hacker friends as a way to expose PCIe, and its something that I believe is a decent option, especially given the abundance of hardware that uses USB 3 connectors for PCIe. Is it standards compliant? No. Could someone call it cursed? Yes. Is it a viable way to carry a PCIe x1 link? Also yes. Is it easy to implement? Yes, again. Is it cheap? Without a doubt. If you really need x4 and guaranteed high speeds, you might want to go for Oculink, but until then, the abusing USB 3 hardware will do just fine.\nTheres more I could say about USB 3, but for now, I hope this is more than sufficient for you to wade through USB 3 waters, for whatever hacks and projects you might be exploring. Got questions, corrections, or advice? Ever make something cool with USB 3? Tell us all in the comments down\u00a0 below!", "title": "- USB 3.0\u306e\u9032\u5316\u3068\u305d\u306e\u901f\u5ea6\u306e\u79d8\u5bc6", "body": "USB 3.0\u306fUSB 2.0\u3088\u308a\u9065\u304b\u306b\u901f\u304f\u3001\u7570\u306a\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3042\u308b\u3002\u63a5\u7d9a\u306b\u306f\u8907\u96d1\u3055\u304c\u4f34\u3046\u304c\u3001\u591a\u69d8\u306a\u6a5f\u80fd\u304c\u3042\u308b\u3002", "titles": ["- USB 3.0\u306e\u9032\u5316\u3068\u305d\u306e\u901f\u5ea6\u306e\u79d8\u5bc6", "- USB 3\u3068USB 2\u306e\u9055\u3044\uff1a\u4e92\u63db\u6027\u3068\u63a5\u7d9a\u65b9\u6cd5", "- USB 3\u30dd\u30fc\u30c8\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3068\u8a2d\u8a08\u306e\u30dd\u30a4\u30f3\u30c8", "- USB 3\u306e\u7570\u306a\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u30b3\u30cd\u30af\u30bf\u306e\u60c5\u5831", "- \u96fb\u5b50\u5de5\u4f5c\u306b\u304a\u3051\u308bUSB 3\u30cf\u30c3\u30af\u306e\u30d2\u30f3\u30c8\u3068\u6ce8\u610f\u70b9"]}