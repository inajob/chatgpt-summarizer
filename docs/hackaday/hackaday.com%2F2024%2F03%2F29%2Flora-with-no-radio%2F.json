{"pubDate": "2024-03-29T08:00:51", "original_title": "LoRA, With No Radio", "link": "https://hackaday.com/2024/03/29/lora-with-no-radio/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/03/lora-mcu-featured.jpg", "youtube": "https://www.youtube.com/watch?v=eIdHBDSQHyw", "original_content": "A LoRa project has traditionally required a dedicated radio module, because its a commercially licenced protocol. But as the way it works has been progressively reverse engineered, its become ever more possible to produce a LoRA radio for yourself. But what about a LoRA radio without a radio at all? [CNLohr] has managed just that, by driving a microcontroller pin and relying on one of its harmonics to provide enough RF to be received by a LoRA gateway.\nThe video below the break goes into the process in great detail, revealing some of the tricks. Undersampling to create intentional aliasing for example allows subharmonic peaks to be produced in unexpected places. Most of the development is performed on Espressif microcontrollers, but as the code is optimised it becomes possible to use it on much more modest silicon. The dirt cheap CH32V003 RISC-V microcontroller for example can be a LoRA transmitter able to talk to a gateway at a range of hundreds of metres with the CH32 and 2.5km with the ESP32. The code can be found in this GitHub repository.\nThe CH32 cant receive of course, and it relies on barfing harmonics all over the spectrum to work. But on the other hand its total RF output is so tiny that were guessing a filter for the LoRA band might even make it almost legal. Hes got a little way to go before beating the record though.\n\n"}