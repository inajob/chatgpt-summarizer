{"pubDate": "2024-03-24T02:00:27", "original_title": "Clever E-Ink Driver Does 32 Levels of Grey, Avoids Update Flicker, And More", "link": "https://hackaday.com/2024/03/23/clever-e-ink-driver-does-32-levels-of-grey-avoids-update-flicker-and-more/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/03/badger2040_dama_greyscale-featured.jpg", "original_content": "Theres a lot to like about E-Ink displays, and you might be about to like them even more with [antirez]s MicroPython driver for the Badger 2040 (or any display based on the UC8151 / IL0373) because it brings all kinds of useful features to your next project.\nE-Ink displays are great. They are high contrast, daylight-readable, and require zero power to maintain a displayed image. But a few things come with the territory: displays have slow refresh rates compared to other display types, expect flickering during screen changes, and the displays are monochrome. [Antirez]s new driver not only provides a MicroPython interface but goes in some fantastic directions that challenge those usual drawbacks.\nProbably the most striking is the ability to display greyscale images without relying on dithering, which means the results avoid the charmingly gritty\u00a0look of old-school dithering. Dithering has its place, but its not always the best choice, so options are great.\nSimilarly, display flicker may be a small price to pay for some, but if the obvious flicker is too boorish and crude-looking one can use an anti-flicker refresh mode that greatly limits flickering at the cost of update speed. Over time some image ghosting will accumulate which necessitates an occasional whole-screen refresh, but the effect is overall much nicer when updating something like a clock face.\nHow is this all done? It turns out that the controller chips for these displays are highly configurable, and its possible to do much more than simply drive the display in known-good and completely approved modes. Its also entirely possible to permanently damage ones display by doing so. Part of what makes [antirez]s work so appealing is that he has already done the work finding workable configurations.\nHis driver is designed using computed LUTs (look-up tables) that make using and exploring alternative refresh modes easy and efficient, invaluable for exploring the capabilities of a patented, poorly documented technology like E-Paper displays.\nWeve seen the Badger 2040 E-Ink display in a teapot timer and a custom macropad, and [antirez]s uc8151_micropython project is a fantastic step forward. And dont miss another of [antirez]s clever microcontroller hacks: playing audio without a DAC."}