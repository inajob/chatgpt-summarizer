{"pubDate": "2025-06-13T17:00:48", "original_title": "Attack Of The Beepy Clones", "link": "https://hackaday.com/2025/06/13/attack-of-the-beepy-clones/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/05/beepclones_feat.jpg", "original_content": "In the Blackberry-keyboard-based project lineage story last week, I covered how a series of open-source projects turned into Beepy, a cool Linux PDA with a lively community. To me, its yet another demonstration of power that open-source holds, and more importantly, it shows how even a small pet project of yours could cause big moves in the hardware world, provided you publish it  just ask [JoeN], [WoodWorkeR] and [arturo182].\nThe journey didnt end there. For all its benefits, Beepy had some flaws to take care of, some board-killing flaws, even. Its feature package also left things to be desired. The 5 V boost regulator was never intended for 4.7 V input it gets when charger is connected, and would occasionally cook itself. A charging current resistor was undersized, leading people to either bodge resistors onto their Beepy boards, or have their battery charge for 30 hours until full. A power path diode was undersized, too, and has burned out on more than a few devices.\nBeepy never made it beyond v1. If I had to guess, partially because of BB Q20 keyboard sourcing troubles, but also definitely some sort of loss of interest. Which is a shame, as the plans v1.5 of the hardware were pretty exciting. In the meantime, other players decided to take up the mantle  heres a tale of three projects.\n\nImproved, Colorful, Closed\nI like to talk about all sides of open-source hardware, good and bad. Well start with the bad here. Sometimes, youll publish a project under an open license that requires other people to share their work if its based on your project files. Then, someone takes your files, makes none to minimal changes, closes the sources, maybe even completely removes the attribution, and starts selling them. Thats the story of Colorberry.\nLeft: OG Beepy, right: Colorberry; spot 10 differences. If one of them is stripped of all attribution, you get bonus points.\nIt was one of the first Beepy derivatives  seemingly fixing two of the three Beepy bugs, and adding support for a color display from JDI. Unfortunately, it also removed some important elements: namely the attribution to the Beepy on product or project pages  and closed-sourced the files.\nBeepys PCB is licensed under a reciprocal (copyleft) license, which means that derivative product designers are supposed to share any changes they make. Without access to the source, its difficult to confirm that Colorberry really fixed the upstream Beepy bugs. It also makes it harder to diagnose and repair the hardware, and limits the chances the Colorberry would live on should its creator step away from the project.\nUnfortunately, the problems dont stop there. The code to drive the color screen is heavily based upon a driver produced by people in the Beepy community. Like the Beepy hardware, the license for the driver (GPL) requires that changes made to the code be made public. But when Alex, the Colorberry developer, was asked about publishing the code for this driver, he responded that it would happen once the driver is ready. A year later, the new story is apparently that he will release the sources once his personal stock of color screens runs out.\nBecause the driver is only published as (non-stripped) binaries on GitHub, it needs to be recompiled and republished by Alex with every Linux kernel update or distro that Colorberry could be used with. Its also markedly harder to install (to the point people had to concoct multi-step install scripts), and I have it on good authority that the driver contains a bug that will actually reduce the lifetime of the display. But without the source for the driver, the community cant fix it.\nI confirmed this later on, having looked at the binary files myself  indeed, even the typos from someone elses open-source driver are still present in Colorberry driver code.\nFrom what Ive seen, the Beepy open-source design has been a crucial factor for its community to flourish and keep thriving even two years later. Colorberrys puzzling closed-source decisions just dont add up to the same value, and I gather thats a big part of why the project didnt gain more traction.\nThe Colorberry isnt the only Beepy clone to keep the hardware source to itself. The PiBerry from CarbonComputers doesnt fix the bugs from the original handheld, unfortunately, but it does bring a higher resolution color display to the party. It also doesnt try to erase its lineage, with both the PCB silkscreen and the documentation referencing the fact that its based on the Beepy. Even still, the board design files arent included in the PiBerry repository.\nWhats interesting in this case is that CarbonComputers later made a newer PiBerry version in same form-factor, aimed at assembly from more off-the-shelf components, and that version does have its KiCad files published. Im willing to give the creators the benefit of the doubt here, and say that not including the source files for the previous versions of the hardware might simply be an omission on their part and not intentional.\nThese two werent the only projects coming to life because of Beepys success  at times, if you get someone inspired enough with a project of yours, they could end up building an entire lineup of gadgets. Such is the case of Hackberry Pi, a project coming from a hacker named Zitao.\nThe Hackberry Family\nEver wanted the power of a Pi 5 in a portable package? Thats where you reach for the Hackberry Pi. The CM5 version is way sleeker than this one, I gotta say.\nYou mightve seen the Hackberry Pi around  its a Beepy-like device with a 720720 DPI screen derived from Adafruits Hyperpixel design and a Q20 keyboard. A number of parts in the first Pi Zero-based versions of the Hackberry Pi were visibly derived from the Beepy design. However, at least the later versions have been re-drawn from scratch in EasyEDA, with a number of diverging design paths, and Zitao has been prolific in building newer and generally better versions of the platform.\nFrom a Pi Zero-based version with Nokia batteries, to Pi 5-based device powered by 18650s, the Hackberry has went through quite a journey. Just a couple days ago from the time of this writing, the Compute Module-based version of the Hackberry Pi has become available, and its been selling like hotcakes.\nZitaos hardware is inspiring in a few ways. For instance, the ways in which these devices avoid driver installation requirements, with keyboard connected over USB instead of I2C, powerbank chips with LED battery level display instead of the Beepys RP2040, and it goes even to the point of soldering a small Bluetooth receiver module onto the board to drive the onboard speakers from the Pi running the show. Its a kludge, but at the same time, its hard to argue with things that work well in practice!\nHackberry Pi devices are also closed source, but at least schematics have been made available. This is good enough to spot most bugs, and those schematics have already been useful for people pointing out poor design decisions in the first versions. Of course, its still against the spirit of open-source and in particular the project that made Hackberry Pi possible in the first place  but at least its a step in the right direction.\nOur Radically Open Beepy Clone\nAs you might have guessed, I dont like closed-source devices. In particular I dislike devices that benefit from an open-source ecosystem and then burn the goodwill provided, as if to sterilize and salt the land that would otherwise serve other projects in the future.\nTwo v1 Blepis units: one assembled with a Sharp display, another with a cheaper color SPI one.\nOver the last half a year, Ive had the privilege of working on the Blepis, a Beepy successor built by a hacker collective Im a part of, called HackMods. Weve designed, planned out, and assembled the first versions of these boards together, with the goal of having a fleet of Linux PDAs.\nMade by hackers for hackers, its an experiment in just how far you can push the Beepy design, and were keeping things as open-source as we found them  arguably even more so! In particular, even our case design is in FreeCAD and open-source, with .FCstd files included.\nFirst major improvement we made was in screen support. Sharp Memory screens can be expensive and are often out of stock for months, and JDI screens are even more expensive than that, often the only options are overpriced eBay listings. This is somewhat okay for a one-off, but it is very sub-optimal if youre building a fleet of a dozen hacker PDAs for you and your friends.\nThats why weve added support for the commonly available 3.2 320240 18-pin SPI color screens in addition to Sharp and JDI screens. We even have touchscreen controller support for the 18-pin panels that come with a touch layer, and support backlight on displays which have it. Of course, the known Beepy bugs are fixed as well. Our 5 V boost is operating within spec, and we have a switch-mode battery charger expected to give off barely any heat at all while providing a fair bit of charging current.\nThe PCB, done mainly by [LinaLinn] and me, with others contributing to it in various ways. It would probably be easier to talk about what we didnt add. Thankfully, for those things, we have an expansion connector!What else? Just for a start, we added an RTC, a vibromotor driver, and an onboard buzzer, not to mention things like QWIIC connectors for I2C and USB.\nThe Beepy didnt have any onboard USB peripherals  you were expected to make use of the Pi Zeros microUSB port. But weve added a whole USB ecosystem onto all the free space on the board  including a microSD reader, a slanted USB-C slot letting you connect a small USB-C 3.5 mm dongle soundcard for music playback (or other devices), and a USB hub chip to tie it all together. Apart from that, we support host mode on the bottom charging USB-C port, too  complete with 5 V power output.\nSome of these features, like power output on USB-C port, are not supported by the firmware yet, But weve gotten pretty familiar with Beepy firmware while building v1, so, adding firmware support for those features is not expected that complicated.\nOur expansion connector is also unparalleled when it comes to interfaces we expose. A single-row 23-pin header has 3.3 V, 5 V and VBAT power rails with over-current and backflow protection, plus I2C, SPI, UART SDIO, PWM, and I2S, all ESD-protected.\nWeve already had a LoRa expansion module contributed by someone from the Beepy community, and one of our members has designed a DECT board. We plan on doing doing boards aimed at general-purpose hacking  BIOS chip flashing soon. If you ever wanted a PDA with a powerful expansion header for hardware hacking purposes, this is the design for you.\nThe Gift Of Giving Back\nIf youre looking for a Linux PDA board, I hope you can appreciate the Blepis hardware design we bring to you, only possible because of a string of open-source projects before it. Our design files and driver/firmware sources are all on GitHub and GitLab, with a summary available on [Michael]s BBKB ecosystem website.\nBlepis is meant to work with JLCPCB PCBA, and we have a GitLab integration for exporting the project files  all the JLC part numbers are input into the schematics, so just upload the files and get a batch of motherboards delivered to your doorstep. To complete it, get a Pi Zero, a battery, a Blackberry Q20 keyboard, a display out of the list of supported ones, print the shell (v2-compatible shell coming soon), and off you go.\nSeeing entirely new projects happen, each cooler and more advanced than the previous one, all because people kept publishing their code and PCB files, and then, getting to build a dream device for me and my friends thanks to someone elses work  these kinds of experiences are what radicalized me in favour of being radically pro-open-source. I see open-source philosophy live and thrive through dreams of hackers and barrels of viral licenses, through publishing despite imperfections, and building off each others dreams to turn the tide of tomorrow. I hope you get to experience it, too.", "title": "- \u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u529b\uff1aBeepy\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u6210\u529f\u30b9\u30c8\u30fc\u30ea\u30fc", "body": "Beepy\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u5f8c\u7d99Blepis\u306f\u3001\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u7cbe\u795e\u3067\u9032\u5316\u4e2d\u3002\u65b0\u6a5f\u80fd\u3084\u8a2d\u8a08\u6539\u5584\u3092\u52a0\u3048\u3001\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306b\u8ca2\u732e\u3002", "titles": ["- \u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u529b\uff1aBeepy\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u6210\u529f\u30b9\u30c8\u30fc\u30ea\u30fc", "- Beepy\u306e\u8ab2\u984c\u3068\u9032\u5316\uff1a\u6539\u826f\u3055\u308c\u305f\u5f8c\u7d99\u6a5fBlepis\u306e\u767b\u5834", "- Colorberry\u3068\u305d\u306e\u30af\u30ed\u30fc\u30ba\u30c9\u30bd\u30fc\u30b9\u306e\u554f\u984c\u70b9\uff1a\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u7cbe\u795e\u3092\u5931\u3046", "- Hackberry Pi\uff1aBeepy\u304b\u3089\u6d3e\u751f\u3057\u305f\u9769\u65b0\u7684\u306a\u30dd\u30fc\u30bf\u30d6\u30eb\u30c7\u30d0\u30a4\u30b9", "- \u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u91cd\u8981\u6027\u3068Blepis\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u610f\u7fa9"]}