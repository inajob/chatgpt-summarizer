{"pubDate": "2024-01-06T21:00:34", "original_title": "A Look Inside the Smallest Possible PNG File", "link": "https://hackaday.com/2024/01/06/a-look-inside-the-smallest-possible-png-file/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/01/png.png", "original_content": "Whats inside a PNG file? Graphics, sure. But how is that graphic encoded? [Evan Hahn] shows you what goes into a single black pixel inside a 67-byte file. Why so many bytes? Well, that is exactly what the post is about.\nYou had to guess there is some overhead, right? There is an 8-byte header. Next up is a 25-byte metadata block. That single pixel takes 22 bytes, and then there is a 12-byte marker for the end of file. Turns out, you could put a bit more in the file, and would still take 67 bytes. The metadata is in a chunk  a block of data with a type, length, and CRC. Thats why it takes 25 bytes to store the dimensions of the image. A chunk has to be at least 12 bytes long. The metadata includes the image dimensions, the bit depth, and so on.\nThe next chunk, of course, is the data. The data is compressed, but in the case of one pixel, compression is a misnomer. There will be ten data bytes in the data chunk. That doesnt include the 12 bytes of the chunk overhead so that one pixel takes a whopping 22 bytes.\nThe end of file marker is another chunk with no data. The total? 67 bytes. However, you can add more than one bit and still wind up with 67 bytes. For all the details, check out the post.\nLuckily, it is easy to pronounce PNG. You can even use the format for circuit simulation.", "title": "PNG\u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u3069\u3093\u306a\u60c5\u5831\u304c\u542b\u307e\u308c\u308b\u306e\u304b\uff1f", "body": "PNG\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u3001\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u304c\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u3066\u3044\u308b\u30021\u3064\u306e\u9ed2\u3044\u30d4\u30af\u30bb\u30eb\u306b\u306f\u300167\u30d0\u30a4\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3002\u30d8\u30c3\u30c0\u30fc\u3001\u30e1\u30bf\u30c7\u30fc\u30bf\u3001\u30d4\u30af\u30bb\u30eb\u30c7\u30fc\u30bf\u3001\u30d5\u30a1\u30a4\u30eb\u7d42\u4e86\u306e\u30de\u30fc\u30ab\u30fc\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u3002\u30c7\u30fc\u30bf\u306f\u5727\u7e2e\u3055\u308c\u3066\u3044\u308b\u304c\u30011\u3064\u306e\u30d4\u30af\u30bb\u30eb\u306b\u306f22\u30d0\u30a4\u30c8\u306e\u30c7\u30fc\u30bf\u304c\u542b\u307e\u308c\u308b\u3002\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\u306f67\u30d0\u30a4\u30c8\u3002PNG\u306f\u7c21\u5358\u306b\u767a\u97f3\u3067\u304d\u308b\u3002", "titles": ["PNG\u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u3069\u3093\u306a\u60c5\u5831\u304c\u542b\u307e\u308c\u308b\u306e\u304b\uff1f", "PNG\u30d5\u30a1\u30a4\u30eb\u306e\u69cb\u9020\u306b\u3064\u3044\u3066\u306e\u8a73\u7d30", "1\u30d4\u30af\u30bb\u30eb\u304c\u5360\u3081\u308bPNG\u30d5\u30a1\u30a4\u30eb\u306e\u30b5\u30a4\u30ba\u306b\u3064\u3044\u3066", "PNG\u30d5\u30a1\u30a4\u30eb\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u69cb\u9020\u3068\u30b5\u30a4\u30ba", "PNG\u30d5\u30a1\u30a4\u30eb\u306e\u30c7\u30fc\u30bf\u5727\u7e2e\u306b\u3064\u3044\u3066\u306e\u8003\u5bdf"]}