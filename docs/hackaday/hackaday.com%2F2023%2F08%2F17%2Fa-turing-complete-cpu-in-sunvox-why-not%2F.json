{"pubDate": "2023-08-17T15:30:00", "original_title": "A Turing-Complete CPU In Sunvox? Why not!", "link": "https://hackaday.com/2023/08/17/a-turing-complete-cpu-in-sunvox-why-not/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/08/Snap-2023-08-15-20-01-59-featured.png", "original_content": "Day-time software engineer and part-time musician, [Logickin,] knows a thing or two about programming the SunVox modular synthesiser and tracker software. Whilst the software is normally used for creating music and sound effects, they decided to really push it, and create the VOXCOM-1610, a functional turning-complete CPU inside SunVox, just for fun.\nFor those who havent come across SunVox before now, this software is a highly programmable visual environment for building up custom synthesisers, piecing signals together to create rhythms \u2014 thats the tracker bit \u2014 as well as interfacing to input devices such as MIDI and many others. It does look like a lot of fun, but just like CPUs created in Minecraft, just because, this seems to be the first time someone has built one inside this particular music app. The VOXCOM 1610 is a fully functional 10 Hz, 16-bit computer. It boasts 2KB of ROM, 256 bytes of RAM (expandable to 128 KB), and 8 general registers for data exchange between components. If you dont fancy manually poking bits into the ROM to enter your software, then youre in luck as [Logickin] has provided an assembler (in Java) that should ease the process a lot. The ABI will look very familiar to anyone whos ever touched assembler before, although as youd expect, it is quite light on addressing modes.\nNow, all that is needed is for someone to port Doom to this and well have it all. We think that is unlikely to happen. For those who pay attention, we did see one neat SunVox project in the past, which is certainly eye-catching as well as eardrum-bursting.\nThanks to [elbien] for the tip!"}