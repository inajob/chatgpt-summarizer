{"pubDate": "2024-07-14T17:00:42", "original_title": "Undo Arduino Encryption with an Oscilloscope", "link": "https://hackaday.com/2024/07/14/undo-arduino-encryption-with-an-oscilloscope/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/07/with_delay_02_featured.png", "original_content": "Cryptography aint easy. Seemingly small details like how many times a computationally intensive loop runs can give the game away. [Lord Feistel] gives us a demo of how this could work with nothing more than poorly designed code, a resistor, and an oscilloscope.\nThe hardware side is, as mentioned, really simple. Put a resistor inline with the Arduino and monitor the voltage drop across the resistor with the scope. When the chip is working hard, it consumes more current, and code sections that take longer will show up as longer dips.\nOn the software end, its only a little more complicated.\u00a0 The RSA encryption scheme involves a lot of exponentiation and modulo-taking. Here, [Lord Feistel] is targeting a naive way of computing the exponents quickly, and demonstrates how you can read the exponent straight out the chips power demand.\nImplementing this attack against a real-world RSA algorithm, in the context of the Arduino doing other stuff, will be harder. And we dont know if the algorithm implemented in standard Arduino libraries is smarter than this one. (If you know, let us know in the comments.) But still, this is a cool example of just how simple and straightforward it can be to eavesdrop on bad code.\nIf you only need to bypass encryption instead of breaking it, check out [Lord Feistel]s other tutorial on power glitching that we featured previously. If you havent played around with the hardware side of security, it gets deep pretty quickly, but you can at least dip your toes in the shallow end with what youve got in your closet."}