{"pubDate": "2024-03-22T02:00:19", "original_title": "Weird Things To Do With FPGAs", "link": "https://hackaday.com/2024/03/21/weird-things-to-do-with-fpgas/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2018/07/icebb-e1532970872329.png", "original_content": "Theres an old joke about how can you find the height of a building using a barometer. One of the punchlines is to drop the barometer from the roof and time how long it takes to hit the ground. We wonder if [Alexlao512] had that in mind when he wrote a post about unconventional uses of FPGAs. Granted, he isnt dropping any of them off a roof, but still. The list takes advantage of things we usually try to avoid such as temperature variation, metastability, and the effects of propagation delays.\nFor example, you probably know that hooking up an odd number of inverters into a loop forms an oscillator\u2014the so-called ring oscillator. The post discusses how you can use an oscillator like that to measure propagation delay or even as a strain gauge. If you put pressure on the FPGA chip, the frequency of the ring oscillator will subtly vary.\n\nWhile metastability isnt usually our friend, apparently it is if you are trying to make a truly random number generator as a source of entropy. We also usually frown on depending on subtle process variations between devices. However, you can actually measure those variations to generate a physical fingerprint that can used as a unique ID for a particular device.\nTheres more including using FPGA interconnects as onboard antennas. Very out of the box  or maybe we should say in the package  thinking!\nWe actually talked about the strain gauge thing nearly a decade ago. Need to learn FPGAs? Our boot camp can be your gateway.\nThanks [Patrick] for the tip.", "title": "FPGA\u3092\u4f7f\u7528\u3057\u305f\u5275\u9020\u7684\u306a\u4f7f\u3044\u65b9", "body": "FPGA\u3092\u4f7f\u7528\u3057\u305f\u975e\u4f1d\u7d71\u7684\u306a\u7528\u9014\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\u3002\u4f8b\u3048\u3070\u3001\u30ea\u30f3\u30b0\u767a\u632f\u5668\u3092\u4f7f\u7528\u3057\u3066\u4f1d\u642c\u9045\u5ef6\u3092\u6e2c\u5b9a\u3057\u305f\u308a\u3001FPGA\u30c1\u30c3\u30d7\u306b\u5727\u529b\u3092\u304b\u3051\u308b\u3053\u3068\u3067\u5909\u52d5\u3059\u308b\u5468\u6ce2\u6570\u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\u306a\u3069\u3092\u7d39\u4ecb\u3002\u4ed6\u306b\u3082\u4e0d\u5b89\u5b9a\u6027\u3084\u6e29\u5ea6\u5909\u5316\u306a\u3069\u3092\u5229\u7528\u3057\u305f\u7528\u9014\u306b\u3064\u3044\u3066\u3082\u8a00\u53ca\u3002", "titles": ["FPGA\u3092\u4f7f\u7528\u3057\u305f\u5275\u9020\u7684\u306a\u4f7f\u3044\u65b9", "FPGA\u3092\u4f7f\u7528\u3057\u305f\u7279\u6b8a\u306a\u8a08\u6e2c\u65b9\u6cd5", "FPGA\u3092\u4f7f\u7528\u3057\u305f\u4e71\u6570\u751f\u6210\u5668\u306e\u69cb\u7bc9", "FPGA\u30a4\u30f3\u30bf\u30fc\u30b3\u30cd\u30af\u30c8\u3092\u30a2\u30f3\u30c6\u30ca\u3068\u3057\u3066\u6d3b\u7528", "FPGA\u3092\u6d3b\u7528\u3057\u305f\u4e00\u610f\u306eID\u751f\u6210"]}