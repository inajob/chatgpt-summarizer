{"pubDate": "2024-02-28T18:00:45", "original_title": "Ethernet For Hackers: Equipment Exploration", "link": "https://hackaday.com/2024/02/28/ethernet-for-hackers-equipment-exploration/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/02/ethernet_cable_featured.png", "original_content": "Last time, we talked about the surface-level details of Ethernet. They are fundamental to know for Ethernet hacking, but theyre also easy to pick up from bits and pieces online, or just from wiring up a few computers in your home network. Now, theres also a bunch of equipment and standards that you will want to use with Ethernet  easy to find whether used or new, and typically as easy to work with. Lets give you a few beacons!\nRouters And Switches\nWhenever you see a box with a few Ethernet ports, its either referred to as a router, or a switch, sometimes people will even use the word hub! Fortunately, its simpler than it may seem. A router is a smart device, typically with an OS, that ties two or more networks together  routing packers from one network to another, and typically taking care of things like handing out local IP addresses via DHCP. A switch merely helps Ethernet devices exchange packets between each other on the same level  its typically nowhere near as smart as a router gets. Oftentimes, a home router will contain a switch inside, so that you can plug in multiple of your home devices at once. Thats the main difference  a switch merely transmits packets between Ethernet-connected devices, while a router is a small computer taking care of packet forwarding between networks and possibly including an Ethernet switch on the side.\n\nA typical routers internal structure\nIts easy to find a router for hacking purposes, and weve been reprogramming them for two decades now. Often, they run Linux, and if they dont, they can be coerced. Inside a common router, you get a Linux device, typically with barely any CPU power, RAM or ROM, but you can run fun stuff alright  a file share, some control software for your robot, or maybe a tiny home automation suite.\nTaking the other tack, its easy to build something that fulfills the functions of a router  take a low-power PC, put a Linux OS onto it, set up a DHCP server and packet forwarding script of some sort, and add a switch for anything you might want to network up. If you need a WiFi access point, you can plug in a network card and set up something like hostapd. Or dont  there are also WiFi APs available: a single-purpose device with a single Ethernet port, that tend to be wonderful at what they do, unless you go for the cheapest option possible.\nTheres plenty of hacking potential in Ethernet routers and switches alike. For routers, theres the obvious OS hacking, but even thats not all. For instance, you can use a multi-port router as a switch in a pinch, as long as you disable the smart features like DHCP server and dont plug anything into the WAN port. Once, when I needed a gigabit Ethernet switch and only had a cheap router with gigabit ports, I did just that. Understand these devices, and you will be able to reuse them in a variety of ways. Speaking of reuse  if you have an outdated router, take one apart, and you can get RJ45 (8P8C) jacks, Ethernet transformers (aka magnetics), switch-mode PSU circuits you can reuse, and some nice WiFi antennas in case you need to boost your ESP32s coverage in a pinch.\nAs for switches, here are a few hacks that turn regular switches into managed switches that add extra quality of life features like VLANs, port mirroring, or security features. Weve even covered a hack that lets you tap into the Linux OS powering a particularly fancy switch! Want to build your own Ethernet switch? Weve previously shown you products from a company building hacker-oriented commercial embeddable Ethernet switches, that Im sure you could easily learn from and put your own spin on. The company involved started out as open-source but took down the hardware design file repo at some point after we started covering their products; thankfully, there are forks still available. Plus, switch schematics can be pretty easy to find, and teardowns even more so!\nHave you heard about Ethernet hubs? Hub is generally a synonym for switch these days, but back in the 10 Mbps days, it used to be a different device  a passive way to tie three Ethernet devices into a network using resistors, diodes, or transistors. Every packet is sent to every device, of course, and it only works for low speeds because it makes the connection half-duplex, and the signal strength is weakened, but the upside is that its extremely simple. Ive never encountered a hub in real life, but if youre wondering, Ive found two designs, one using resistors (translated, original) and another using diodes. Both of these designs have three ports  if youre ever in need of a low-speed Ethernet network, this should do in a pinch.\nPower over Ethernet\nSpeaking of things that you can build yourself, powering your devices is undoubtedly a priority. Lets talk about Power over Ethernet, where you will find it, how you can build it on your own, and when you might want to reconsider doing that.\nBy [deavmi], CC BY-SA 4.0PoE (Power over Ethernet) is either one standard or multiple ones, depending on where you look. Theres the well-thought-out PoE standard, used in products of all sorts. Its the one you are likely to know if you encounter PoE on a shelf, and its completely consumer-friendly and wonderful, and typically it will come with a heftier pricetag. Just like USB-PD, PoE does negotiation to check voltages and see if the consumer device is PoE-capable, and it also overlays the voltage on top of the signal  which means you can do Gigabit without worry.\nTheres also the PoE standard where you use two pairs for 100 Mbps and then just put a high-ish DC voltage on two of the remaining pairs. Its charitably referred to as passive PoE, and it is what youre likely to encounter in cheap products. Youd better watch out to ensure that it doesnt blow up your port  theres no negotiation, and usual devices dont take kindly to it. In addition to that, there are a few proprietary standards, like the Mikrotik Gigabit PoE.\nThe 802.3af PoE standard works by superimposing a DC voltage onto the signal, using two possible pair combinations, known as Mode A and Mode B respectively. Theres also a higher power option, which uses all four pairs for higher power devices. Power is only applied to the pairs after PoE negotiation, and negotiation only happens after a compatible device is detected on the other end. 802.3af PoE tends to come with a pricetag, and thats mostly because it has a fair bit more electronics involved, typically even including a small but hefty transformer.\nIf your device doesnt come with PoE and you want to add it the proper way, theres also modules you can buy online and add inline, 802.3af injectors and extractors. It might take a fair minute to find one, but you generally wont go wrong using a 802.3af-compliant PoE module if you want to go the DIY route while sticking to foolproof PoE tech  they make a lot of sense if most of your network already supports 802.3af and its just a few devices that dont. Oh, and of course, its possible to design your own. If you do that, you can even add support for both proper 802.3af and passive PoE!\n\n\n\n\nPassive PoE, the straightforward version, has its spot under the sun and in our toolboxes too. Of course, you better be careful shoving passive PoE-powered cables into places  it can burn out a port on your laptop or Pi, if youre not careful. Nevertheless, if youre fine with 10/100Mbps, have control over the network, and just want to wire up a Raspberry Pi or two, passive PoE is a wonderful way to do it  the cheapest, the simplest, and the most flexible. One classic hacky way to make passive PoE work is simply cutting into Ethernet cables, but if youll be touching the cabling often, remember that this is breakage-prone. If you want to make a passive PoE circuit easy to maintain when your network inevitably needs some tweaking, you can also buy passive PoE injectors and receivers online  and theyll be much, much cheaper too! So, you exchange user error protection for lower cost and greater hackability  sounds like exactly the kind of tradeoff a hacker should know about.\nHeres my own advice for passive PoE, having wired up a couple of small-scale networks with it. You should clearly mark passive PoE cables, because theyre meant to go through a PoE tap (injector) before you plug them into any device  a red sharpie, maybe a piece of red tape, but a sticker that says do not touch if you dont know what youre doing is the best option problem. This is the most important part with passive PoE, and you might be able to guess why I stress it. You might be tempted to add PoE by soldering onto the pads of an Ethernet jack on your devices PCB, but do a multimeter test first  it might be a jack with integrated Ethernet transformer, or there might be resistors connected to the unused pairs.\nAlso, you have to choose your voltage with passive PoE, and you cant just do 5 V. The voltage drop over meters of Ethernet cabling is going to halve this voltage immediately, with barely anything left unless youre powering something really low power. Remember, active PoE uses 48 V for a good reason  as you increase voltage, you decrease current needed to carry the same amount of power. 12 V might be tempting, but 24 V is significantly more advantageous, as long as you dont use cheap DC-DC modules  those will fail you, especially when powering a Raspberry Pi. Last but not least, if you are about to re-crimp cable carrying a passive PoE link, remember to disconnect the other end, unless you want to have sparks fly.\nWeve covered PoE quite a bit, and even hacks that add PoE to ESP32 using 802.3af modules, reuse the Raspberry Pi PoE header for single-cable wireup, or even transmit Ethernet over DC power instead. Now, for a change, lets talk about the polar opposite  a way to do Ethernet that does not allow you to do any power transmission at all, which is Ethernet over fiber optics, and how you can get there.\nMedia Converters\nIf youve ever hacked a bit further than pure home applications of Ethernet, youll know theres a way to put it onto fiber optic. Fiber is wonderful for even longer distance runs than Ethernet can achieve, its even more resillient too. Sometimes it lets you reuse an existing fiber connection  many a provider now prefers pulling fiber. A piece of hardware capable of converting Ethernet to fiber is called a media converter, and theyre not that hard to find online as separate pieces of equipment  especially given that many are discarded by small-scale ISPs as they upgrade their tech.\nA mediaconverter, functioning despite slightly suboptimal incoming fiber cable configuration\nNow, unlike Ethernet, you cant easily crimp fiber, you have to weld it with a special machine, and if you dont have that machine, you might have to settle with buying pre-terminated fiber lengths. You also have to be seriously careful when bending fiber  it cant withstand much abuse. However, if the upsides of fiber are tempting for you, what you can do is go find a media converter online, plug your Ethernet cable into it, and on the other port of it, or two ports, and bam, you get fiber Ethernet.\nOne unexpected use case for a hacker is total galvanic isolation  lightning-proofing your Ethernet links on the cheap. If youve ever wanted to add a surefire, guaranteed lightning protection to an Ethernet connection, converting it into a short run of fiber optic cable through two media converters is perhaps the best decision you can make! Fiber is also resilient to electromagnetically noisy environments.\nAt this point, you might be wondering  how exactly do you build new Ethernet devices? Whether its an ESP32, a DIY router, or an Ethernet-enabled stepper motor, worry not. Next time, we will go through the practical side of using Ethernet  Ethernet transformers, internals, and wireup, nuances like Bob Smith termination, magjack recommendations, PHYs and MACs, and how to bend the rules at the hardware level. For illustration and example circuit purposes, expect to see a fair few Ethernet-based hacks from all around the hacker world!\nFeatured image: 10base-T by [gratuit]", "title": "\u30a4\u30fc\u30b5\u30cd\u30c3\u30c8\u30eb\u30fc\u30bf\u30fc\u3068\u30b9\u30a4\u30c3\u30c1\u306b\u3064\u3044\u3066", "body": "Ethernet\u306b\u95a2\u9023\u3059\u308b\u91cd\u8981\u306a\u77e5\u8b58\u3084\u6a5f\u5668\u3001\u304a\u3088\u3073Power over Ethernet\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u7279\u306b\u3001\u30eb\u30fc\u30bf\u3068\u30b9\u30a4\u30c3\u30c1\u306e\u9055\u3044\u3084Passive PoE\u306e\u5229\u70b9\u3001\u307e\u305f\u5149\u30d5\u30a1\u30a4\u30d0\u3078\u306e\u5909\u63db\u65b9\u6cd5\u304c\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u5c06\u6765\u306e\u30cf\u30c3\u30ad\u30f3\u30b0\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5f79\u7acb\u3064\u60c5\u5831\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002", "titles": ["\u30a4\u30fc\u30b5\u30cd\u30c3\u30c8\u30eb\u30fc\u30bf\u30fc\u3068\u30b9\u30a4\u30c3\u30c1\u306b\u3064\u3044\u3066", "\u30a4\u30fc\u30b5\u30cd\u30c3\u30c8\u30eb\u30fc\u30bf\u30fc\u306e\u30cf\u30c3\u30ad\u30f3\u30b0\u306e\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb", "\u30d1\u30ef\u30fc\u30aa\u30fc\u30d0\u30fc\u30a8\u30fc\u30c6\u30a3\u30fc\u30cd\u30c3\u30c8\uff08PoE\uff09\u306e\u6982\u8981", "\u30d1\u30c3\u30b7\u30d6PoE\u306e\u30e1\u30ea\u30c3\u30c8\u3068\u6ce8\u610f\u70b9", "\u30e1\u30c7\u30a3\u30a2\u30b3\u30f3\u30d0\u30fc\u30bf\u30fc\u3092\u5229\u7528\u3057\u305f\u30d5\u30a1\u30a4\u30d0\u30fc\u30aa\u30d7\u30c6\u30a3\u30c3\u30af\u30b9\u901a\u4fe1\u306e\u5229\u70b9"]}