{"pubDate": "2025-03-26T11:00:23", "original_title": "Build Customized Raspberry Pi OS Images With rpi-image-gen", "link": "https://hackaday.com/2025/03/26/build-customized-raspberry-pi-os-images-with-rpi-image-gen/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/10/raspberry_pi_os_recommended-software.png", "original_content": "Recently Raspberry Pi publicly announced the release of their new rpi-image-gen tool, which is advertised as making custom Raspberry Pi OS (i.e. Debian for specific Broadcom SoCs) images in a much more streamlined fashion than with the existing rpi-gen tool, or with third-party solutions. The general idea seems to be that the user fetches the tool from the GitHub project page, before running the build.sh script with parameters defining the configuration file and other options.\nThe main advantage of this tool is said to be that it uses binary packages rather than (cross-)compiling, while providing a range of profiles and configuration layers to target specific hardware  requirements. Two examples are provided in the GitHub project, one for a slim project, the other for a webkiosk configuration that runs a browser in a restricted (Cage) environment, with required packages installed in the final image.\nLooking at the basic slim example, it defines the INI-style configuration in config/pi5-slim.cfg, but even when browsing through the main README its still somewhat obtuse. Under device it references the mypi5 subfolder which contains its own shell script, plus a cmdline.txt and fstab file. Under image it references the compact subfolder with another bunch of files in it. Although this will no doubt make a lot more sense after taking a few days to prod  poke at this, its clear that this is not a tool for casual users who just want to quickly put a custom image together.\nThis is also reflected in the Raspberry Pi blog post, which strongly insinuates that this is targeting commercial  industrial customers, rather than hobbyists."}