{"pubDate": "2025-08-18T11:00:11", "original_title": "Sniffing 5G with Software-Defined Radio", "link": "https://hackaday.com/2025/08/18/sniffing-5g-with-software-defined-radio/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/04/cell-tower.jpg", "original_content": "The fifth generation mobile communications protocol (5G) is perhaps the most complicated wireless protocol ever made. Featuring wildly fast download speeds, beam forming base stations, and of course non-standard additions, its rather daunting prospect to analyze for the home hacker and researcher alike. But this didnt stop the ASSET Research Group from developing a 5G sniffer and downlink injector.\nThe crux of the project is focused around real-time sniffing using one of two Universal Software Radio Peripheral (USRP) software-defined radios (SDRs), and a substantial quantity of compute power. This sniffed data can even be piped into Wireshark for filtering. The frequency is hard-coded into the sniffer for improved performance with the n78 and n41 bands having been tested as of writing. While we expect most of you dont have the supported USRP hardware, they provided a sample capture file for anyone to analyze.\nThe other main feature of the project is an exploitation framework with numerous attack vectors developed by ASSET and others. By turning an SDR into a malicious 5G base station, numerous vulnerabilities and features can be exploited to with results ranging from downgrading the connection to 4G, fingerprinting and much more. It even includes an attack method we preciously covered called 5Ghull which can cause device failure requiring removal of the SIM Card. These vulnerabilities offer a unique look inside the inner workings of 5G.\nIf you too are interested in 5G sniffing but dont have access to the hardware needed, check out this hack turning a Qualcomm phone into a 5G sniffer!", "title": "- 5G\u901a\u4fe1\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u89e3\u6790: \u96fb\u5b50\u5de5\u4f5c\u306e\u65b0\u305f\u306a\u6311\u6226", "body": "5G\u901a\u4fe1\u306e\u8907\u96d1\u3055\u3092\u5206\u6790\u3057\u3001ASSET\u7814\u7a76\u30b0\u30eb\u30fc\u30d7\u304c5G\u30b9\u30cb\u30d5\u30a1\u30fc\u3068\u653b\u6483\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u958b\u767a\u3057\u307e\u3057\u305f\u3002", "titles": ["- 5G\u901a\u4fe1\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u89e3\u6790: \u96fb\u5b50\u5de5\u4f5c\u306e\u65b0\u305f\u306a\u6311\u6226", "- \u81ea\u4f5c5G\u30b9\u30cb\u30d5\u30a1\u30fc\u306e\u958b\u767a: ASSET\u7814\u7a76\u30b0\u30eb\u30fc\u30d7\u306e\u6210\u679c", "- SDR\u3092\u4f7f\u3063\u305f\u30ea\u30a2\u30eb\u30bf\u30a4\u30e05G\u30c7\u30fc\u30bf\u89e3\u6790\u306e\u65b9\u6cd5", "- \u60aa\u7528\u53ef\u80fd\u306a5G\u57fa\u5730\u5c40\u306e\u958b\u767a\u3068\u305d\u306e\u30ea\u30b9\u30af", "- Qualcomm\u96fb\u8a71\u3092\u5229\u7528\u3057\u305f\u304a\u624b\u8efd5G\u30b9\u30cb\u30d5\u30a1\u30fc\u306e\u4f5c\u6210\u6cd5"]}