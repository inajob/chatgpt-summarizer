{"pubDate": "2023-07-03T11:00:23", "original_title": "Three Pitfalls in I2C Everyone Wishes Weren\u2019t There", "link": "https://hackaday.com/2023/07/03/three-pitfalls-in-i2c-everyone-wishes-werent-there/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2022/04/hadimg_i2c_ecosystems_pic12_feat.jpg", "original_content": "The best part of I2C is that it is a bus that is available just about anywhere, covering a vast ecosystem of devices that offer it as a hardware-defined interface, while being uncomplicated enough that it can also be implemented purely in software on plain GPIO pins. Despite this popularity, I2C is one of those famous informal standards that feature a couple of popular implementations, while leaving many of the details such as exact timing, bus capacitance and other tedious details to the poor sod doing the product development. Thus it is that we end up with articles such as a recent one on the tongue-twisting [pair of pared pears] blog, covering issues found while implementing an I2C slave.\nAs with any shared bus, whether multi-master or not, figuring out when the bus is clear is a fun topic, yet one which can cause endless headaches. One issue here comes from a feature that the SMBus version of I2C calls quick read/write. This allows for the rapid transfer of some data. Still, depending on the data returned by the slave, it may appear to the master that nothing is happening yet, since SDA is being held low by the slave until the stop condition, essentially locking the bus.\nI2C hold times example.\nWhere things get even more exciting comes generally in the form of what logic analyzers love to traumatically call a spurious start/stop condition. This refers to the behavior of SDA and SCL, with SDA going low before SCL indicating an error. This can occur due to a hold time thats too low, causing other devices on the bus to miss the transition. Here SMBus defines a transition time of 300 ns, while I2C calls for 0 seconds, but its now suggested to delay calling a start/stop condition until a delay of 300 ns has passed. Essentially, it would seem that implementing a hold time is the way forward until evidence to the contrary appears.\nThe third pitfall pertains to the higher-speed modes of I2C, including Fast-Mode (FM) and Fast-Mode Plus (FM+). Backward compatibility with these higher speed versions is absent to spotty. Although FM+ (introduced by NXP in 2007) is supposed to be backward compatible with slower speeds, effectively the timing requirement differences between the FM+ and FM standards are too large to compensate for. At least in the current versions of the standards, but one of the joys of I2C is that theres always another new set of revisions to look forward to.", "title": "I2C\u30d0\u30b9\u306e\u30e1\u30ea\u30c3\u30c8\u3068\u306f\uff1f\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3068\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u4e21\u65b9\u3067\u5b9f\u88c5\u53ef\u80fd", "body": "I2C\u306f\u307b\u3068\u3093\u3069\u306e\u30c7\u30d0\u30a4\u30b9\u3067\u5229\u7528\u3067\u304d\u308b\u30d0\u30b9\u3067\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3060\u3051\u3067\u306a\u304f\u3001\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u30bf\u30a4\u30df\u30f3\u30b0\u3084\u30d0\u30b9\u5bb9\u91cf\u306a\u3069\u306e\u8a73\u7d30\u306f\u5b9f\u88c5\u8005\u306b\u59d4\u306d\u3089\u308c\u3066\u304a\u308a\u3001\u554f\u984c\u3082\u5b58\u5728\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u9ad8\u901f\u30e2\u30fc\u30c9\u306e\u5f8c\u65b9\u4e92\u63db\u6027\u3082\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002", "titles": ["I2C\u30d0\u30b9\u306e\u30e1\u30ea\u30c3\u30c8\u3068\u306f\uff1f\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3068\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u4e21\u65b9\u3067\u5b9f\u88c5\u53ef\u80fd", "I2C\u30b9\u30ec\u30fc\u30d6\u306e\u5b9f\u88c5\u306b\u304a\u3051\u308b\u554f\u984c\u3068\u306f\uff1f", "\u5171\u6709\u30d0\u30b9\u306e\u30af\u30ea\u30a2\u72b6\u614b\u3092\u78ba\u8a8d\u3059\u308b\u65b9\u6cd5\u3068\u306f\uff1f", "SDA\u3068SCL\u306e\u30a8\u30e9\u30fc\u3092\u5f15\u304d\u8d77\u3053\u3059\u300c\u30b9\u30d1\u30ea\u30a2\u30b9\u30b9\u30bf\u30fc\u30c8/\u30b9\u30c8\u30c3\u30d7\u300d\u6761\u4ef6\u3068\u306f\uff1f", "\u9ad8\u901f\u30e2\u30fc\u30c9\u306eI2C\u306b\u304a\u3051\u308b\u4e92\u63db\u6027\u306e\u554f\u984c\u3068\u306f\uff1f"]}