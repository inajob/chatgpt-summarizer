{"pubDate": "2025-09-15T05:00:00", "original_title": "UTF-8 Is Beautiful", "link": "https://hackaday.com/2025/09/14/utf-8-is-beautiful/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/09/utf-8-featured.jpg", "original_content": "Its likely that many Hackaday readers will be aware of UTF-8, the mechanism for incorporating diverse alphabets and other characters such as  emojis. It takes the long-established 7-bit ASCII character set and extends it into multiple bytes to represent many thousands of characters. How it does this may well be beyond that basic grasp, and [Vishnu] is here with a primer thats both fascinating and easy to read.\nUTF-8 extends ASCII from codes which fit in a single byte, to codes which can be up to four bytes long. The key lies in the first few bits of each byte, which specify how many bytes each character has, and then that it is a data byte. Since 7-bit ASCII codes always have a 0 in their most significant bit when mapped onto an 8-bit byte, compatibility with ASCII is ensured by the first 128 characters always beginning with a zero bit. Its simple, elegant, and for any of who had to deal with character set hell in the days before it came along, magic.\nWeve talked surprisingly little about the internals of UTF-8 in the past, but its worthy of note that this is our second piece ever to use the pop emoji, after our coverage of the billionth GitHub repository.\nEmoji bales: Tony Hisgett, CC BY 2.0."}