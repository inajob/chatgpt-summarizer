{"pubDate": "2025-06-13T20:00:18", "original_title": "Adapting an Old Rotary Dial for Digital Applications", "link": "https://hackaday.com/2025/06/13/adapting-an-old-rotary-dial-for-digital-applications/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/06/mousa-rotary-dial-banner.png", "original_content": "Today in old school nostalgia our tipster [Clint Jay] wrote in to let us know about this rotary dial.\nIf youre a young whippersnapper you might never have seen a rotary dial. These things were commonly used on telephones back in the day, and they were notoriously slow to use. The way they work is that they generate a number of pulses corresponding to the number you want to dial in. One pulse for 1, two pulses for 2, and so on, up to nine pulses for 9, then ten pulses for 0.\nWe see circuits like this here at Hackaday from time to time. In fact, commonly we see them implemented as USB keyboards, such as in Rotary Dial Becomes USB Keyboard and Rotary Dialer Becomes Numeric Keypad.\n\nOne thing that makes this particular project different from the ones weve seen before is that it doesnt require a microcontroller. That said, our hacker [Mousa] shows us how to interface this dial with an Arduino, along with sample code, if thats something youd like to do. The schematic for the project shows how to connect the rotary dial (salvaged from an old telephone) to both a 7-segment display and a collection of ten LEDs.\nThe project write-up includes links to the PCB design files. The guts of the project are a 4017 decade counter and a 4026 7-segment display adapter. Good, honest, old school digital logic.\n", "title": "- \u30ed\u30fc\u30bf\u30ea\u30fc\u30c0\u30a4\u30e4\u30eb\u3092\u4f7f\u3063\u305f\u61d0\u304b\u3057\u306e\u96fb\u5b50\u5de5\u4f5c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "body": "\u56de\u8ee2\u30c0\u30a4\u30e4\u30eb\u3092Arduino\u306b\u63a5\u7d9a\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u7d39\u4ecb\u3002\u53e4\u5178\u7684\u306a\u30c7\u30b8\u30bf\u30eb\u30ed\u30b8\u30c3\u30af\u3092\u6d3b\u7528\u3002", "titles": ["- \u30ed\u30fc\u30bf\u30ea\u30fc\u30c0\u30a4\u30e4\u30eb\u3092\u4f7f\u3063\u305f\u61d0\u304b\u3057\u306e\u96fb\u5b50\u5de5\u4f5c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "- \u30de\u30a4\u30b3\u30f3\u4e0d\u8981\uff01\u30ed\u30fc\u30c6\u30fc\u30c6\u30a3\u30f3\u30b0\u30c0\u30a4\u30e4\u30eb\u3067\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0", "- \u53e4\u304d\u826f\u304d\u30a2\u30ca\u30ed\u30b0\u304b\u3089\u30c7\u30b8\u30bf\u30eb\u3078\uff1a\u30ed\u30fc\u30bf\u30ea\u30fc\u30c0\u30a4\u30e4\u30eb\u306e\u6d3b\u7528\u6cd5", "- Arduino\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u5b66\u3076\u30ed\u30fc\u30bf\u30ea\u30fc\u30c0\u30a4\u30e4\u30eb\u306e\u63a5\u7d9a\u65b9\u6cd5", "- 4017\u30ab\u30a6\u30f3\u30bf\u30fc\u30684026\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u30a2\u30c0\u30d7\u30bf\u306b\u3088\u308b\u7c21\u5358\u56de\u8def\u8a2d\u8a08"]}