{"pubDate": "2024-07-25T08:00:00", "original_title": "Pnut: A Self-Compiling C Transpiler Targeting Human-Readable POSIX Shell", "link": "https://hackaday.com/2024/07/25/pnut-a-self-compiling-c-transpiler-targeting-human-readable-posix-shell/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/07/pnut_shell_transpiler.jpg", "original_content": "Shell scripting is one of those skills that are absolutely invaluable on especially UNIX and BSD-based systems like the BSDs, the two zillion Linux distributions as well as MacOS. Yet not every shell is the same, and not everybody can be bothered to learn the differences between the sh, bash, ksh, zsh, dash, fish and other shells, which can make a project like Pnut seem rather tempting. Rather than dealing with shell scripting directly, the user writes their code in the Lingua Franca of computing, AKA C, which is then transpiled into a shell script that should run in any POSIX-compliant shell.\nThe transpiler can be used both online via the main Pnut website, as well as locally using the (BSD 2-clause) open source code on GitHub. Here the main limitations are also listed, which mostly concern the C constructs that do not map nicely to a POSIX shell. These are: no support for floating point numbers and unsigned integers, no goto and switch nor taking the address of a variable with . These and preprocessor-related limitations and issues are largely to be expected, as especially POSIX shells are hardly direct replacements for full-blown C code.\nAs a self-professed research project, Pnut seems like an interesting project, although if you are writing shell scripts for anything important, you probably just want to buckle down and learn the ins and outs of POSIX shell scripting and beyond. Although its a bit of a learning curve, wed be remiss if we said that its not totally worth it, if only because it makes overall shell usage even beyond scripting so much better.", "title": "C\u8a00\u8a9e\u3092\u4f7f\u3063\u305fPOSIX\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3078\u306e\u5909\u63db\u30c4\u30fc\u30eb\u300cPnut\u300d\u306e\u7d39\u4ecb", "body": "Pnut\u306f\u3001C\u8a00\u8a9e\u3092\u4f7f\u3063\u3066\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30c4\u30fc\u30eb\u3067\u3042\u308a\u3001POSIX\u30b7\u30a7\u30eb\u3068\u306e\u9055\u3044\u3092\u6c17\u306b\u3059\u308b\u3053\u3068\u306a\u304f\u5229\u7528\u3067\u304d\u308b\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u306f\u8208\u5473\u6df1\u3044\u304c\u3001\u91cd\u8981\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u304f\u969b\u306b\u306fPOSIX\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c6\u30a3\u30f3\u30b0\u3092\u5b66\u3076\u3053\u3068\u304c\u91cd\u8981\u3002", "titles": ["C\u8a00\u8a9e\u3092\u4f7f\u3063\u305fPOSIX\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3078\u306e\u5909\u63db\u30c4\u30fc\u30eb\u300cPnut\u300d\u306e\u7d39\u4ecb", "\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092C\u8a00\u8a9e\u306b\u5909\u63db\u3059\u308b\u4fbf\u5229\u30c4\u30fc\u30eb\u300cPnut\u300d\u306e\u4f7f\u3044\u65b9", "UNIX\u3084BSD\u7cfb\u30b7\u30b9\u30c6\u30e0\u3067\u5f79\u7acb\u3064C\u8a00\u8a9e\u30d9\u30fc\u30b9\u306e\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8", "Pnut\uff1aC\u8a00\u8a9e\u3092POSIX\u6e96\u62e0\u306e\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u5909\u63db\u3059\u308b\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30c4\u30fc\u30eb", "\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u4f5c\u6210\u306e\u5b66\u7fd2\u66f2\u7dda\u3092\u30b9\u30ad\u30c3\u30d7\uff01 C\u8a00\u8a9e\u3067\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5"]}