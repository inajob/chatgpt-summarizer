{"pubDate": "2024-12-27T12:00:25", "original_title": "Minecraft in\u2026COBOL?", "link": "https://hackaday.com/2024/12/27/minecraft-in-cobol/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/12/cobolcraft_feat2.png", "original_content": "When you think of languages you might read about on Hackaday, COBOL probably isnt one of them. The language is often considered mostly for business applications and legacy ones, at that. The thing is, there are a lot of legacy business applications out there, so there is still plenty of COBOL. Not only is it used, but it is still improved, too. So [Meyfa] wanted to set the record straight and created a Minecraft server called CobolCraft.\nThe system runs on GnuCOBOL and has only been tested on Linux. There are a few limitations, but nothing too serious. The most amazing thing? Apparently, [Meyfa] had no prior COBOL experience before starting this project!\n\nEven if you dont care about COBOL or Minecraft, the overview of the program is interesting because it shows how many things require workarounds. According to the author:\nWriting a Minecraft server was perhaps not the best idea for a first COBOL project, since COBOL is intended for business applications, not low-level data manipulation (bits and bytes) which the Minecraft protocol needs lots of. However, quitting before having a working prototype was not on the table! A lot of this functionality had to be implemented completely from scratch, but with some clever programming, data encoding and decoding is not just fully working, but also quite performant.\nGot the urge for Cobol? Weve been there. Or write Minecraft in Minecraft."}