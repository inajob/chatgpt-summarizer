{"pubDate": "2025-08-16T02:00:15", "original_title": "Suggested Schematic Standards", "link": "https://hackaday.com/2025/08/15/suggested-schematic-standards/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/08/schem.png", "original_content": "We often think that if a piece of software had the level of documentation you usually see for hardware, you wouldnt think much of it. Sure, there are exceptions. Some hardware is beautifully documented, and poorly documented software is everywhere. [Graham Sutherlands] been reviewing schematics and put together some notes on what makes a clean schematic.\nLike coding standards, some of these are a bit subjective, but we thought it was all good advice. Of course, weve also violated some of them when we are in a hurry to get to a simulation.\n\nMost of the rules are common sense: use enough space, add labels, and avoid using quirky angles. [Flannery OConnor] once said, You can do anything you can get away with, but nobody has ever gotten away with much.\u201d She was talking about writing, but the same could be said about schematics.\n[Graham] says as much, pointing out that these are more guidelines. He even points out places where you might deliberately break the rules. For example, in general, wires should always go horizontally or vertically. However, if you are crossing two parallel wires, you probably should take advantage of the diagonals.\nSo what are your schematic rules? Software has standards like MISRA, CERT, and various NASA standards. Oddly enough, one of our favorite quick schematic editors is truly terrible but obeys most of these rules. But you can surely do better than that."}