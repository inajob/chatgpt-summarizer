{"pubDate": "2024-04-18T08:00:27", "original_title": "Hacked Oscilloscope Plays Breakout, Hints at More", "link": "https://hackaday.com/2024/04/18/hacked-oscilloscope-plays-breakout-hints-at-more/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/04/scope_breakout.png", "original_content": "You know things are getting real when the Dremel is one of the first tools you turn to after unboxing your new oscilloscope. But when your goal is to hack the scope to play Breakout, sometimes plastic needs to be sacrificed.\nGranted, the scope in question, a Fnirsi DSO152, only cost [David Given] from Poking Technology a couple of bucks. And while the little instrument really isnt that bad inside, its limited to a single channel and 200 kHz of bandwidth, so its not exactly lab quality. The big attractions for [David] were the CH32F103 microcontroller and the prominent debug port inside, not to mention the large color LCD panel.\n[David]s attack began with the debug port and case mods to allow access, but quickly ground to a halt when he accidentally erased the original firmware. But no matter  tracing out the pins is always an option. [David] made that easier by overlaying large photos of both sides of the board, which let him figure out which buttons went to which pins, and mapping for the displays parallel interface. He didnt mess with any of the analog stuff except to create a quick Hello, oscilloscope! program to output a square wave to the calibration pin. He did, however, create a display driver and port a game of breakout to the scope  video after the hop.\nWeve been seeing a lot of buzz around the CH32xx MCUs lately; seeing it start to show up in retail products is perhaps a leading indicator of where the cheap RISC chips are headed. Weve seen a few interesting hacks with them, but weve also heard tell they can be hard to come by. Maybe getting one of these scopes to tear apart can fix that, though.\n\n\nThanks to [Bike Forever] for the heads up on this one.", "title": "\u65b0\u3057\u3044\u30aa\u30b7\u30ed\u30b9\u30b3\u30fc\u30d7\u3092\u30cf\u30c3\u30af\u3057\u3066Breakout\u3092\u30d7\u30ec\u30a4\u3059\u308b", "body": "\u65b0\u3057\u3044\u30aa\u30b7\u30ed\u30b9\u30b3\u30fc\u30d7\u3092\u958b\u5c01\u3057\u3066\u6700\u521d\u306bDremel\u3092\u4f7f\u3046\u6642\u3001\u30ea\u30a2\u30eb\u306a\u611f\u3058\u304c\u3057\u307e\u3059\u3002Fnirsi DSO152\u3092\u6539\u9020\u3057\u3001Breakout\u3092\u30d7\u30ec\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3002CH32F103\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3068\u30c7\u30d0\u30c3\u30b0\u30dd\u30fc\u30c8\u304c\u9b45\u529b\u3002CH32xx MCU\u306b\u6ce8\u76ee\u3002", "titles": ["\u65b0\u3057\u3044\u30aa\u30b7\u30ed\u30b9\u30b3\u30fc\u30d7\u3092\u30cf\u30c3\u30af\u3057\u3066Breakout\u3092\u30d7\u30ec\u30a4\u3059\u308b", "Fnirsi DSO152\u30aa\u30b7\u30ed\u30b9\u30b3\u30fc\u30d7\u306e\u30cf\u30c3\u30af", "CH32F103\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u6539\u9020\u3059\u308b", "\u30aa\u30b7\u30ed\u30b9\u30b3\u30fc\u30d7\u306e\u30c7\u30d0\u30c3\u30b0\u30dd\u30fc\u30c8\u3078\u306e\u653b\u6483", "\u5b89\u3044RISC\u30c1\u30c3\u30d7\u306e\u53ef\u80fd\u6027\u306b\u8feb\u308b"]}