{"pubDate": "2024-03-14T18:30:48", "original_title": "New Brains Save 12 V Fridge From the Scrap Heap", "link": "https://hackaday.com/2024/03/14/new-brains-save-12-v-fridge-from-the-scrap-heap/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/03/new_display-featured.png", "original_content": "Recently [nibbler]s Evakool 55L vehicle fridge started to act strangely, reporting crazy temperature errors and had no chance of regulating. The determination was that the NTC thermistor was toast, and rather than trying to extricate and replace this part, it was a lot easier to add a new one at a suitable location\nBog-standard fridge internals\nA straight swap would have been boring, so this was a perfect excuse for an overboard hack. Reverse engineering the controller wouldnt be easy, as the data wasnt available, as is often the case for many products of this nature.\nWhile doing a brain transplant, the hacker way, we can go overboard and add the basics of an IoT control and monitoring system. To that end, [nibbler] learned as much as possible about the off-the-shelf ZH25G compressor and the associated compressor control board. The aim was to junk the original user interface/control board and replace that with a Raspberry Pi Pico W running CircuitPython.\nFor the display, they used one of the ubiquitous SH1106 monochrome OLED units that can be had for less than the cost of a McDonalds cheeseburger at the usual purveyors of cheap Chinese electronics.\u00a0 A brief distraction was trying to use a DS18B20 waterproof thermometer probe, which they discovered didnt function, so they reverted to tried and trusted tech  a simple NTC thermistor.\n\nTesting testing\nThe final puzzle piece was to interface the Pico to the compressor controller. The controller expected a variable resistance to control the speed, for which they could have used a digitally controlled potentiometer. However, after failing to tame this particular beast, an easier solution was to build a small PCB with a few relays and some fixed resistors and call it a hack.\nAn annoyance was the lack of interrupt support in CircuitPython. This meant that interpreting the fault codes from the controller would be a bit tricky. The solution was to wedge in another microcontroller, a small Arduino. Its job is to sit there, listen for commands on the serial port, control the relay board to drive the compressor, listen for any error codes, and pass those back to the Pico. Of course, this could have all been done directly on the Pico, just not with CircuitPython, and a lot more learning would have been needed.\nOf course, you need to own a working refrigerator to hack it, but you can easily build it from scratch. Even on a tight budget, you can get your beers cold. Needs must!"}