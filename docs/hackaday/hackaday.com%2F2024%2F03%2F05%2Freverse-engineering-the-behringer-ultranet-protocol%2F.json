{"pubDate": "2024-03-05T09:00:58", "original_title": "Reverse Engineering the Behringer Ultranet Protocol", "link": "https://hackaday.com/2024/03/05/reverse-engineering-the-behringer-ultranet-protocol/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/02/ultranet_feat.jpg", "original_content": "Ultranet is a protocol created by audio manufacturer Behringer to transmit up to 16 channels of 24-bit sound over a Cat-5 cable. It\u2019s not an open standard, though: Behringer doesn\u2019t offer an API or protocol description to build your own Ultranet devices. But that didn\u2019t stop [Christian N\u00f6dig], thanks to a defective mixer, he poked into the signals and built his own Ultranet receiver.\nUltranet runs over Cat-5 ethernet cables but isn\u2019t an ethernet-based protocol. The electrical protocols of Ultranet are identical to Ethernet, but the signaling is different, making it a Level 1 protocol. So, you can use any Cat-5 cable for Ultranet, but you can\u2019t just plug an Ultranet device into an Ethernet one. Or rather, you can (and neither device should explode), but you won\u2019t get anything out of it.\nInstead, [Christian]s exploration revealed that Ultranet is based on another standard: AES/EBU, the bigger professional brother of the SPD/IF socket on HiFi systems. This was designed to carry digital audio over an XLR cable, and Behringer has taken AES/EBU and tweaked it to run over a single twisted pair. With two twisted pairs in the cable carrying a 192 kbps signal, you get sixteen channels of 24-bit audio in total over two twisted pairs inside the Cat-5 cable.\nThat\u2019s a bit fast for a microcontroller to decode reliably, so [Christian] uses the FPGA in an Arduino Vidor 4000 MKR in his receiver with an open-source AES decoder core to receive and decode the Ultranet signal into individual channels, which are passed to an ADC and analog output.\nIn effect, [Christian] has built a 16-channel mixer, although the mixing aspect is too primitive for actual use. It would be great for monitoring, though, and it\u2019s a beautiful description of how to dig into protocols like Ultranet that look locked up but are based on other, more open standards.\n\n", "title": "Behringer Ultranet\u3092\u7406\u89e3\u3059\u308b  ", "body": "Ultranet\u306fBehringer\u306b\u3088\u3063\u3066\u4f5c\u6210\u3055\u308c\u305f\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3001Cat-5\u30b1\u30fc\u30d6\u30eb\u3067\u6700\u592716\u30c1\u30e3\u30f3\u30cd\u30eb\u306e24\u30d3\u30c3\u30c8\u30b5\u30a6\u30f3\u30c9\u3092\u4f1d\u9001\u3057\u307e\u3059\u3002\u30aa\u30fc\u30d7\u30f3\u6a19\u6e96\u3067\u306f\u306a\u3044\u304c\u3001[Christian N\u00f6dig]\u304c\u72ec\u81ea\u306eUltranet\u53d7\u4fe1\u6a5f\u3092\u69cb\u7bc9\u3057\u305f\u3002Ultranet\u306fEthernet\u3088\u308a\u3082\u7570\u306a\u308bLevel 1\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3001AES/EBU\u3092\u30d9\u30fc\u30b9\u306b\u3057\u3066\u3044\u308b\u3002", "titles": ["Behringer Ultranet\u3092\u7406\u89e3\u3059\u308b  ", "Arduino\u3092\u4f7f\u7528\u3057\u305fUltranet\u30ec\u30b7\u30fc\u30d0\u30fc\u306e\u4f5c\u6210\u65b9\u6cd5  ", "Ultranet\u30d7\u30ed\u30c8\u30b3\u30eb\u3068AES/EBU\u306e\u95a2\u9023\u6027  ", "Cat-5\u30b1\u30fc\u30d6\u30eb\u3092\u4f7f\u7528\u3057\u305f\u97f3\u58f0\u8ee2\u9001\u306e\u53ef\u80fd\u6027  ", "Ultranet\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u89e3\u8aad\u3068\u5fdc\u7528"]}