{"pubDate": "2025-05-27T11:00:44", "original_title": "A Forth OS in 46 Bytes", "link": "https://hackaday.com/2025/05/27/a-forth-os-in-46-bytes/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/05/10biForthOs.png", "original_content": "\nIt\u2019s not often that we can include an operating system in a Hackaday article, but here\u2019s the full 46-byte source of [Philippe Brochard]\u2019s 10biForthOS in 8086 opcodes:\n50b8 8e00 31d8 e8ff 0017 003c 0575 00ea5000 3c00 7401 eb02 e8ee 0005 0588 eb47b8e6 0200 d231 14cd e480 7580 c3f4\nAdmittedly, this is quite a minimal operating system. It\u2019s written for the Intel 8086, and consists of a Forth implementation with only two instructions: compile (1) and execute (0). It can receive commands over a serial connection or from a keyboard. This allows a host computer to load more complex software onto it, one byte at a time. In particular, [Philippe] provides instructions for loading more advanced compilers, such as subleq-eForth for a more complete Forth implementation, or SectorC for C programming. He\u2019s also written a 217-byte port of the OS to Linux Intel x64.\n[Philippe] doesn\u2019t take a strong stance on whether this should technically qualify as a Forth implementation, given that the base implementation lacks stacks, dictionaries, and the ability to define words. However, it does have an outer and inner interpreter, the ability to compile and execute code, and most importantly, \u201cthe simplicity and hacky feeling of Forth.\u201d\n[Philippe] writes that this masterpiece of minimalism continues the tradition of the minimal Forth implementations we\u2019ve covered before. We\u2019ve even seen Forth run on an Arduino.", "title": "- \u8d85\u30df\u30cb\u30de\u30eb\u306a10biForthOS\uff1a8086\u7528\u306e46\u30d0\u30a4\u30c8\u306e\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0", "body": "Philippe Brochard\u6c0f\u304c8086\u7528\u306b\u4f5c\u6210\u3057\u305f\u6975\u5c0fOS\u300c10biForthOS\u300d\u3092\u7d39\u4ecb\u3002", "titles": ["- \u8d85\u30df\u30cb\u30de\u30eb\u306a10biForthOS\uff1a8086\u7528\u306e46\u30d0\u30a4\u30c8\u306e\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0", "- Forth\u306e\u65b0\u305f\u306a\u6311\u6226\uff1a2\u3064\u306e\u547d\u4ee4\u3060\u3051\u3067\u52d5\u4f5c\u3059\u308bOS", "- \u30b7\u30ea\u30a2\u30eb\u63a5\u7d9a\u3068\u30ad\u30fc\u30dc\u30fc\u30c9\u3067\u64cd\u4f5c\u3059\u308b8086\u5411\u3051Forth\u5b9f\u88c5", "- \u3088\u308a\u9ad8\u5ea6\u306a\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b10biForthOS", "- Forth\u306e\u30b7\u30f3\u30d7\u30eb\u3055\u3092\u518d\u78ba\u8a8d\u3059\u308b\uff1a\u96fb\u5b50\u5de5\u4f5c\u754c\u306e\u30df\u30cb\u30de\u30ea\u30ba\u30e0"]}