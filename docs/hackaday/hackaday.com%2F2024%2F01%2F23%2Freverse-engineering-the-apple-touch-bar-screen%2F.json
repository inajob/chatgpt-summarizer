{"pubDate": "2024-01-24T00:00:09", "original_title": "Reverse Engineering The Apple Touch Bar Screen", "link": "https://hackaday.com/2024/01/23/reverse-engineering-the-apple-touch-bar-screen/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/01/apple_touch_bar_screen_sushi.jpg", "youtube": "https://www.youtube.com/watch?v=5TPBesaSkZ8", "original_content": "The Apple Touch Bar was an oddity on a fairly small number of Apple laptops which replaced the function key row with a touch display. Yet what is special about this display other than its odd form factor when you consider it as a generic touch display? As [Wenting Zhang] describes in a recent reverse-engineering video, this 2,170 x 60 pixel display is somewhat limited in that it doesnt support the MIPI DSI video mode, only command mode, along with a special instruction (0x3C) for automatic address offsets. The results of this project can be found on the GitLab account.\nIn a way these limitations make sense when you consider Apples use case for these special MIPI-DSI displays. As a touch screen with dynamic controls being displayed on it, features such as video playback never were a goal, and thus Apple likely decided to save a few bucks, possibly also due to MIPI licensing costs. What this means is that if you had dreamed of snapping up an extremely long and narrow OLED display for a video project youre in for somewhat of a bad time. Although animated content is possible  as [Wenting] demonstrates  this comes with all the limitations of command mode, meaning slower updates, higher power usage and a lot more overhead.\nThanks to [John Little] for the tip.\n\n"}