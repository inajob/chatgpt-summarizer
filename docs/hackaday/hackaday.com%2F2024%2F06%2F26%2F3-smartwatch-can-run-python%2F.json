{"pubDate": "2024-06-27T05:00:56", "original_title": "$3 Smartwatch Can Run Python", "link": "https://hackaday.com/2024/06/26/3-smartwatch-can-run-python/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/06/watch.png", "youtube": "https://www.youtube.com/watch?v=sv58aPvIonw", "original_content": "[Poking Technology] doesnt think much of his new smartwatch. It is, by his admission, the cheapest possible smartwatch, coming in at about $3. It has very few useful features but he has figured out how to port MicroPython to it, so for a wrist-mounted development board with BLE, it might be useful. You can check it out in the video below.\nThe first step is a teardown, which reveals surprisingly little on the inside. Theres a tiny battery, a few connections, a display, and a tiny CPU board. There are, luckily, a few test pads that let you get into the CPU. What do you get? A 24 MHz Telink CPU with 512k of flash and 16k of RAM, along with all the other hardware.\n\nOf course, even if you just want a display with some smarts, $3 might be in your price range. The whole thing wound up taped down to a PCB. But the usual debugger didnt want to connect. Grabbing an oscilloscope revealed that the output from the board had some level problems. He eventually wrote his own debugger interface using a Pi Pico.\nHe was able to find the onboard CPUs development tools. The CPU claims to be proprietary but looks suspiciously like a slightly modified ARM. A short investigation shows that the object code is extremely similar to the ARM Thumb instruction set but with a few extra bits set and different mnemonics. But once you put Python on board, who really cares?\nThe only downside is that it doesnt appear that the BLE is practically usable because of memory limitations. But there are still places you might use the little watch in a project.\nIf you want a smartwatch, maybe build your own. While many DIY watches are simple, you can get pretty complicated if you like.\n"}