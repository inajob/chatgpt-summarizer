{"pubDate": "2023-08-09T17:10:16", "original_title": "Share Your Projects: Leave Breadcrumbs", "link": "https://hackaday.com/2023/08/09/share-your-projects-leave-breadcrumbs/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/08/oldtransistor.jpg", "original_content": "Ive talked about a low-effort way to document your projects by taking plenty of pictures, and about ways that your PCBs could be documenting themselves. Today, lets talk about a quick and easy way that you could help other hackers as you go through your own hacking adventures  leaving breadcrumbs.\nIn short, breadcrumbs are little pieces of crucial information that you had to spend time to figure out. They are solutions to problems that another hacker just like you could stumble upon in the future, something that you perhaps wish you didnt have to figure out on your own, and certainly something that others wont need to spend time figuring out.\nBreadcrumbs are about saving time, for you and others. It helps if you think of your solved problems in terms of time spent. If you figure out a small problem and then publish your solution, you might be saving half an hour, a full hour, or a good few hours of time another hacker thats could even be less experienced in debugging than you. In fact, your breadcrumb might even make a difference between someone completing a project and abandoning it!\nHowever, theres also the trade-off of taking time to document something. If you cant publish your solution in a few minutes time, it might become much harder to persuade your brain to publish the next time you have something notable. Heres a guideline: if youve just figured out a cool terminal command that helps you solve a certain kind of problem, you should have a quick way to publish that command within a minute. The good news is, the internet has a hundred different places you could easily share your findings, depending on the kind of problem youve solved!\nSelf-Publishing For Hackers\nIts exceptionally important that you minimize the time it takes to get something published. Dont think that you need to start a whole fancy blog right now to publish that one note, its enough to create a wordpress.com account, or a new GitHub repository. GitHub specifically has the Gist platform thats good for short notes, but you can also create a repository called notes that contains a bunch of Markdown files with descriptive filenames. In fact, having a GitHub repository with markdown files is quite close to having a decent blog, with way less setup effort to boot. Check out this repository for a great example!\nYou dont need a comment section plugin, you dont need analytics, or fancy plugins, you dont even need your own hosting, you only need a space for text and a bit of searchability. All you actually need is a place to post things quickly. You wouldnt want to make your breadcrumbs hard to leave of all things, they should take as little time as possible. Having your favorite text editor open and at the ready certainly helps, so you can be 5  10 seconds away from copy-pasting your notes into a publishable document. A GitHub repo fits that bill, so does a WordPress blog, or even a Hackaday.io stack page.\nWhen youre choosing the text to put in your post its worth considering a bit of search engine optimization (SEO), which in our case boils down to, what could another hacker be searching while trying to solve this problem? So, weave in all the specific and general keywords and strings that you yourself have looked up in the search engine, get the specific error message name in there if you still have it, and, if your blog supports tags, add any tags that feel like they apply well. Youll want to make it so that others can find this post when they need your help specifically!\nDont expect comments or likes, or any feedback outside of a view counter. My WordPress stats page doesnt show many views on my breadcrumbs, half of them are in 50  100 lifetime view range, and 40% are in the 100  1000 view range. However, even if 99% of these views are bots, thats still a decent amount of people solving a similar problem overall. If you manage to help someone save one or two hours of debugging work, thats a big win.\nHaving your own blog with breadcrumbs can certainly help you build up your own reputation, and it also has quite a bit of sentimental value. For instance, I feel good when I scroll through my old breadcrumbs blog nowadays; it has solution after solution, with each post likely having helped someone else along the way, and each post brings me back to some project I was working on. Maybe I was just hacking on something interesting in my free time, or maybe I was helping a friend, but either way its a nice reminder of the oh, I was solving this problem once! kind.\nStill, with your own blog, there are disadvantages. For instance, unlike forum pages, you no longer have the SEO advantage of other people having clicked the search result before. What if you want to maximize the chance that the answer is found? What if you dont have a blog yet and you just cant get through the perfectionism barrier?\nGet To The Source\nWe all know the tale  you find a forum thread where someone has the exact some problem as you, and the last message is I solved it myself, no solution in sight. It is frustrating to see, and if youre looking for a bit of comfort, leaving breadcrumbs helps you move the world into the opposite direction.\nAmong thousands of dead platforms, you will absolutely see StackOverflow willing to help you with no strings attached, Reddit with its community recently torn apart, Blogger about to lose its entire picture collection, and the few forums left up and running. Still, all of these platforms have their spots in search engines, even if the first pages have been surrendered to AI-generated spam. Sometimes, accounts and threads will get deleted, hotlinked pictures will disappear, old posts might get locked, a plague on forums and Reddit alike if you just want to leave a breadcrumb. However, youll find yourself on their pages, still, and others will too.\nAs you were solving your problem, you have likely googled it in a few different ways. You might have a few kinds of browser tabs: GitHub issues, StackOverflow pages, forum threads, others blog posts, maybe even a public discussion that you yourself have started in the meantime. All of these are great places to post an answer  as long as its a page you have found through a search engine, the same search engine is more likely to lead people to the one crucial piece of information that youve found.\nWebsites like StackOverflow also recognize the concept of breadcrumbs. You can ask a question there, but you can also ask your own question and then answer it, and you can even ask a question specifically for the purpose of giving your own answer under it! Remember, StackOverflow has an electronics section! Youve probably already stumbled upon it, but if you havent, here it is.\nStackOverflow and Reddit do share a problem: they have minimum requirements for their posts, and you might not necessarily meet them. If your problem happens to fall under some sort of tragedy of commons guideline, or your question is perceived as too similar to someone despite vital nuance, it might get closed and downranked. Having said all that, my few StackOverflow answers have certainly helped others over time. Ive once solved a small problem back in 2018, posted it as an answer, and to this day I still get upvote notifications for the solution I posted. Cant deny, that alone warms my heart!\nPublish Or Perish\nIt might not matter where you leave breadcrumbs as much as it matters that you do leave them somewhere. Most of all, it should be easy for you to leave them. Searchability helps, and if you can optimize for that, do so. Perhaps dont leave your breadcrumbs on X (formerly Twitter), or any place you dont often see in search results. Unless its your blog, in which case, youll surely soon make it to Google!\nEven a tiny breadcrumb can point a fellow hacker in the right direction  and dont you wish that you yourself had one handy before you embarked on a three-hour debugging journey?"}