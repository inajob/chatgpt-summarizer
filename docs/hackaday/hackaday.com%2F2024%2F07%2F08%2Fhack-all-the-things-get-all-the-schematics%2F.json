{"pubDate": "2024-07-08T17:00:09", "original_title": "Hack All The Things, Get All The Schematics", "link": "https://hackaday.com/2024/07/08/hack-all-the-things-get-all-the-schematics/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2018/04/circuitvr.jpg", "original_content": "When I was growing up, about 4 or 5 years old, I had an unorthodox favourite type of reading material: service manuals for my dads audio equipment. This got to the point that I kept asking my parents for more service manuals, and it became a running joke in our family for a bit. Since then, Ive spent time repairing tech and laptops in particular as a way of earning money, hanging out at a flea market in the tech section, then spending tons of time at our hackerspace. Nowadays, Im active in online hacker groups, and I have built series of projects closely interlinked with modern-day consumer-facing tech.\nTwenty three years later, is it a wonder I have a soft spot in my heart for schematics? You might not realize this if youre only upcoming in the hardware hacking scene, but device schematics, whichever way you get them, are a goldmine of information you can use to supercharge your projects, whether youre hacking on the schematic-ed device itself or not. Whats funny is, not every company wants their schematics to be published, but its ultimately helpful for the company in question, anyway.\nIf you think its just about repair  its that, sure, but theres also a number of other things you mightve never imagined you can do. Still, repair is the most popular one.\n\nRepair, Of Course\nAsked to pay for a schematic? You can most likely find it elsewhere for free.\nIts an old chestnut that tech marvels of the past used to come bundled with schematics, and thats no longer the case. Indeed, they are often top secret. For laptops and phones, one part of that is extensive NDAs that cover information on many a chip within them, including schematics. That said, somehow, this hasnt stopped certain companies like Clevo, who has been seen putting their designs schematics right inside the service manual, for example, the P75xZM_ESM.pdf.\nStill, schematics are a market; repair shops earn their keep from being able to fix devices, so a PDF is likely to leak one way or another, often it just takes time. For certain laptop manufacturers and series, this doesnt happen, but most of all it seems to depend on popularity. In a way, schematics being leaked is a decent indicator that a product is popular enough to hit repair shops en masse, creating demand for underpaid workers to bring a loaded microSD card with them on a trip back home from the factory employing them.\nIm aware that companies sometimes cant publish much, and, its still interesting how publishing schematics and other repair documents is not more popular with companies, despite everything it brings. During my call-in laptop repair days, travelling around with a tiny Asus netbook in my toolbox that used to be a makeup suitcase, I can remember one specific phrase I heard often: yeah, we dont like %BRAND%, weve had our %BRAND% device break and it couldnt be fixed.\nCompanies Who Publish Nevertheless\nWhen it comes to publicly shared schematics, for instance, Framework laptops have adopted a Raspberry Pi approach  share schematics that concern external ports, where no NDAs could conceivably be involved, and even publish further specifications about these ports. This has created a vivid hacking and modding ecosystem around Framework, attracting a good amount of people, and this part in particular is something other companies could do as well. Ive talked aplenty about the Framework ecosystem already, and I mention the schematic involvement there quite a bit, too!\nIts not just about connectors  theres plenty of places in a laptop where failures are likely to occur, like power management. Intel might scoff at the CPU and Thunderbolt part pinouts being published, but schematics for these arent usually involved in a laptop repair anyway, what fails is usually power management, and chances are, just the schematic pages for that could be published without violating an NDA. Raspberry Pis schematics used to work in this way; sadly, RPF has given up on publishing Linux-powered Pi schematics due to being stuck in a perfectionism loop  the Pi 5 schematics are nowhere to be seen, and the USB-C-fixed Pi 4 schematics arent available either.\nPine64 is a strange case  their products are not open-source, in large part due to their operations scale landing them in a cloning-happy environment. Still, they publish a ton of the information that you might want. Pine64 publishes schematics for their products, and is forthcoming with things like  for instance, ever broke a barrel jack socket on your Pinecil? Its a rare fault, but in case you somehow have, they stock replacement sockets. Of course, Pinecil schematics are available too, in full, same goes for PinePhone and most of their other products.\nI was particularly active in the Pinecil community of the Pine64 discord, and thanks to schematics being accessible in a searchable way, we could help people fix their Pinecils on a community basis, across timezones, often quicker than the tech support could give them a response. In fact, because of the conversations happening in an official Pine64 community, Pine64 tech support could read the conversations in our channel, and avoid repeating many of the debugging steps with the Pinecil owner in question. It really helped that, everything they had to do over email, we could do over real-time chat! Schematics were a crucial part of that, from tracing what could it be thatd die from a reverse polarity what was shorting out the 3.3 V regulator, to the part numbers.\nA good few failures were relatively common, and a few community members across different continents, including me, stocked up on some of the commonly involved parts and mailed them out to people in flat envelopes. Compared to the Pinecil sales numbers, the number of failures that we handled was pretty low, but we did help a good few people; generally, people were quite happy about fixing something they own, as opposed to getting a new iron and putting the broken one into a cupboard drawer!\nheres a trace you can cut to protect your old Pinecil from FUSB failure, and gain 24V support as a side effect\nIt wasnt just replacing components  together, we narrowed down a particularly common fault that would kill Pinecils or at least make their USB-C PD power input inoperable, and figured out a fix that, in the end, involved simply cutting a trace. The gist is, a pin of a specific IC on the Pinecil was connected directly to the power input rail, this pin specifically was sensitive to overvoltage, killing the chip in a way that sometimes would even pull down the entire 3.3 V rail. Whats interesting, it didnt have to be connected to that rail at all! The community designed a fix, people have applied it for both failure immunity and also being able to use 24 V bricks. Later on, Pine64 applied the fix to a new batch of the Pinecil hardware, which is now immune to this fault.\nBefore the ability to just cut the trace was figured out by [Thanos the tank engine] and others, I managed to design an addon board thatd down-regulate the voltage with a Zener diode, and even published the files for it. After all, you can design a whole lot if schematics are available!\nBuild All The Cool Stuff\nHackers have long used schematics to design things like addons  physical board attributes, you can redesign with calipers in hand, but schematics capture everything else. All those consoles put into tiny formfactors, made possible because of the motherboard being cut down? Schematics were likely involved in one way or another.\nhaving schematics how [Wificable] could figure out there are two separate PCIe links on this connector, and make a riser exposing them both at the same timeFriends of mine have done the same kind of schematic-inspired design, on a number of occasions  in particular, [Wificable] has designed an MXM reuse adapter and a good few MXM cards only thanks to available schematics, and her TinyRiser, an adapter that pulls extra PCIe from a particular lineup of Lenovo Tiny computers, was only possible because we could get find the relevant PDF in a Telegram group.\nGot a technical question the manufacturer doesnt expand on? A schematic is a reliable way to check.\nIts not just addons, its also finding information you cant find otherwise. Wondering what your laptops USB-C port does, whether it supports DisplayPort, or charging input? The manufacturers website might not be helpful at all, but the schematics show it all instantly, on the page with the block diagram. Ive seen a product being developed, an ExpressCard slot adapter housing an SSD, that researched laptop schematics to figure out 3.3 V current limits on the ExpressCard slot and how they were implemented in different laptops.\nTapping into the iPhone battery market to get a reliable source of slim batteries for your project? Use the schematics to find the battery connector pinout  and the connector part number. Remember the M.2 card with a 1:2 PCIe switch, that Ive shown you the design process of? That one was only possible because of a laptop schematic we found featuring the ASM1182e chip. Schematics often contain part numbers, and these are super helpful  you could consult one of the connector bibles, or you could simply copy the part number for a connector out of a schematic PDF and get the exact part number necessary.\nRemember that Sony Vaio P motherboard rebuild project Ive started? Ive just recently received the v1 PCBs of a motherboard I designed, now theyre waiting to be assembled, and I couldnt have had done this without all the connector pinout information I found in the schematic. In particular, it might be that this motherboard replacement will be impossible to adapt to the second revision of these Vaios, since, as far as Ive seen, that revisions schematics havent leaked. Well, either way, expect an article about the new motherboard soon!\nTheres way, way more you can learn from schematics as you go. One of my current projects requires learning a fair bit from the PinePhone schematic and specifically its LTE modem that boasts open firmware, as part of uncovering yet another series-worthy topic; naturally, you will hear about that one soon. Schematics keep a treasure trove of hacker-friendly information in them, and information deserves to be free.", "title": "\u30b9\u30ad\u30fc\u30de\u8a2d\u8a08\u56f3\uff1a\u96fb\u5b50\u5de5\u4f5c\u306e\u5b9d\u5eab", "body": "4\u301c5\u6b73\u306e\u9803\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u30de\u30cb\u30e5\u30a2\u30eb\u304c\u5927\u597d\u304d\u3060\u3063\u305f\u8457\u8005\u306f\u3001\u4fee\u7406\u3084\u30cf\u30c3\u30ad\u30f3\u30b0\u304c\u5f97\u610f\u3002\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u30b9\u30ad\u30fc\u30e0\u306f\u8457\u8005\u306b\u3068\u3063\u3066\u91cd\u8981\u3067\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u793e\u306a\u3069\u4e00\u90e8\u4f01\u696d\u306f\u516c\u958b\u3002\u30b9\u30ad\u30fc\u30e0\u306f\u4fee\u7406\u3060\u3051\u3067\u306a\u304f\u3001\u69d8\u3005\u306a\u6280\u8853\u5fdc\u7528\u306b\u5f79\u7acb\u3064\u3002", "titles": ["\u30b9\u30ad\u30fc\u30de\u8a2d\u8a08\u56f3\uff1a\u96fb\u5b50\u5de5\u4f5c\u306e\u5b9d\u5eab", "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u4fee\u7406\u3068\u30c7\u30b6\u30a4\u30f3\uff1a\u81ea\u4f5c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u6210\u529f\u306e\u9375", "\u6a5f\u5668\u4fee\u7406\u306e\u7b2c\u4e00\u6b69\uff1a\u30b9\u30ad\u30fc\u30de\u8a2d\u8a08\u56f3\u306e\u91cd\u8981\u6027", "\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\uff1a\u30b9\u30ad\u30fc\u30de\u8a2d\u8a08\u56f3\u306b\u3088\u308b\u6d3b\u7528\u6cd5", "\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u6210\u529f\u306e\u79d8\u8a23\uff1a\u30b9\u30ad\u30fc\u30de\u8a2d\u8a08\u56f3\u306e\u77e5\u8b58\u6d3b\u7528"]}