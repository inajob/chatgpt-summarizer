{"pubDate": "2025-08-27T15:30:51", "original_title": "Homebrew Tire Pressure Monitoring System", "link": "https://hackaday.com/2025/08/27/homebrew-tire-pressure-monitoring-system/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/08/tpms.png", "original_content": "When [upir] saw that you could buy tire valve stem caps that read pressure electronically, he decided to roll his own Tire Pressure Monitoring System (TPMS) like the one found on modern cars. An ESP32 and an OLED display read the pressure values. He didnt have a car tire on his workbench though, so he had to improvise there.\nOf course, a real TPMS sensor goes inside the tire, but screwing them on the valve stem is much easier to deal with. The sensors use Bluetooth Low Energy and take tiny batteries. In theory, youre supposed to connect to them to your phone, although two different apps failed to find the sensors. Even a BLE scanner app wouldnt pick them up. Turns out  and this makes sense  the sensors dont send data if theres no pressure on them, so as not to run down the batteries. Putting pressure on them made them pop up on the scanner.\n\nThe scanner was able to read the advertisement and then correlate pressure to the data. He discovered that someone had already decoded standard TPMS BLE data, except the advertisements he found were significantly longer than his own. Eventually he was able to find a good reference.\nThe data includes a status byte, the battery voltage, the temperature, and pressure. Once you know the format, it is straightforward to read it and create your own display. Many people would have ended the video there, but [upir] goes into great detail  the video is nearly an hour long. If you want to duplicate the project, theres plenty of info and a code repository, too.\nIf you need to read the regular RF TPMS sensors, grab a software-defined radio. Many of these sensors follow their own format though, so be prepared.\n"}