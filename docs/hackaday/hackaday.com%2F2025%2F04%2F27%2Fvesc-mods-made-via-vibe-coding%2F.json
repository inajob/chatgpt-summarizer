{"pubDate": "2025-04-27T14:00:00", "original_title": "VESC Mods Made Via Vibe Coding", "link": "https://hackaday.com/2025/04/27/vesc-mods-made-via-vibe-coding/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/04/VESC-Telemetry-Display-0-8-screenshot-1.png", "original_content": "[David Bloomfield] wanted to make some tweaks to an embedded system, but didnt quite have the requisite skills. He decided to see if vibe coding could help.\n[David]s goal was simple. To take the VESC Telemetry Display created by [Lukas Janky] and add some tweaks of his own. He wanted to add more colors to the display, while changing the format of the displayed data and tweaking how it gets saved to EEPROM.\u00a0The only problem was that [David] wasnt experienced in coding at all, let alone for embedded systems like the Arduino Nano. His solution? Hand over the reigns to a large language model. [David] used Gemini 2.5 Pro to make the changes, and by and large, got the tweaks made that he was looking for.\nThere are risks here, of course. If youre working on an embedded system, whatever youre doing could have real world consequences. Meanwhile, if youre relying on the AI to generate the code and you dont fully understand it yourself well, the possibilities are obvious. It pays to know what youre doing at the end of the day. In this case, its hard to imagine much going wrong with a simple telemetry display, but it bears considering the risks whatever youre doing.\nWeve talked about the advent of vibe coding before, too, with [Jenny List] exploring this nascent phenomenon. Expect it to remain a topic of controversy in coding circles for some time. Video after the break.\n\n"}