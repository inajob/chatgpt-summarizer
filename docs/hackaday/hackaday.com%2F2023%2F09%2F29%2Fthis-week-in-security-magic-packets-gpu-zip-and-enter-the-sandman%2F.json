{"pubDate": "2023-09-29T14:00:47", "original_title": "This Week in Security: Magic Packets, GPU.zip, and Enter the Sandman", "link": "https://hackaday.com/2023/09/29/this-week-in-security-magic-packets-gpu-zip-and-enter-the-sandman/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/01/darkarts.jpg", "original_content": "Leading out the news this week is a report of BlackTech, an Advanced Persistent Threat (APT) group that appears to be based out of China, that has been installing malicious firmware on routers around the world. This firmware has been found primarily on Cisco devices, and Cisco has released a statement clarifying their complete innocence and lack of liability in the matter.\nIt seems that this attack only works on older Cisco routers, and the pattern is to log in with stolen or guessed credentials, revert the firmware to a yet older version, and then replace it with a malicious boot image. But the real fun here is the magic packets, a TCP or UDP packet filled with random data that triggers an action, like enabling that SSH backdoor service. That idea sounds remarkable similar to Fwknop, a project I worked on many years ago. It would be sort of surreal to find some of my code show up in an APT.\nDont Look Now, But Is Your GPU Leaking Pixels\nTheres a bit debate on whos fault this one is, as well as how practical of an attack it is, but the idea is certainly interesting. Compression has some interesting system side effects, and its possible for a program with access to some system analytics to work out the state of that compression. The first quirk being leveraged here is that GPU accelerated applications like a web browser use compression to stream the screen view from the CPU to the GPU. But normally, thats way too many pixels and colors to try to sort out just by watching the CPU and ram power usage.\nAnd that brings us to the second quirk, that in Chrome, one web page can load a second in an iframe, and then render CSS filters on top of the iframe. This filter ability is then used to convert the page to black and white tiles, and then transform the white tiles into a hard-to-compress pattern, while leaving the black ones alone. With that in place, its possible for the outer web page to slowly recreate the graphical view of the iframe, leaking information that is displayed on the page.\nAnd this explains why this isnt the most practical of attacks, as it not only requires opening a malicious page to host the attack, it also makes some very obvious graphical changes to the screen. Not to mention taking at least 30 minutes of data leaking to recreate a username displayed on the Wikipedia page. What it lacks in practicality, this approach makes up for in cleverness and creativity, though. The attack goes by the GPU.zip moniker, and the full PDF is available.\nlibwebp is Everywhere\nWe warned you last week that the WebP vulnerability was going to have a long tail. Google has caught up to that reality, it seems, issuing CVE-2023-5129 as a CVSS 10.0 vulnerability in libwebp, which is hiding in nearly everything. Interestingly, that CVE has been pulled, and its all being tracked in CVE-2023-4863. Stay tuned!\nEnter Sandman\nTheres something brewing in the Middle East and Europe: a group being tracked as Sandman that really likes compromising telecommunication companies. The malware framework being used is known as LuaDream, and is running in LuaJIT of all things.\nThe tradecraft of this malware group is also notable. The targets seem to be carefully selected, the post-compromise actions are minimal, and the goal seems to be getting a foothold on the right systems. And while the malware has been discovered, its still pretty much unknown who exactly is behind the campaign. Definitely spooky.\nBeware the Fake CVE\nThis isnt the first time that malware has been disguised as legitimate malware research. This one seems even less targeted, being a fake Proof of Concept (PoC) just uploaded to a Github repository. It claims to be a WinRAR PoC, but its just a relatively boring malware dropper script. The idea is that a researcher, cybercriminal, or anyone else would grab the script hoping to re-use the vulnerability, and run it without properly vetting the code.\nThe timestamps on the files seems to indicate that the malware and infrastructure was set up in advance, and the author just waited for a sufficiently tempting PoC to come along. When the WinRAR problem caught some attention, the malware was prepped to look appropriate, and the released to the world. Clever.\nRCEs and CIs\nResearchers at Sonar have found a vulnerability in JetBrains TeamCity Continuous Integration (CI) Server. For those that havent had the pleasure/pain of working with CI, thats a system where every change made to a software project results in a new compilation of the project, ideally with tests automatically getting run, and merging blocked if the tests fail too spectacularly. The scary thing is that some of those CI services are publicly available. Having vulnerabilities in those is definitely not good.\nThe vulnerability in TeamCity is the on-premises version only, but it boils down to a wildcard matching too much of a URL. Any API request ending with /RPC2 is effectively unauthenticated. Ouch.\nAnd then theres Jira Confluence and Bitbucket. Confluence, the Java-based corporate wiki has a high severity Denial of Service. Bitbucket has an unauthenticated RCE, also considered high severity. Both flaws were privately disclosed, and seemingly havent been exploited anywhere yet. Updates are available for all the above problems.\nChrome, JIT, and RCE.\nIf youve ever wondered how Javascript Type confusion leads to an RCE vulnerability, this Github blog post has you covered. In this case, its all about how JS code gets turned into a dependency graph for optimization. This compilation process can actually change JS objects in very subtle ways. Because Javascript execution and compilation is done multi-threaded in modern interpreters, this results in a potential case where the compilation change hapens without properly updating the mapping of the target object. That de-sync means out-of-bounds access, and just enough of a lever to get to arbitrary code execution. The details are too involved to fully delve here, so follow the link if youre inclined.\nBits and Bytes\nDrupal Core has a cache poisoning issue, where the JSON:API module can be manipulated into spitting out an error backtrace. The problem is that those backtraces arent properly sanitized, can be cached, and in some cases unauthenticated users can access those caches. Updates are available, and mitigation is as easy as uninstalling the JSON:API.\nYet another 0-day chain has been yanked by CitizenLab. This exploit chain is part of Cytrox Predator spyware, and it was discovered on the device of a Egyption presidential hopeful, [Ahmed Eltantawy]. It seems like the initial infection was via network injection, performed by the official ISP. Visit just one HTTP web page, and the mobile device is redirected to the exploit. This particular set of vulnerabilities have been squashed.", "title": "\u4e2d\u56fd\u306e\u30b0\u30eb\u30fc\u30d7\u306b\u3088\u308b\u60aa\u610f\u306e\u3042\u308b\u30eb\u30fc\u30bf\u30fc\u3078\u306e\u653b\u6483\u304c\u767a\u899a", "body": "\u4e2d\u56fd\u3092\u62e0\u70b9\u3068\u3059\u308bAPT\u30b0\u30eb\u30fc\u30d7BlackTech\u304c\u3001\u4e16\u754c\u4e2d\u306e\u30eb\u30fc\u30bf\u30fc\u306b\u60aa\u610f\u306e\u3042\u308b\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u3068\u306e\u5831\u544a\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u7279\u306bCisco\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u898b\u3064\u304b\u308a\u3001Cisco\u306f\u81ea\u3089\u306e\u7121\u5b9f\u3068\u8cac\u4efb\u306e\u6b20\u5982\u3092\u660e\u78ba\u306b\u3059\u308b\u58f0\u660e\u3092\u767a\u8868\u3057\u307e\u3057\u305f\u3002\u307e\u305f\u3001GPU\u304c\u30d4\u30af\u30bb\u30eb\u3092\u6f0f\u3089\u3057\u3066\u3044\u308b\u554f\u984c\u3082\u5831\u544a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3055\u307e\u3056\u307e\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4e0a\u306e\u554f\u984c\u304c\u8b66\u544a\u3055\u308c\u3066\u3044\u307e\u3059\u3002", "titles": ["\u4e2d\u56fd\u306e\u30b0\u30eb\u30fc\u30d7\u306b\u3088\u308b\u60aa\u610f\u306e\u3042\u308b\u30eb\u30fc\u30bf\u30fc\u3078\u306e\u653b\u6483\u304c\u767a\u899a", "GPU\u304c\u6f0f\u6d29\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u306b\u3064\u3044\u3066", "libwebp\u306e\u8106\u5f31\u6027\u304c\u5e83\u304c\u308a\u3064\u3064\u3042\u308b", "\u30c6\u30ec\u30b3\u30e0\u4f01\u696d\u3092\u6a19\u7684\u306b\u3059\u308bSandman\u30b0\u30eb\u30fc\u30d7\u306e\u6d3b\u52d5", "\u507d\u306eCVE\u304c\u60aa\u8cea\u306a\u30de\u30eb\u30a6\u30a7\u30a2\u3068\u3057\u3066\u51fa\u56de\u308b\u8b66\u544a\u304c\u767a\u4ee4"]}