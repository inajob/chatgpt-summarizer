{"pubDate": "2025-07-05T14:00:42", "original_title": "Software Defined Retro ROM Makes 8-bit Easy", "link": "https://hackaday.com/2025/07/05/software-defined-retro-rom-makes-8-bit-easy/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/07/ssdr-feat.png", "original_content": "Like the rest of us, 8-bit hardware is not getting any newer, and failed ROMs are just a fact of life. Of course you cant call up Commadore corporation for replacement parts anymore, so something is needed. [Peirs Rocks] wasnt satisfied with the existing options, so he came up with the Software Defined Retro ROM to serve as a drop-in replacement for 2364, 2332, and 2316 ROM chips.\nPhysically, the Software Defined Retro ROM is a PCB that matches the footprint of the original ROM chip, and holds an STM32F4 family microcontroller with a number of extra pins facing upwards. Some of those pins are for programming, so you can flash the board in-situ without removing it from the system using a Pi Pico. The others pins are jumpers for image selection or chip configuration. Depending which STM32 you use, you can have upto 16 ROM images on the board, at whatever chip select behaviour you require. The ROMs chip select lines could be configured at the factory to answer to HIGH or LOW, and this board can handle either with a jumper swap.\nThe documentation on the GitHub is very well done, for which we applaud [Piers]. Instructions and demos are also available in the video embedded below. We could certainly see this hack becoming popular in the retrocomputer community, especially as everything ages and memories continue to, uh, yknow. What were we talking about, again?\nOh, right, ROMs. You might think an mask ROM would last a very long time, but its been a very long time since some of these were made. Best to dump them while you still can. If the chip is really far gone electrically, you might try decoding a photograph of the die.\n\n\n", "title": "- \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u5b9a\u7fa9\u30ec\u30c8\u30edROM\u3067\u53e4\u3044\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u5fa9\u6d3b", "body": "\u53e4\u30448\u30d3\u30c3\u30c8ROM\u306e\u4ee3\u66ff\u54c1\u3068\u3057\u3066\u3001Software Defined Retro ROM\u304c\u958b\u767a\u3055\u308c\u307e\u3057\u305f\u3002 STM32\u30de\u30a4\u30b3\u30f3\u3092\u642d\u8f09\u3057\u3001\u8907\u6570\u306eROM\u30a4\u30e1\u30fc\u30b8\u304c\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002", "titles": ["- \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u5b9a\u7fa9\u30ec\u30c8\u30edROM\u3067\u53e4\u3044\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u5fa9\u6d3b", "- \u81ea\u4f5cROM\u30c1\u30c3\u30d7\u306e\u7f6e\u304d\u63db\u3048\u306b\u6700\u9069\u306a\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3", "- STM32\u30de\u30a4\u30b3\u30f3\u642d\u8f09\u306e\u65b0\u3057\u3044ROM\u30dc\u30fc\u30c9\u306e\u7279\u5fb4", "- \u30bb\u30ec\u30af\u30bf\u30b8\u30e3\u30f3\u30d1\u30fc\u3067\u81ea\u7531\u306bROM\u30a4\u30e1\u30fc\u30b8\u3092\u5207\u308a\u66ff\u3048", "- \u30ec\u30c8\u30ed\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u611b\u597d\u8005\u5fc5\u898b\u306e\u30e6\u30cb\u30fc\u30af\u30a2\u30a4\u30c7\u30a2"]}