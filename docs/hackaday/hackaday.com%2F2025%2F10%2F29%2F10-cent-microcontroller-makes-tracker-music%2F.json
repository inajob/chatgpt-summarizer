{"pubDate": "2025-10-29T23:00:56", "original_title": "10 Cent Microcontroller Makes Tracker Music", "link": "https://hackaday.com/2025/10/29/10-cent-microcontroller-makes-tracker-music/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/10/ch32mod-featured.jpg", "original_content": "We are absurdly spoiled these days by our microcontrollers. Take the CH32V00X family theyve been immortalized by meme as the ten cent micro but with a clock speed of 48MHz and 32-bit registers to work with, theyre astoundingly capable machines even by the standards of home computers of yore. Thats what motivated [Tim] to see if he could use one to play MOD files, with only minimal extra parts and quite specifically no DAC.\nWell, thats part of what motivated him. The other part was seeing Hackaday feature someone use a CH32V003 making chiptune-like beeps. [Tim] apparently saw that post as a gauntlet thrown down, and he picked it up with an even smaller chip: the CH32V002, which he proceeded to turn into a MOD player. For those of you who slept through 80s and early 90s (or for those precocious infants reading this who hadnt then yet been born), MOD files are an\u00a0 electronic music format, pioneered on the Amiga home computers. Like MIDI, the file specifies when to play specific voices rather than encoding the sound directly. Unlike MIDI, MOD files are self-contained, with the samples/voices used being stored inside the file. The original version targeted four-channel sound, and thats what [Tim] is using here.\nAs you can see from the demo video, it sounds great. He pulled it off by using the chips built-in PWM timer. Since the timers duty cycle is determined by a variable that can be changed by DMA, the CPU doesnt end up with very much to do here. In the worst case, with everything in flash memory instead of SRAM, the CPU is only taxed at 24%, so theres plenty of power to say, add graphics for a proper demo. Using the existing MODPlay Library, [Tim]s player fits into 4kB of memory, leaving a perfectly-usable 12kB for the MOD file. As far as external components needed, its just an RC filter to get rid of PWM noise.\n[Tim] has put his code up on GitHub for anyone interested, and has perhaps inadvertently cast down another gauntlet for anyone who wants to use these little RISC V microprocessors for musical tasks. If you can do better, please do, let us know.\n\n"}