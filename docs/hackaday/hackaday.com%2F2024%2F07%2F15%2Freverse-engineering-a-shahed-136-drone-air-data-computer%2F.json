{"pubDate": "2024-07-15T18:00:19", "original_title": "Reverse-Engineering a Shahed-136 Drone Air Data Computer", "link": "https://hackaday.com/2024/07/15/reverse-engineering-a-shahed-136-drone-air-data-computer/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/07/shahed-136_air_data_computer_module_with_labels.jpg", "youtube": "https://www.youtube.com/watch?v=PI8aGYTlvJQ", "original_content": "Top of the air data computer module, with pressure sensors, RS232 driver and DC-DC converter visible. (Credit: Le Labo de Michel, YouTube)\nAn air data computer (ADC) is a crucial part of an avionics package that can calculate the altitude, vertical speed, air speed and more from pressure (via pitot tubes) and temperature inputs. When your airplane is a one-way attack drone like Irans Shahed-136, you obviously need an ADC as well, but have to focus on making it both cheap and circumvent a myriad of sanctions. As [Michel] recently found out while reverse-engineering one of these ADCs. Courtesy of the Russo-Ukrainian war, hundreds of these Shahed drones are being destroyed every month, with some making it back down again intact enough for some parts to end up on EBay.\nThe overall design as captured in the schematic is rather straightforward, with the component choice probably being the most notable, as it uses an STM32G071 MCU and Analog Devices ADM3232 RS-232 driver, in addition to the two pressure sensors (by Silicon Microstructures Inc., now owned by TE). The DC-DC converter is a Mornsun URB24055-6WR3.\nWith the board in working condition, [Michel] hooks it up to a test setup to see the output on the serial interface when applying different pressures to the pressure sensor inputs. This results in a lot of ASCII data being output, all containing different values that were calculated by the firmware on the STM32 MCU. In the drone this data would then be used by the flight computer to make adjustments. Overall its a rather basic design that doesnt seem to have a dedicated temperature sensor either, though [Michel] is still analyzing some details. A firmware dump would of course be rather fascinating as well.\n\n", "title": "\u822a\u7a7a\u30c7\u30fc\u30bf\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u9006\u89e3\u6790\uff1aSTM32G071 MCU\u3092\u4f7f\u7528\u3057\u305fADC", "body": "\u822a\u7a7a\u6a5f\u7528\u306e\u30a8\u30a2\u30c7\u30fc\u30bf\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\uff08ADC\uff09\u306f\u3001AV\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u91cd\u8981\u90e8\u5206\u3067\u3042\u308a\u3001\u5727\u529b\u3084\u6e29\u5ea6\u5165\u529b\u304b\u3089\u9ad8\u5ea6\u3001\u4e0a\u6607\u901f\u5ea6\u3001\u901f\u5ea6\u306a\u3069\u3092\u8a08\u7b97\u3067\u304d\u308b\u3002\u30a4\u30e9\u30f3\u306e\u653b\u6483\u30c9\u30ed\u30fc\u30f3\u3067\u3042\u308b\u30b7\u30e3\u30d8\u30fc\u30c9-136\u306b\u3082\u5fc5\u8981\u3067\u3001\u8cbb\u7528\u5bfe\u52b9\u679c\u3092\u91cd\u8996\u3057\u306a\u304c\u3089\u8a2d\u8a08\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3002", "titles": ["\u822a\u7a7a\u30c7\u30fc\u30bf\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u9006\u89e3\u6790\uff1aSTM32G071 MCU\u3092\u4f7f\u7528\u3057\u305fADC", "\u30a4\u30e9\u30f3\u306e\u653b\u6483\u30c9\u30ed\u30fc\u30f3\u3067\u4f7f\u7528\u3055\u308c\u308b\u822a\u7a7a\u30c7\u30fc\u30bf\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u69cb\u9020", "STM32G071 MCU\u3092\u642d\u8f09\u3057\u305f\u822a\u7a7a\u30c7\u30fc\u30bf\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u30ea\u30d0\u30fc\u30b9\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0", "\u30c9\u30ed\u30fc\u30f3\u7528\u822a\u7a7a\u30c7\u30fc\u30bf\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u8981\u7d20\u89e3\u6790", "\u822a\u7a7a\u30c7\u30fc\u30bf\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u69cb\u9020\u3068\u6a5f\u80fd\uff1a\u98db\u884c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3078\u306e\u30c7\u30fc\u30bf\u51fa\u529b"]}