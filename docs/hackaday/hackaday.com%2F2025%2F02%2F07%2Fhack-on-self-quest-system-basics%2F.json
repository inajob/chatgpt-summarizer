{"pubDate": "2025-02-07T18:00:19", "original_title": "Hack On Self: Quest System Basics", "link": "https://hackaday.com/2025/02/07/hack-on-self-quest-system-basics/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/08/HackSelf.jpg", "original_content": "Whenever I play an RPG, whether its Fallout or Cyberpunk 2077, I complete every single quest available to me. The quests grab my attention in an unprecedented way  doesnt hurt that theres rewards and progression markers attached. Of course, these systems are meticulously designed to grab attention, making sure you can enjoy the entirety of the games content.\nDoes quest progression in an RPG tangibly impact my life? No. Do they have control over my attention? Yes, for sure. My day-to-day existence is the opposite  my real-life decisions impact me significantly, and yet, keeping attention on them is a struggle. Puzzling, disturbing  and curious. I feel like Ill never forgive myself if I ignore this problem any longer.\nSo, I wrote a simple quest system prototype. As usual, it worked, it failed, and it taught me things. Heres how I did it.\n\nAdjusted To Self First\nQuick prototyping is a bane of mine, and Im forced to study it  I can only spend so much time on any given topic before I can barely pay attention to it. So, no fancy UIs, no roadmaps, Im writing software that has the lowest interaction resistance possible for me specifically.\nMy laptop remains my platform of choice  Im no phone app developer, really, I hate developing for smartphones. Modern smartphones are content consumption machines first, everything else second, and it feels like the users actual wellbeing is barely in the top 10. Besides, typing on a physical keyboard is the fastest prototyping and hardware interaction method I know. Smartphones no longer have physical keyboards, you know, the focus on content consumption means that screen real estate is king.\nOh, and I do have Notepad++ constantly open on my laptop! What about storing my quests in a text file, say, quests.txt, in a somewhat computer-friendly format? Then, a constantly running program could reads changes from this file, rewriting it when appropriate. Sounds simple enough, and so the parser.py was born.\nI had a few wishes for this program. The main one was: never deleting any file contents by mistake or to enforce structure; everything I type into the file is important and cant be lost. Aside from that, leaving comments on tasks and quests felt paramount, too  the text file isnt just a data storage, its a user interface, and it needs human-friendly features.\n\n\n\n\nAt the same time, I needed to make it software-friendly  always parseable and modifiable, letting me do things like automatically marking quest tasks as complete or incomplete, or tying task completion into each other, or auto-marking them, or tying them to real-world events. This resulted in two main features: a rigid-ish structure for quest formatting, and auto-adding machine-parseable quest IDs. Still, I made sure it was easy for me to edit quests and tasks, and put the IDs somewhere they wouldnt get in the way!\nBuilt, Tweaked, Working\nA day-two was spent intensely building parser.py into a self-sufficient prototype, and it grew from 20 lines of parsing code experiment into a full program, left to constantly run in the background monitoring for quests.txt file changes. Then, I split my Notepad++ window into two panes, and put the quests.txt document into one of them, open semi-permanently  thankfully, my laptop screen is wide enough for that.\nEasy enough to use day to day, always at my fingertips, collecting data  this script satisfied a few of my human-friendly device design guidelines. I went on making new quests and adding tasks as I remembered them, as well as updating the script itself, adding features and fixing bugs as needed. For brevity, Ill call this whole process questing.\n\n\n\n\nThe most useful feature, without a doubt, was auto-sorting quest tasks, so that completed tasks would immediately go to the bottom of the quests task list  way easier on the eyes. Another feature was task completion/clear logging, as usual, JSON separated by newlines  which unexpectedly gave me timestamps that helped me remember and track time-sensitive medication.\nSome features were less expected but still necessary. I am intimately familiar with data loss, so I wrote a quick quests.txt backup script, and added a daily task for myself  do backups. As luck would have it, I accidentally deleted half of the quests.txt file contents, just as I was about to back it up. So, I had to spend about an hour restoring the file state from the day-old backup file and task log items  those really came in handy!\nIve used the script for about a month  quite a jump from the two weeks constant. A lot of smaller hack-on-self projects stay in my life for two weeks at most  any longer than that, and I struggle to pay attention to them. This one worked for longer  a very good sign. Most importantly, even though Im currently not using this questing system, I keep mentally coming back to it throughout my days, and my main thought is wish it worked better for me right now.\nA Focus Point\nThe best thing about this questing system, I started building habits at a surprisingly fast rate. This was genuinely shocking, in all of the good ways, and seriously reassuring. The questing system helped me find some extra focus  as long as I stayed within the dailies quest, that is.\nOne thing about .txt file as frontend  to have the file be processed, I need to Ctrl+S, alt-tab to other program, alt-tab back, and click Yes in this box.\nThe Dailies quest was the only one that actually worked all throughout. As Ive added quests and tasks, the file grew a ton, currently sitting at 530 lines. Well, my screen fits 40 lines at a time, so most quests stayed always out of reach, easy to forget  just the Dailies quest has 80 lines. There was no ability to highlight tasks I wanted to suggest to myself, or to make a task stand out as more important.\nThe main limiter this questing system was definitely the UI  the more it grew, the harder it was for me to scroll through the text file and notice the tasks I needed to do. In a way, the system was a good augment, helping me overcome my struggles with Doing All The Things I Want Done, until it grew to the point where it no longer gave me a consistent single point of focus, an always-accessible line in the .txt file that I could look at to spot my daily-tasks-to-do. Its a predictable limitation of the text file UI, and I could only push it so much.\nThere was another fun failure mode: the more I used the script, the more I did things in the real world, the less Id be spending next to my laptop. On days where I wasnt next to my laptop, the scripts powers would break completely, of course. Basically, the more off-my-laptop tasks I was doing, the less my script would work  so much for helping me exercise, move, and get out more!\nDailies were the most fun part of the system, still  as Im writing this, Im becoming more and more certain that this UI could work well for me again if I did a few more upgrades to it and limited it to the Dailies quest. So, same interface but less overwhelming, a tighter focus, and a few more most-needed ease of use features  feels like I should try that out sometime soon!\nLessons\nA lot of fruit lays unpicked on the parser.py field, even with the current text-file UI. Automatically marking all of the Dailies tasks completed on a start of day trigger, for one! Reminders for medication. Tracking underappreciated daily tasks, giving me summaries or notifications that point out daily tasks Ive been neglecting but might still want to do. Quick action keybinds for common actions, just like I do with my anti-crash and anti-distraction scripts, so that I can quickly mark common tasks as completed  without having to unlock my laptop, find the task in the file, and mark it as complete. Graphing of my activity, too, of course it always feels like graphing my data will give some good insights, but its not easy for me to do just yet  hopefully it will be easy soon!\nNo regrets on picking text file as the UIbackend for the initial prototype, though! Id do it the same all over again  the flexibility has really helped. I even think that a text file format is a great UI for desktop using the quest system  as long as its not the backend, so, the quests are actually stored somewhere else. Basically, an editing option, or a human-readable backup format, we could always use more of those.\nWhat about features I could implement given a different UI and backend? More context sensitivity, for one. For example, suggestions on tasks to do depending on how long Ive been awake, where I am physically right now (home/work/travel/etc), and other context thats relatively easy to get but still missing. Cross-device task control and sync. Perhaps, the most fun aspect  a points/levels score keeping system, maybe even with streak features!\nThe concept works, even if it struggles to scale. It needs a better UI, a way more well-suited backend, tighter integration into my day-to-day life, influencing me in a more context-aware and kind way. Quests are good, the current system is good, and it will work better after an upgrade. In particular, you are soon to see a way more suitable and flashy user interface  as always, stay tuned!", "title": "- RPG\u30b9\u30bf\u30a4\u30eb\u306e\u30af\u30a8\u30b9\u30c8\u30b7\u30b9\u30c6\u30e0\u3092\u65e5\u5e38\u751f\u6d3b\u306b\u5fdc\u7528\u3059\u308b\u65b9\u6cd5", "body": "RPG\u306e\u30af\u30a8\u30b9\u30c8\u30b7\u30b9\u30c6\u30e0\u304b\u3089\u30d2\u30f3\u30c8\u3092\u5f97\u3066\u3001\u81ea\u5df1\u7ba1\u7406\u7528\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u30bf\u30b9\u30af\u7ba1\u7406\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3002", "titles": ["- RPG\u30b9\u30bf\u30a4\u30eb\u306e\u30af\u30a8\u30b9\u30c8\u30b7\u30b9\u30c6\u30e0\u3092\u65e5\u5e38\u751f\u6d3b\u306b\u5fdc\u7528\u3059\u308b\u65b9\u6cd5", "- \u81ea\u5206\u5c02\u7528\u306e\u30af\u30a8\u30b9\u30c8\u7ba1\u7406\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u4f5c\u6210\u3059\u308b\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7", "- \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3057\u305f\u52b9\u7387\u7684\u306a\u30bf\u30b9\u30af\u7ba1\u7406\u306e\u5b9f\u8df5", "- \u65e5\u5e38\u306e\u96c6\u4e2d\u529b\u3092\u9ad8\u3081\u308b\u305f\u3081\u306e\u30af\u30a8\u30b9\u30c8\u30b7\u30b9\u30c6\u30e0\u306e\u52b9\u679c", "- \u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u6539\u5584\u3092\u76ee\u6307\u3059\u30bf\u30b9\u30af\u7ba1\u7406\u306e\u9032\u5316"]}