{"pubDate": "2024-11-08T15:00:09", "original_title": "This Week in Security: Linux VMs, Real AI CVEs, and Backscatter TOR DoS", "link": "https://hackaday.com/2024/11/08/this-week-in-security-linux-vms-real-ai-cves-and-backscatter-tor-dos/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/01/darkarts.jpg", "original_content": "Steve Ballmer famously called Linux viral, with some not-entirely coherent complaints about the OS. In a hilarious instance of life imitating art, Windows machines are now getting attacked through malicious Linux VM images distributed through phishing emails.\nThis approach seems to be intended to fool any anti-malware software that may be running. The VM includes the chisel tool, described as a fast TCP/UDP tunnel, transported over HTTP, secured via SSH. Now thats an interesting protocol stack. Its an obvious advantage for an attacker to have a Linux VM right on a target network. As this sort of virtualization does require hardware virtualization, it might be worth disabling the virtualization extensions in BIOS if they arent needed on a particular machine.\nAI Finds Real CVE\nWeve talked about some rather unfortunate use of AI, where aspiring security researchers asked an LLM to find vulnerabilities in a project like curl, and then completely wasted a maintainers time on those bogus reports. We happened to interview Daniel Stenberg on FLOSS Weekly this week, and after he recounted this story, we mused that there might be a real opportunity to use LLMs to find vulnerabilities, when used as a way to direct fuzzing, and when combined with a good test suite.\nAnd now, we have Google Project Zero bringing news of their Big Sleep LLM project finding a real-world vulnerability in SQLite. This tool was previously called Project Naptime, and while its not strictly a fuzzer, it does share some similarities. The main one being that both tools take their educated guesses and run that data through the real program code, to positively verify that there is a problem. With this proof of concept demonstrated, its sure to be replicated. It seems inevitable that someone will next try to get an LLM to not only find the vulnerability, but also find an appropriate fix.\nSlipping Between Parsers\nSomething else interesting from our conversation with Daniel was the trurl tool, that makes the curl url parser available as a standalone tool. The point being that there are often security problems that arise from handling URLs and other user-provided data with different parsers. And thats the story [Andrea Menin] has to tell, taking a look at how file parsers handle file uploads a bit differently.\nMore specifically, Web Application Firewalls (WAFs) check a handful of metrics on file uploads, like the file extension, MIME Type, the magic first few bytes of the file, file size, filename sanitization, and more. This gets complicated when an application uses multipart/form-data. Files and parameters get chunked, separated by boundary delimiter strings.\nSo one trick is to hide strings that the WAF would normally block, by sneaking them inside a multipart upload. Another trick is to use the same name field multiple times. The WAF may ignore the repeated names, and the application itself may not ignore the repetition in the same way. There are many more, from inconsistent quotes, to omitting an expected carriage return in the upload, to failing to mention that your filename contains UTF characters.\nBackscatter TOR DoS\n[delroth] got a nasty surprise. He got an abuse@ email, letting him know that one of his server VMs was sending SSH probes around the Internet. Unless youre SSH scanning on purpose, thats not a good surprise. Thats bad for two reasons. First off, it really implies that your server has been compromised. And second, its going to put your IP on multiple spam and abuse blacklists.\nThe natural response was to start looking for malware. The likely culprits were a Syncthing relay, a Mastodon instance, a Tor relay, and a Matrix server. The odd thing was that none of those services showed signs of compromise. The breakthrough came when [delroth] started looking close at port 22 traffic captured by a running tcpdump. No outgoing packets were getting captured, but TCP reset packets were coming in.\nAnd really, thats the whole trick: Send bogus SSH packets from a spoofed IP address, to a bunch of servers around the Internet, and some of them will generate complaints. Anyone can generate raw packets with spoofed IP addresses. The catch is that not everyone can successfully send that traffic, since many ISPs do BCP38 scrubbing, where impossible traffic gets dropped. This traffic was impossible, since those source IPs were coming from the wrong network.\nThe only real question is why? The answer seems to be TOR. While [delroth] does run a TOR node, its not an exit node, which is usually enough to keep the IP out of trouble. While TOR does make some guarantees about traffic anonymity, it doesnt make any guarantees about hiding the IPs of network nodes. And it seems that its recently become someones hobby to trigger exactly these attacks on TOR nodes.\nBits and Bytes\nA pair of developers have started working on hardening for the PHP language and server components. That means adding back safe-unlink, doing memory isolation to make heap spraying harder, and removing trivial ways to trivially get powerful primitives. PHP may not be the cool kid on the block any more, but its still very widely used, and making exploitation just a bit harder is a clear win.\nCiscos Unified Industrial Wireless Software had a trivial command injection attack allowing for arbitrary command execution as root. This was limited to devices running with Ultra-Reliable Wireless Backhaul mode turned on. So far this flaw hasnt been found in real attacks, but such a flaw in industrial equipment isnt great.\nAnd finally, Electronic Arts had an improperly secured web API endpoint, and [Sean Kahler] found it and started looking around. It turns out that API included a swagger json, which documents the entire API. Score! In the end, the API allowed for moving a persona from one account to another, and that eventually allows for full account takeover. Yikes.", "title": "\u300cLinux\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u5229\u7528\u3057\u305f\u65b0\u305f\u306a\u653b\u6483\u624b\u6cd5\u3068\u306f\uff1f\u300d", "body": "Linux\u304cWindows\u3092\u653b\u6483\u3059\u308b\u624b\u6cd5\u304c\u5897\u52a0\u3002AI\u304cSQLite\u306e\u8106\u5f31\u6027\u767a\u898b\u3002PHP\u3084Cisco\u306a\u3069\u3067\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316\u304c\u9032\u884c\u3002", "titles": ["\u300cLinux\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u5229\u7528\u3057\u305f\u65b0\u305f\u306a\u653b\u6483\u624b\u6cd5\u3068\u306f\uff1f\u300d", "\u300cAI\u3092\u6d3b\u7528\u3057\u305f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8106\u5f31\u6027\u767a\u898b\u306e\u53ef\u80fd\u6027\u300d", "\u300cURL\u30d1\u30fc\u30b5\u30fc\u306e\u5b89\u5168\u6027\u3068\u30c8\u30ea\u30c3\u30af\u624b\u6cd5\u306e\u7d39\u4ecb\u300d", "\u300cTOR\u30ce\u30fc\u30c9\u3092\u72d9\u3063\u305fDoS\u653b\u6483\u306e\u5b9f\u614b\u300d", "\u300cPHP\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316\u3068\u6700\u65b0\u306e\u8106\u5f31\u6027\u60c5\u5831\u300d"]}