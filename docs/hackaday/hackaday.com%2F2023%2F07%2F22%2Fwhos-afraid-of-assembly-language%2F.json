{"pubDate": "2023-07-22T14:00:49", "original_title": "Who\u2019s Afraid of Assembly Language?", "link": "https://hackaday.com/2023/07/22/whos-afraid-of-assembly-language/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/08/turingtapes.jpg", "original_content": "This week, [Al Williams] wrote a great thought piece about whether or not it was worth learning an assembly language at all anymore, and when. The comments overflowed, and we\u2019re surprised that so many people basically agree with us: yes. Of course, it\u2019s a Hackaday crowd, but I still didn\u2019t expect the outpouring of love for the most primitive of languages.\nAssembly language isn\u2019t really one language, though. Every chip speaks its own dialect. Of course there are similarities: every CPU has an add function, right? But almost no CPU has just one add \u2013 there are variants with and without carry, storing and reading from working registers or RAM. And once you start talking about memory access, direct or indirect, the individual architectures of the chips demand different assembly languages.\nBut still, although the particular ways that CPUs do what they do can be incompatible from a strictly language perspective, they are a lot more similar in terms of the programming idioms that you\u2019ll pick up along the way. Just as learning a set of solid algorithms will help you no matter which higher-level language you use, learning the concepts behind crafting loops and simple memory structures out of raw assembly language will serve you no matter which CPU you choose.\nI have only written assembly language for a handful of CPUs, and not much of it at that, but I\u2019ve found the microcontrollers to be the friendliest. So if you want to dip your toes in that water, pick up an AVR or an MSP430. Or maybe even the new hotness \u2013 a RISC-V. You\u2019ll find the instruction sets small enough that you have to do most of the work yourself. And that is, after all, the point of learning an assembly language: learning to think like the silicon. If you treat it like a fun puzzle to solve, you\u2019ll probably even enjoy the experience.\n[Al]\u2019s original question was when you should learn an assembly language: before or after a higher-level language. For 99% of our readers, I\u2019d say the answer is right now.\n\nThis article is part of the Hackaday.com newsletter, delivered every seven days for each of the last 200+ weeks. It also includes our favorite articles from the last seven days that you can see on the web version of the newsletter.\n\nWant this type of article to hit your inbox every Friday morning? You should sign up!\n\n", "title": "\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u5b66\u7fd2\u306e\u4fa1\u5024\u3092\u8003\u3048\u308b", "body": "\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u306e\u5b66\u7fd2\u306f\u4f9d\u7136\u91cd\u8981\u3067\u3001\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u7406\u89e3\u306b\u5f79\u7acb\u3064\u3002\u7279\u306b\u30de\u30a4\u30b3\u30f3\u306f\u521d\u5fc3\u8005\u306b\u5411\u3044\u3066\u3044\u308b\u3002\u9ad8\u6c34\u6e96\u8a00\u8a9e\u306e\u5b66\u7fd2\u524d\u5f8c\u3068\u554f\u308f\u305a\u59cb\u3081\u308b\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3059\u308b\u3002", "titles": ["\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u5b66\u7fd2\u306e\u4fa1\u5024\u3092\u8003\u3048\u308b", "\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u306f\u3069\u306eCPU\u306b\u3082\u9069\u7528\u53ef\u80fd", "\u30de\u30a4\u30b3\u30f3\u304c\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u5b66\u7fd2\u306b\u6700\u9069", "\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u5b66\u7fd2\u306e\u6642\u671f\u306f\u3044\u3064\u304c\u6700\u9069\u304b\u8003\u3048\u308b", "\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u5b66\u7fd2\u306f\u9ad8\u3044\u30ec\u30d9\u30eb\u306e\u8a00\u8a9e\u306e\u524d\u306b\u5b66\u3076\u3079\u304d\u304b"]}