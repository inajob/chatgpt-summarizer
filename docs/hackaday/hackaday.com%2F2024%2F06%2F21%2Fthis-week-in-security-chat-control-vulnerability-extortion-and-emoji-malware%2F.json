{"pubDate": "2024-06-21T14:00:38", "original_title": "This Week in Security: Chat Control, Vulnerability Extortion, and Emoji Malware", "link": "https://hackaday.com/2024/06/21/this-week-in-security-chat-control-vulnerability-extortion-and-emoji-malware/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/01/darkarts.jpg", "original_content": "Way back in 2020, I actually read the proposed US legislation known as EARN IT, and with some controversy, concluded that much of the criticism of that bill was inaccurate. Well whats old is new again, except this time its the European Union thats wrestling with how to police online Child Sexual Abuse Material (CSAM). And from what I can tell of reading the actual legislation (pdf), this time it really is that bad.\nThe legislation lays out two primary goals, both of them problematic. The first is detection, or what some are calling upload moderation. The technical details are completely omitted here, simply stating that services  take reasonable measures to mitigate the risk of their services being misused for such abuse  The implication here is that providers would do some sort of automated scanning to detect illicit text or visuals, but exactly what constitutes reasonable measures is left unspecified.\nThe second goal is the detection order. Its worth pointing out that interpersonal communication services are explicitly mentioned as required to implement these goals. From the bill:\nProviders of hosting services and providers of interpersonal communications services that have received a detection order shall execute it by installing and operating technologies approved by the Commission to detect the dissemination of known or new child sexual abuse material or the solicitation of children\nThis bill is careful not to prohibit end-to-end encryption, nor require that such encryption be backdoored. Instead, it requires that the apps themselves be backdoored, to spy on users before encryption happens. No wonder Meredith Whittaker has promised to pull the Signal app out of the EU if it becomes law. As this scanning is done prior to encryption, its technically not breaking end-to-end encryption.\nYou may wonder why thats such a big deal. Why is it a non-negotiable for the Signal app to not look for CSAM in messages prior to encryption? For starters, its a violation of user trust and an intentional weakening of the security of the Signal system. But maybe most importantly, it puts a mechanism in place that will undoubtedly prove too tempting for future governments. If Signal can be forced into looking for CSAM in the EU, why not anti-government speech in China?\n\nThis story is ongoing, with the latest news that the EU has delayed the next step in attempting to ratify the proposal. Its great news, but the future is still uncertain. For more background and analysis, see our conversation with the minds behind Matrix, on this very topic:\n\nBounty or Extortion?\nA bit of drama played out over Twitter this week. The Kraken cryptography exchange had a problem where a deposit could be interrupted, and funds added to the Kraken account without actually transferring funds to back the deposit. A security research group, which turned out to be the CertiK company, discovered and disclosed the flaw via email.\n\nKraken Security Update:\nOn June 9 2024, we received a Bug Bounty program alert from a security researcher. No specifics were initially disclosed, but their email claimed to find an \u201cextremely critical\u201d bug that allowed them to artificially inflate their balance on our platform.\n Nick Percoco (@c7five) June 19, 2024\n\nAll seemed well, and the Kraken team managed to roll a hotfix out in an impressive 47 minutes. But things got weird when they cross referenced the flaw to see if anyone had exploited it. Three accounts had used it to duplicate money. The first use was for all of four dollars, which is consistent with doing legitimate research. But additionally, there were more instances from two other users, totaling close to $3 million in faked transfers  not to mention transfers of *real* money back out of those accounts. Kraken asked for the details and the money back.\nAccording to the Kraken account, the researchers refused, and instead wanted to arrange a call with their business development team. The implication is that the transferred money was serving as a bargaining chip to request a higher bug bounty payout. According to Kraken, thats extortion.\nThere is a second side to this story, of course. CertiK has a response on their x.com account where they claim to have wanted to return the transferred money, but they were just testing Krakens risk control system. There are things about this story that seem odd. At the very least, its unwise to transfer stolen currency in this way. At worst, this was an attempt at real theft that was thwarted. The end result is that the funds were eventually completed.\n\nThere are two fundamental problems with vuln disclosure/bounty:#1 companies think security researchers are trying to extort them when they are not#2 security researchers trying to extort companies https://t.co/I7vnk3oXi5\n Robert Graham \ud835\udd4f (@ErrataRob) June 20, 2024\n\nReport Bug, Get Nastygram\nFor the other side of the coin, [Lemon] found a trivial flaw in a traffic controller system. After turning it in, he was rewarded with an odd letter that was a combination of thank you and your work may have constituted a violation of the Computer Fraud and Abuse Act. This is not how you respond to responsible disclosure.\n\nI received my first cease and desist for responsibly  disclosing a critical vulnerability that gives a remote unauthenticated attacker full access to modify a traffic controller and change stoplights. Does this make me a Security Researcher now? pic.twitter.com/ftW35DxqeF\n Lemon (@Lemonitup) June 18, 2024\n\nEmoji Malware\nWe dont talk much about malware in South Asia, but this is an interesting one. DISGOMOJI is a malware attributed to a Pakistani group, mainly targeting government Linux machines in India. What really makes it notable is that the command and control system uses emoji in Discord channels. The camera emoji instructs the malware to take a screenshot. A fox triggers a hoovering of the Firefox profiles, and so on. Cute!\nUsing Roundcube to break PHP\nThis is a slow moving vulnerability, giving that the core is a 24-year old buffer overflow in iconv() in glibc. [Charles Fol] found this issue, which can pop up when using iconv() to convert to the ISO-2022-CN-EXT character set, and has been working on how to actually trigger the bug in a useful way. Enter PHP. OK, thats not entirely accurate, since the crash was originally found in PHP. Its more like were giving up on finding something else, and going back to PHP.\nThe core vulnerability can only overwrite one, two, or three bytes past the end of a buffer. To make use of that, the PHP bucket structure can be used. This is a growable doubly-linked list that is used for data handling. Chunked HTTP messages can be used to build a multi-bucket structure, and triggering the iconv() flaw overwrites one of the pointers in that structure. Bumping that pointer by a few bytes lands in attacker controlled data, which can land in a fake data structure, and continuing the dechunking procedure gives us an arbitrary memory write. At that point, a function pointer just has to be pointed at system() for code execution.\nThats a great theoretical attack chain, but actually getting there in the wild is less straightforward. There has been a notable web application identified that is vulnerable: Roundcube. Upon sending an email, the user can specify the addresses, as well as the character set parameter. Roundcube makes an iconv() call, triggering the core vulnerability. And thus an authenticated user has a path to remote code execution.\nBits and Bytes\nSpeaking of email, do you know the characters that are allowed in an email address? Did you know that the local user part of an email address can be a quoted string, with many special characters allowed? I wonder if every mail server and email security device realized that quirk? Apparently not, at least in the case of MailCleaner, which had a set of flaws allowing such an email to lead to full appliance takeover. Keep an eye out for other devices and applications to fall to this same quirk.\nNextcloud has a pair of vulnerabilities to pay attention to, with the first being an issue where a user with read and share permissions to an object could reshare it with additional permissions. The second is more troubling, giving an attacker a potential method to bypass a two-factor authentication requirement. Fixes are available.\nPointed out by [Herr Brain] on Hackadays Discord, we have a bit of bad news about the Arm Memory Tagging Extensions (MTE) security feature. Namely, speculative execution can reveal the needed MTE tags about 95% of the time. While this is significant, there is a bit of chicken-and-egg problem for attackers, as MTE is primarily useful to prevent running arbitrary code at all, which is the most straightforward way to achieve a speculative attack to start with.\nAnd finally, over at Google Project Zero, [Seth Jenkins] has a report on a trio of Android devices, and finding vulnerabilities in their respective kernel drivers. In each case, the vulnerable drivers can be accessed from unprivileged applications. [Seth]s opinion is that as the Android core code gets tighter and more secure, these third-party drivers of potentially questionable code quality will quickly become the target of choice for attack.", "title": "EU\u306eCSAM\u898f\u5236\u306b\u3064\u3044\u3066\uff1a\u30e1\u30c3\u30bb\u30fc\u30b8\u6697\u53f7\u5316\u524d\u306e\u30b9\u30ad\u30e3\u30f3\u3078\u306e\u61f8\u5ff5", "body": "2020\u5e74\u306bEARN IT\u6cd5\u6848\u3092\u8aad\u307f\u3001\u305d\u306e\u6279\u5224\u306f\u4e0d\u6b63\u78ba\u3060\u3068\u7d50\u8ad6\u3002\u4eca\u5ea6\u306f\u6b27\u5dde\u9023\u5408\u304c\u30aa\u30f3\u30e9\u30a4\u30f3\u5b50\u4f9b\u3078\u306e\u6027\u7684\u8650\u5f85\u7269\u8cea\u306e\u76e3\u8996\u3092\u554f\u984c\u8996\u3002\u6cd5\u5f8b\u306f2\u3064\u306e\u76ee\u6a19\u3092\u793a\u3057\u3001Signal\u30a2\u30d7\u30ea\u3092EU\u304b\u3089\u64a4\u9000\u306b\u8ffd\u3044\u8fbc\u3080\u304b\u3082\u3002", "titles": ["EU\u306eCSAM\u898f\u5236\u306b\u3064\u3044\u3066\uff1a\u30e1\u30c3\u30bb\u30fc\u30b8\u6697\u53f7\u5316\u524d\u306e\u30b9\u30ad\u30e3\u30f3\u3078\u306e\u61f8\u5ff5", "Kraken\u306eBug Bounty\uff1a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u7814\u7a76\u8005\u3068\u306e\u653b\u9632", "\u60aa\u7528\u3055\u308c\u308b\u304b\uff1f\u8106\u5f31\u6027\u958b\u793a\u3068\u5831\u5968\u91d1\u5236\u5ea6\u306e\u554f\u984c", "\u30d1\u30ad\u30b9\u30bf\u30f3\u306eDISGOMOJI\u30de\u30eb\u30a6\u30a7\u30a2\uff1a\u30a4\u30f3\u30c9\u653f\u5e9cLinux\u3092\u6a19\u7684", "PHP\u3067\u306e\u8106\u5f31\u6027\u306e\u60aa\u7528\uff1aRoundcube\u306e\u30ea\u30e2\u30fc\u30c8\u30b3\u30fc\u30c9\u5b9f\u884c\u53ef\u80fd\u6027"]}