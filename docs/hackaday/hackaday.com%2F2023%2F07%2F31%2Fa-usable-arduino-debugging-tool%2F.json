{"pubDate": "2023-07-31T18:30:35", "original_title": "A Usable Arduino Debugging Tool", "link": "https://hackaday.com/2023/07/31/a-usable-arduino-debugging-tool/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/07/eye2see-featured.jpg", "original_content": "For as popular as the Arduino platform is, its not without its problems. Among those is the fact that most practical debugging is often done by placing various print statements throughout the code and watching for them in the serial monitor. Theres not really a great way of placing breakpoints or stepping through code, either. But this project, known as eye2see, hopes to change that by using the i2c bus found in most Arduinos to provide a more robust set of debugging tools.\nThe eye2see software is set up to run on an Arduino or other compatible microcontroller, called the probe, which is connected to the i2c bus on another Arduino whose code needs to be debugged. Code running on this Arduino, which is part of the eye2see library, allows it to send debugging information to the eye2see probe. With a screen, the probe can act as a much more powerful debugger than would otherwise typically be available, being able to keep track of variables in the main program, setting up breakpoints, and outputting various messages on its screen.\nThe tool is not without its downsides, though. The library that needs to run on the host Arduino slows down the original program significantly. But for more complex programs, the tradeoff with powerful debugging tools may be worth it until these pieces of code can be removed and the program allowed to run unencumbered. If youd like to skip needing to use a second Arduino, weve seen some other tools available for debugging Arduino code that can run straight from a connected PC instead."}