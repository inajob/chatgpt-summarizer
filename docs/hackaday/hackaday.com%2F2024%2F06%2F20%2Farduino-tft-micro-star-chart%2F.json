{"pubDate": "2024-06-20T18:30:01", "original_title": "Arduino + TFT = Micro Star Chart", "link": "https://hackaday.com/2024/06/20/arduino-tft-micro-star-chart/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/06/star.png", "original_content": "We always look at the round LCDs and wonder what to do with them other than, of course, a clock. Well, [shabaz] had a great idea: use it as a star map display. The project combines the Arduino, a round TFT, a GPS receiver, and some external flash memory to store data. You can get by without the GPS receiver or flash memory, but youll lose features if you do.\nWe like how he approached the problem. The project contains four major parts and he developed each part independently before integrating them into a whole. The four parts are: reading the GPS, driving the LCD, providing storage for star data, and determining the position of stars. The heavy lifting is done using some public domain code ported over. This code derives from a book called Astronomical Algorithms and uses the Yale Bright Star Catalog database.\nThe post mentions that the screen might well be a larger rectangular screen and we agree that would make this more usable. Now if you could cram it all into a watch, that might be different. If you want to play with the code, you can actually run the core on Linux. Youll have to settle for a PNG output of the night sky, but that would be handy for debugging.\nWe have seen a star chart in a watch before. While this is more a star chart than a planetarium, we have no doubt the early planetarium builders would be suitably impressed.\n\n", "title": "\u5186\u5f62LCD\u3092\u4f7f\u7528\u3057\u305f\u661f\u56f3\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u88fd\u4f5c\u65b9\u6cd5", "body": "LCD\u3092\u661f\u56f3\u8868\u793a\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3002Arduino\u3068GPS\u30ec\u30b7\u30fc\u30d0\u30fc\u3001\u5916\u90e8\u30d5\u30e9\u30c3\u30b7\u30e5\u30e1\u30e2\u30ea\u3092\u4f7f\u7528\u30024\u3064\u306e\u4e3b\u8981\u90e8\u5206\u304b\u3089\u69cb\u6210\u3055\u308c\u3001Astrologomical Algorithms\u304b\u3089\u6d3e\u751f\u3057\u305f\u516c\u958b\u30b3\u30fc\u30c9\u3092\u4f7f\u7528\u3002\u9577\u65b9\u5f62\u306e\u753b\u9762\u3068\u3057\u3066\u3082\u4f7f\u3048\u308b\u3002", "titles": ["\u5186\u5f62LCD\u3092\u4f7f\u7528\u3057\u305f\u661f\u56f3\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u88fd\u4f5c\u65b9\u6cd5", "Arduino\u3092\u4f7f\u7528\u3057\u305f\u661f\u5ea7\u8868\u793a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a73\u7d30", "GPS\u30ec\u30b7\u30fc\u30d0\u30fc\u3068\u30d5\u30e9\u30c3\u30b7\u30e5\u30e1\u30e2\u30ea\u30fc\u3092\u6d3b\u7528\u3057\u305f\u661f\u5ea7\u5730\u56f3\u306e\u4f5c\u6210", "\u661f\u5ea7\u306e\u4f4d\u7f6e\u6c7a\u5b9a\u306b\u57fa\u3065\u304f\u96fb\u5b50\u5de5\u4f5c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "\u661f\u5ea7\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\u3068\u8868\u793a\u306b\u9069\u3057\u305f\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u7d71\u5408"]}