{"pubDate": "2024-08-30T14:00:53", "original_title": "This Week in Security: The Rest of the IPv6 Story, CVE Hunting, and Hacking the TSA", "link": "https://hackaday.com/2024/08/30/this-week-in-security-the-rest-of-the-ipv6-story-cve-hunting-and-hacking-the-tsa/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/01/darkarts.jpg", "original_content": "We finally have some answers about the Windows IPv6 vulnerability  and a Proof of Concept! The patch was a single change in the Windows TCP/IP drivers Ipv6pProcessOptions(), now calling IppSendError() instead of IppSendErrorList(). Thats not very helpful on its own, which is why [Marcus Hutchins]s analysis is so helpful here. And its not an easy task, since decompiling source code like this doesnt give us variable names.\nThe first question that needs answered is what is the list in question? This code is handling the option field in incoming IPv6 packets. The object being manipulated is a linked list of packet structs. And that linked list is almost always a single member list. When calling IppSendErrorList() on a list with a single member, its functionally equivalent to the IppSendError() in the fixed code. The flaw must be in the handling of this list with multiple members. The only way to achieve that criteria is to send a lot of traffic at the machine in question, so it cant quite keep up with processing packets one at a time. To handle the high throughput, Windows will assemble incoming packets into a linked list and process them in batch.\nSo whats next? IppSendErrorList(), takes a boolean and passes it on to each call of IppSendError(). We dont know what Microsofts variable name is, but [Marcus] is calling it always_send_icmp, because setting it to true means that each packet processed will generate an ICMP packet. The important detail is that IppSendError() can have side effects. There is a codepath where the packet gets reverted, and the processing pointer is set back to the beginning of the packet. Thats fine for the first packet in the list, but because the function processes errors on the entire list of packets, the state of the rest of those packets is now much different from what is expected.\nThis unexpected but of weirdness can be further abused through IPv6 packet fragmentation. With a bit of careful setup, the reversion can cause a length counter to underflow, resulting in data structure corruption, and finally jumping code execution into the packet data. Thats the Remote Code Execution (RCE). And the good news, beyond the IPv6-only nature of the flaw, is that so far its been difficult to actually pull the attack off, as it relies on this somewhat non-deterministic packet coalescing technique to trigger the flaw.\n\nCVE Hunting Made Easy\n[Eddie Zhang] wanted to take the easy road to finding CVEs. To his immense credit, he did not ask ChatGPT to hallucinate vulnerabilities for him, but instead built an automation chain to find possible vulns. The idea is simple: Download as many WordPress plugins as he could, run Semgrep over the corpus, throw the results in a SQL database, and take a closer look at the most promising findings.\nThat starts by writing a SQL query, naturally. The interesting flaws were SELECTed, and then the different plugins run in a test bench setup to try to trigger actual vulnerable code. And its not a bad approach, judging by the 14 CVEs found in 3 afternoons of work.\nMoodle\nRedTeam Pentesting got to have a field day with the Moodle platform. Moodle is a web-based distance learning solution written in PHP. And to get the flavor of how this went, the test grading logic is written in PHP  and eval()d on the server during grading. Now its not quite as bad as it sounds. There is sanitization done, and the set of symbols, characters, and functions are rather limited.\nPHP has a pretty interesting type system. Something like acos(2), inverse of the cosine of 2, returns a result of Not a Number, or NAN. The dot . symbol does string concatenation in PHP, and putting those together, acos(2) . acos(2) results in a string, NANNAN. It gets better, as its then possible to do bitwise manipulation of those strings, eventually unlocking the entire alphabet. A few more tricks like PHPs variable functions, variable variables, and other fun language contortions. Eventually we get to system() and escape into the system.\nHacking the TSA\n[Ian Carroll] and [Sam Curry] bring an unfortunate tale of clever hacking, cover ups, and incompetence. The actual hack is pretty straightforward, a SQL injection in a login system. The real problem is that this login is in the official airline security systems that controls the Known CrewMember and Cockpit Access Security System. Thats the list of people that get to skip TSA checkpoints altogether, and that get access to airplane cockpits in flight. Not good.\nThe good news is that after disclosure, the Department of Homeland Security quickly secured the vulnerable site. The takes a turn for the worse, when it came time for disclosure. TSA issues a factually incorrect statement about what is required to use the KCM system. [Ian] and [Sam] reached out again to try to set the record straight about the severity of the finding. In response, the TSA quietly deleted the FAQ that spells out how bad the vulnerability could be. Not a great look.\nBits and Bytes\nFor your data and packet capture needs, Wireshark 4.4 is out. Among the normal improvements, theres better VoIP support, a handful of new protocols, and some IPv6 tweaks to make life easier.\nEver wondered how to do effective sandboxing in Linux? Hardened Linux has you covered. There are some obvious things like limited filesystem access, but it might be more useful to read about seccomp to limit the available system calls to your sandboxed program. The article is an overview of the individual techniques, and then some of the more popular all-in-one solutions like firejail, bubblewrap, and landlock.\nVolt Typhoon, a collection of hackers believed to be working on behalf of the Chinese government has begun using a vulnerability in Versa Director to attack businesses. Version 22.1.4 of the network management platform fixes the vulnerability, which allowed for executable java filew to be disguised as PNGs and uploaded to the platform.\nAnd finally, one of the sneakier ways to stay on a Linux system is to use udev. For attackers, its always a challenge to make sure the malware starts up on each boot, and yet doesnt attract any attention. There are plenty of places to hide a startup hook, but this one creates a udev rule to automatically run early in boot when the /dev/random device is created. How often do you audit your udev files? Sneaky!"}