{"pubDate": "2024-09-18T08:00:54", "original_title": "From High Level Language to Assembly", "link": "https://hackaday.com/2024/09/18/from-high-level-language-to-assembly/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2016/06/assembly-required-featured.jpg", "original_content": "If you cut your teeth on Z-80 assembly and have dabbled in other assembly languages, you might not find much mystery in creating programs using the next best thing to machine code. However, if you have only used high level languages, assembly can be somewhat daunting. [Shikaan] has an introductory article aimed to get you started at the hello world level of x86-64 assembly language. The second part is already up, too, and covers control structures.\nYou can argue that you may not need to know assembly language these days, and well admit its certainly not as important as it used to be. However, there are unusual cases where you really need either the performance or the small footprint, which is only possible in assembly language. Whats more, it is super useful to be able to read assembly from your high-level tools when something goes wrong.\nOf course, one of the problems is that each assembly language is different. For example, knowing that the x86 assembly doesnt completely transfer to ARM instructions. However, in most cases, the general concepts apply, and it is usually fairly easy to learn your second, third, or fourth instruction set.\nWeve had our own tutorials on this topic. You can also debate if you should learn assembly first or wait, although in this case, the audience is people who waited."}