{"pubDate": "2024-10-24T14:00:40", "original_title": "Hacker Tactic: Building Blocks", "link": "https://hackaday.com/2024/10/24/hacker-tactic-building-blocks/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/04/PCBdesign.jpg", "original_content": "The software and hardware worlds have overlaps, and its worth looking over the fence to see if theres anything you missed. You mightve already noticed that we hackers use PCB modules and devboards in the same way that programmers might use libraries and frameworks. Youll find way more parallels if you think about it.\nBuilding blocks are about belonging to a community, being able to draw from it. Sometimes its a community of one, but you might just find that building blocks help you reach other people easily, touching upon common elements between projects that both you and some other hacker might be planning out. With every building block, you make your or someone elses next project quicker, and maybe you make it possible.\nSometimes, however, building blocks are about being lazy.\n\nJust Throw Pin Headers\nBack when I was giving design review on a LVDS driver board for a Sony Vaio display, there was a snag  the display used, doesnt generate its own backlight voltage, so you have to bring your own backlight driver. Well, I didnt want to bother designing the backlight driver portion of the circuit.\nThe way I justified it, adding that circuit to the board didnt make much sense  the entire board was an experimental circuit, and adding one more experiment onto it would result in extra board revisions and reassemblies. Honestly, though, I just really didnt want to design the LED driver circuit at the time  it didnt feel as interesting.\nSo, I had an easy-to-follow proposal  lets put all backlight-driver-related signals onto three pin headers, forming a module footprint of sorts, and then develop the module separately! The hacker agreed, and in the meantime, used a spare panels LED backlight to test the display in the meantime  way more accessible of a solution. The pin headers remained, at the time, bound to be unpopulated for, at least, until the next PCB order.\nNew revisions of the module came and went, now bearing a HDMI port and a whole new ASIC  easy to design, because, again, the hacker didnt have to worry about the backlight circuit, and just kept the module footprint from the previous design. Was the backlight driver module PCB designed yet? Well, simply put, no.\nA friend of mine, just a month later, was designing a motherboard replacement for a tablet computer, and she asked me for advice on how to power the backlight. I thought for a second, and, I had an easy answer for her  use the module footprint. At that point, I still havent designed the module, but I didnt have to mention that. She rejoiced, put the module footprint onto the board, even designed her own neat symbol for it, and then promptly went on to lay out diffpairs and reverse-engineer pinouts, both significantly more fun activities than designing a backlight driver with zero experience in design of backlight drivers.\nSome time later, I started getting insistent messages from the original hacker, about needing a backlight driver. The funny part is that by that point, I have already had designed a backlight driver circuit for my own Vaio motherboard, but I never felt engaged enough to turn it into a module. A different friend of mine was looking for small projects, however. I gave her the task: heres a footprint for a module, heres a circuit that goes onto the module, and we need a module. Indeed, she has delivered a module  by that point, a module we could put onto three different PCBs.\nBuilding Blocks\nThe entire occasion definitely helped cement my reputation as someone who delivers, eventually  with big emphasis on eventually. It also brought four people and three projects together, and it let us order the first revision PCB way sooner than otherwise, all because we set out to eventually add the backlight circuit as a module. Now, this module is a building block in our projects  whenever one of us, or maybe one of you, needs a backlight driver, we know that we have an option handy.\nI have some unique experiences with PCB modules as building blocks  at one point, Ive built an entire phone out of them, and I still build devices heavily based on modules. Whenever Id have the occasion, Id throw a TP4056 module footprint onto a board instead of reimplementing the whole circuit from scratch. In 2022, I designed a module with a RP2040 and the FUSB302 USB-PD PHY  it was the building block that led to my USB-C series on Hackaday, and eventually helped me, my friends, and other hackers develop a whole lineup of unique USB-C devices.\n\n\n\n\n\n\n\n\nBuilding block use and design is the fun way, and its the lazy way, and its the friendly way  would you believe me if I told you its also the safe way? Say, does your circuit need a custom DC-DC, or can you slap a few pads onto the board to connect a commonplace generic module? If you can afford the increased space, might as well make your board as simple as it goes  if theres less to test and bringup, youll get to your projects finish line earlier, and have less hurdles to jump over.\nThe Practical Aspects\nThere are a few techniques you can use if you want to make a building block  pin headers are the simple obvious one. Castellations is a fun one, and heres a trick  you dont have to pay JLCPCB for castellated holes, as long as you are fine getting dirty ones, which are still wonderful for prototyping. If youre using Aisler, you can get perfect castellated holes, though  good for scaling up a module of yours after youve verified the design. Dont be scared of turning through-holes into castellations  it works, and its super easy if your board is thin enough. Oh, and you might just be able to get castellations through V-Cuts!\nthis module is a mainstay on my 18650 helper boards Ive covered here\nGot an Eastern or Western module, and it doesnt quite use pin headers? Get out the calipers, measure its pads, and create a footprint for it  you will thank yourself later. Ive done just once for a 5 V boost module, stocking up on them and putting them onto a bunch of boards. Its not like Id feel comfortable designing 5 V boost regulators at the time, so the module has bought me a couple years of worrying about something else instead. The modules have since vanished from the market, but, today Ive got a few 5 V boost designs I can easily make modules out of. Now, it looks like I can even upgrade my own old boards that are still in use!\nWhen designing your own boards, try to put all pin headers on a grid, 2.54 mm (0.1in) is a must  only use an integer millimeter grid or pin headers if you have no other options. Such a module isnt just solderable  its breadboardable, which helps a ton when youre trying to figure out an especially daring circuit technique. Castellated modules can be breadboardable, too, if you make sure to concentrate the core necessary signals on two opposite sides!\n\n\n\n\n\nAre you designing a new module for your own use? See if theres a footprint you can copy, or an unspoken standard you can follow. Boards speak about themselves through their looks, and footprints convey a purpose through their layout. Look at the boards above- its pretty easy to notice that they are TP4056 style battery chargers, but all of them upgraded in their own way. If you follow an existing footprint when designing your own board, its going to look more familiar for a newcomer hacker, channeling the power of skeuomorphism where you might not have expected to find it.\nThe Looks Make The Module\nLooking for a PCB form-factor? Going with a Dangerous Prototypes-blessed one brings you a ton of benefits, e.g., pre-made lasercut cases.\nBoard formats are underrated when it comes to accidentally creating building blocks. Sparkfun has example layouts for QWIIC devices  follow it, plop a JST-SH connector on, maybe order your PCB in red for a change, and your sensor PCB will shine in a whole new way in your eyes. Dangerous Prototypes, on the other hand, suggests a set of PCB formats known as Sick of Beige that work with existing enclosures and lasercut templates  thats the surface-level benefit, the real deal is that these footprints also talk the Dangerous Prototypes language. If your programmer board feels like a generic rectangle, putting it into the frame of BusPirate fame will give it the air of hacker-oriented tooling. With both of these formats, you get mounting holes  mark of a hacker who knows whats good.\nLooking for a ToF sensor? Looking at this picture, you can instantly tell that this ones I2C and 3.3V  chances are, it will fit wonderfully into your project.\nInterconnect standards go hand in hand with making your building blocks features recognizable without reading the silkscreen  its why I talk so much about QWIIC, and a JST-SH connector is always a welcome addition on my boards. Adding a well-recognized standard connector makes your board recognizable as a potential building block. Now, the board looks interoperable if you just give it a chance, equipped with a familiar socket, and perhaps, you wont feel as much need for designing a new one  quite likely, building a new device in a single day instead of two weeks time.\nSometimes, your board will be split apart into building blocks without your involvement whatsoever. Publishing a design that goes beyond connecting a button to an LED? Try to fill in the blanks  its about helping the hacker that follows in your footsteps. Sometimes its a highschool kid trying to put together a design, and sometimes itll be you again, just a couple years later. So, note down the part number of that switcher inductor in the schematic, and fill in the values of the resistor divider while youre at it  and if youre revisiting a board of yours where you havent done that, do it, then git commit and git push.\nBeyond The Ordinary\nIn a pinch, rip and tear until its done\nTheres building blocks everywhere for those with the eyes to see. A single-board computer is one, Id argue  a SoM in a DDR footprint is one without a doubt. An engineer once showed me a technique for creating building blocks out of thin air  taking unpopulated leftover large project PCBs, then sawing out the section with the circuit you need. Sometimes, you really only need a single piece of that one Ethernet transceiver circuit, and you need it now  you might have not planned for it, but the Dremel tool forgives all.\nCircuit blocks are an often requested feature in KiCad. At the moment, you can copy-paste portions of a schematic between projects  which is more than good enough for many circuits. Its not as great for switching regulators or MCUs, however, and we cant help but hope to see new advancements in the field soon. Perhaps, one day, youll be able to click a few buttons and turn your favourite USB hub into a circuit block  and from there, who knows, maybe you can fill the void that the NanoHubs eternal out-of-stock state has left in our hearts!", "title": "\u81ea\u4f5c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u52a9\u3051\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u8a2d\u8a08\u306e\u91cd\u8981\u6027", "body": "PCB\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u8a2d\u8a08\u3084\u5171\u540c\u4f5c\u696d\u306b\u4fbf\u5229\u306a\u69cb\u6210\u8981\u7d20\u3067\u3042\u308b\u3002", "titles": ["\u81ea\u4f5c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u52a9\u3051\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u8a2d\u8a08\u306e\u91cd\u8981\u6027", "\u5efa\u8a2d\u7684\u306a\u96fb\u5b50\u5de5\u4f5c\uff1a\u30d4\u30f3\u30d8\u30c3\u30c0\u30fc\u306e\u6d3b\u7528\u6cd5", "\u53cb\u597d\u7684\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\uff1a\u4ed6\u306e\u30cf\u30c3\u30ab\u30fc\u3068\u3064\u306a\u304c\u308b\u30c1\u30e3\u30f3\u30b9", "PCB\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u7528\u3044\u305f\u52b9\u7387\u7684\u306a\u8a2d\u8a08\u306e\u30c6\u30af\u30cb\u30c3\u30af", "\u904e\u53bb\u306e\u7d4c\u9a13\u304b\u3089\u5b66\u3076\u3001\u6210\u529f\u3059\u308b\u96fb\u5b50\u5de5\u4f5c\u306e\u79d8\u8a23"]}