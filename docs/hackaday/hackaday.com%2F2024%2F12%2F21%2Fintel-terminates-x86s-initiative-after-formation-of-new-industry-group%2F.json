{"pubDate": "2024-12-21T15:00:00", "original_title": "Intel Terminates X86S Initiative After Formation of New Industry Group", "link": "https://hackaday.com/2024/12/21/intel-terminates-x86s-initiative-after-formation-of-new-industry-group/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2018/01/intel.jpg", "original_content": "Although the world of the X86 instruction set architecture (ISA) and related ecosystem is often accused of being stale and bloated, we have seen a flurry of recent activity that looks to shake up and set the future course for what is still the main player for desktop, laptop and server systems. Via\u00a0Toms Hardware comes the news that the controversial X86S initiative is now dead and buried. We reported on this proposal when it was first announced and a whitepaper released. This X86S proposal involved stripping 16- and 32-bit features along with rings 1 and 2, along with a host of other legacy features.\nThis comes after the creation of a new x86 advisory group that brings together Intel, AMD, as well as a gaggle of industry giants ranging from HP and Lenovo to Microsoft and Meta. The goal here appears to be to cooperate on any changes and new features in the ISA, which is where the unilateral X86S proposal would clearly have been a poor fit. This means that while X86S is dead, some of the proposed changes may still make it into future x86 processors, much like how AMDs 64-bit extensions to the ISA, except this time itd be done in cooperation.\nIn an industry where competition from ARM especially is getting much stronger these days, it seems logical that x86-oriented companies would seek to cooperate rather than compete. It should also mean that for end users things will get less chaotic as a new Intel or AMD CPU will not suddenly sneak in incompatible extensions. Those of us who remember the fun of the 1990s when x86 CPUs were constantly trying to snipe each other with exclusive features (and unfortunate bugs) will probably appreciate this.", "title": "X86S\u63d0\u6848\u304c\u6d88\u6ec5\u3001\u6b21\u4e16\u4ee3\u30d7\u30ed\u30bb\u30c3\u30b5\u3078\u306e\u5f71\u97ff\u306f\uff1f", "body": "X86S\u63d0\u6848\u306f\u5ec3\u6b62\u3055\u308c\u3001\u65b0\u305f\u306a\u5354\u529b\u4f53\u5236\u304c\u69cb\u7bc9\u4e2d\u3002\u7af6\u4e89\u6fc0\u5316\u306e\u4e2d\u3001\u5b89\u5b9a\u3057\u305f\u4ed5\u69d8\u304c\u671f\u5f85\u3055\u308c\u308b\u3002", "titles": ["X86S\u63d0\u6848\u304c\u6d88\u6ec5\u3001\u6b21\u4e16\u4ee3\u30d7\u30ed\u30bb\u30c3\u30b5\u3078\u306e\u5f71\u97ff\u306f\uff1f", "\u30a4\u30f3\u30c6\u30eb\u3068AMD\u304c\u624b\u3092\u7d44\u3080\uff1a\u65b0\u305f\u306ax86\u30a2\u30c9\u30d0\u30a4\u30b6\u30ea\u30fc\u30b0\u30eb\u30fc\u30d7\u306e\u8a2d\u7acb", "ARM\u7af6\u4e89\u304c\u6fc0\u5316\u3059\u308b\u4e2d\u3067\u306ex86\u4f01\u696d\u306e\u5354\u529b\u306e\u91cd\u8981\u6027", "X86\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u672a\u6765\uff1a\u4e92\u63db\u6027\u306e\u3042\u308b\u9032\u5316\u3092\u76ee\u6307\u3059", "1990\u5e74\u4ee3\u306e\u6559\u8a13\uff1ax86 CPU\u306e\u7af6\u4e89\u304b\u3089\u5354\u529b\u3078\u306e\u5909\u5316"]}