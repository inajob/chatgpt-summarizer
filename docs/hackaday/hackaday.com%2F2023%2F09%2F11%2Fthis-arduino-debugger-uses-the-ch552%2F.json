{"pubDate": "2023-09-11T20:00:35", "original_title": "This Arduino Debugger Uses the CH552", "link": "https://hackaday.com/2023/09/11/this-arduino-debugger-uses-the-ch552/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/09/debug.png", "original_content": "One of the things missing from the classic Arduino experience is debugging. Thats a shame, too, because the chips used have that capability. However, the latest IDE has the ability to work with external debuggers and if you want to get started with a classic ATMega Arduino, [deqing] shows you how to get started with a cheap CH552 8-bit USB microcontroller board as the debugging dongle.\nThe CH552 board in question is a good choice, primarily because it is dirt cheap. There are design files on GitHub (and the firmware), but you could probably pull the same trick with any of the available CH552 breakout boards.\n\nThere was a time when having a god-eye view of your embedded system required an expensive in-circuit emulation system. These were expensive, difficult to deploy, and rare. Then, CPUs started adding debugging hardware right on the chip. A few spare pins on the CPU and some sort of adapter would give you most of what you wanted from an emulation system. Although these adapters are often proprietary, sometimes they arent, or they have been reverse-engineered. If you know the protocol, it is easy enough to get a processor to speak it for you. Thats why you often see, for example, Raspberry Pi Picos debugging other Picos. Theres nothing you cant do a million other ways here, but it is an excellent step-by-step tutorial for getting started without breaking the bank.", "title": "\u5b89\u4fa1\u306aCH552\u30dc\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u305fArduino\u306e\u30c7\u30d0\u30c3\u30b0\u65b9\u6cd5", "body": "\u30a2\u30eb\u30c7\u30a3\u30fc\u30ce\u3067\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3002\u4fbf\u5229\u3067\u5b89\u4fa1\u306aCH552\u30de\u30a4\u30b3\u30f3\u30dc\u30fc\u30c9\u3092\u30c7\u30d0\u30c3\u30b0\u30c9\u30f3\u30b0\u30eb\u3068\u3057\u3066\u4f7f\u7528\u3002\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u77e5\u3063\u3066\u3044\u308c\u3070\u4ed6\u306e\u30de\u30a4\u30b3\u30f3\u3067\u3082\u53ef\u80fd\u3002", "titles": ["\u5b89\u4fa1\u306aCH552\u30dc\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u305fArduino\u306e\u30c7\u30d0\u30c3\u30b0\u65b9\u6cd5", "\u5b89\u4fa1\u306aCH552\u30dc\u30fc\u30c9\u3092\u4f7f\u3063\u3066Arduino\u306e\u30c7\u30d0\u30c3\u30b0\u6a5f\u80fd\u3092\u5f37\u5316\u3059\u308b", "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u6d3b\u7528\u3057\u3066Arduino\u306e\u30c7\u30d0\u30c3\u30b0\u3092\u52b9\u7387\u5316\u3059\u308b\u65b9\u6cd5", "\u304a\u91d1\u3092\u304b\u3051\u305a\u306b\u30c7\u30d0\u30c3\u30b0\u53ef\u80fd\u306aArduino\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b", "\u30c7\u30d0\u30c3\u30b0\u306b\u304a\u91d1\u3092\u304b\u3051\u305a\u306b\u3001Arduino\u3092\u4f7f\u3044\u3053\u306a\u3059\u65b9\u6cd5"]}