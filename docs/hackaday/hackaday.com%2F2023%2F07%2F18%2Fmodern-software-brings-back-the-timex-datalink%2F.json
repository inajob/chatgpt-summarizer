{"pubDate": "2023-07-19T02:00:00", "original_title": "Modern Software Brings Back the Timex Datalink", "link": "https://hackaday.com/2023/07/18/modern-software-brings-back-the-timex-datalink/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/07/datalinklib_feat.jpg", "original_content": "As much as some people on the Internet might like to think  no, Apple did not come up with the idea of the smart watch. Even if you ignore the calculator watches that we imagine a full 60% of Hackaday readers wore at one time or another in their lives, the Timex Datalink was already syncing with computers and pulling down the users list of appointments back in 1994 by decoding the pulses of light produced by a CRT monitor. Hey, it sounded like a good idea at the time.\nUnfortunately, this idea hasnt aged well. The technique doesnt work on more modern displays, and naturally the companion software to generate the flashing patterns was written for Windows 3.1. But thanks to the reverse engineering efforts of [Synthead], you can now sync any version of the Timex Datalink to your computer using nothing more complex than the onboard LED of the Teensy LC or Raspberry Pi Pico.\nTheres actually several different projects working together to make this happen. In place of a CRT, there was an official Timex Datalink Notebook Adapter back in the day that was designed to be used on laptops and featured a single blinking LED. Thats what [Synthead] has recreated with timex-datalink-arduino, allowing a microcontroller to stand in for this gadget and featuring 100% backwards compatibility with the original Datalink software.\nAppointment data is loaded from a text file.\nBut since youre probably not rocking Windows 3.1 anymore, having access to that software is far from a given. Thats why [Synthead] also created timex_datalink_client, which is a Ruby library that lets you generate data fit for upload into the Timex Datalink. At the time of this writing there doesnt seem to be a friendly user interface (graphical or otherwise) for this software, but its easy enough to feed data into it using plain-text configuration files.\nHelpfully [Synthead] provides screenshots of information loaded into the original software, followed by a config file example that accomplishes the same thing. It looks like writing some glue code that pulls your schedule from whatever service you fancy and formats it for the Datalink client should be relatively simple.\nWeve previously seen projects that got the Timex Datalink synced without the need for a CRT, but they still required the original software. To our knowledge, this is the first complete implementation of the Datalink protocol that doesnt rely on any original hardware or software. Expect eBay prices to go up accordingly.", "title": "\u30c6\u30a3\u30f3\u30e1\u30c3\u30af\u30b9\u30fb\u30c7\u30fc\u30bf\u30ea\u30f3\u30af\u3092\u65b0\u3057\u3044\u30c7\u30d0\u30a4\u30b9\u3067\u4f7f\u7528\u3057\u3088\u3046\uff01", "body": "\u30a2\u30c3\u30d7\u30eb\u304c\u30b9\u30de\u30fc\u30c8\u30a6\u30a9\u30c3\u30c1\u306e\u30a2\u30a4\u30c7\u30a2\u3092\u767a\u660e\u3057\u305f\u308f\u3051\u3067\u306f\u306a\u3044\u30021994\u5e74\u306b\u306f\u3059\u3067\u306bTimex Datalink\u304c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3068\u540c\u671f\u3057\u3066\u30a2\u30dd\u30a4\u30f3\u30c8\u30e1\u30f3\u30c8\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002[Synthead]\u306e\u52aa\u529b\u306b\u3088\u308a\u3001Teensy LC\u3084Raspberry Pi Pico\u306eLED\u3092\u4f7f\u7528\u3057\u3066Timex Datalink\u3092\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u540c\u671f\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002", "titles": ["\u30c6\u30a3\u30f3\u30e1\u30c3\u30af\u30b9\u30fb\u30c7\u30fc\u30bf\u30ea\u30f3\u30af\u3092\u65b0\u3057\u3044\u30c7\u30d0\u30a4\u30b9\u3067\u4f7f\u7528\u3057\u3088\u3046\uff01", "\u81ea\u4f5cLED\u30c7\u30d0\u30a4\u30b9\u3067\u30c6\u30a3\u30f3\u30e1\u30c3\u30af\u30b9\u30fb\u30c7\u30fc\u30bf\u30ea\u30f3\u30af\u3092\u30b7\u30f3\u30af\u30ed\u3055\u305b\u308b\u65b9\u6cd5", "Windows 3.1\u4ee5\u5916\u3067\u3082\u30c6\u30a3\u30f3\u30e1\u30c3\u30af\u30b9\u30fb\u30c7\u30fc\u30bf\u30ea\u30f3\u30af\u3092\u4f7f\u3046\u65b9\u6cd5", "Ruby\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u30c6\u30a3\u30f3\u30e1\u30c3\u30af\u30b9\u30fb\u30c7\u30fc\u30bf\u30ea\u30f3\u30af\u306b\u30c7\u30fc\u30bf\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u65b9\u6cd5", "\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3084\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306a\u3057\u3067\u30c6\u30a3\u30f3\u30e1\u30c3\u30af\u30b9\u30fb\u30c7\u30fc\u30bf\u30ea\u30f3\u30af\u3092\u5b8c\u5168\u306b\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5"]}