{"pubDate": "2023-10-31T08:00:53", "original_title": "Teensy Stands in for the Motorola 68k", "link": "https://hackaday.com/2023/10/31/teensy-stands-in-for-the-motorola-68k/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/10/68000.jpg", "original_content": "While it might not seem like it today, there was a time in the not-too-distant past where Motorola was the processor manufacturer. They made chips for everything, but the most popular was arguably the 68000 or 68k. Its still has a considerable following today, largely among retrocomputing enthusiasts or those maintaining legacy hardware. For those wanting to dip their toes into this world, this Motorola 68000 emulator created by [Ted Fried] may be the thing needed to discover the magic of these once-ubiquitous chips.\nThe emulator itself runs on a Teensy 4.1, a 32-bit ARM microcontroller running at 600 MHz  giving it enough computing power to act as a cycle-accurate emulator not only for the 68000 CPU but also the local bus interface, in this case for a Mac 512K. This capability also makes it a drop-in replacement for the 68000 in these older Macs and the original hardware in these computers wont notice much of a difference. A few tricks are needed to get it fully operational though, notably using a set of latches to make up for the fact that the Teensy doesnt have the required number of output pins to interface one-to-one with the original hardware.\nWhile the emulator may currently be able to replace the hardware and boot the computer, there is still ongoing development to get every part of the operating system up and working. The source code is available on the projects GitHub page though so any updates made in the future can be found there. And if you have a Mac 128k and still havent upgraded to the 512k yet, grab one of these memory switching modules for the upgrade too.\n\n", "title": "\u30e2\u30c8\u30ed\u30fc\u30e968000\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\uff1a\u30ec\u30c8\u30ed\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u611b\u597d\u5bb6\u306b\u3088\u308b\u9b54\u6cd5\u306e\u518d\u767a\u898b", "body": "\u30e2\u30c8\u30ed\u30fc\u30e9\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u88fd\u9020\u5143\u3060\u3063\u305f\u6642\u4ee3\u306b\u4f5c\u3089\u308c\u305f68000\u30c1\u30c3\u30d7\u306e\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u304c\u3042\u308a\u307e\u3059\u3002\u30c6\u30a3\u30fc\u30f3\u30b8\u30fc4.1\u3067\u52d5\u4f5c\u3057\u3001\u53e4\u3044Mac\u3084\u30aa\u30ea\u30b8\u30ca\u30eb\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306b\u3082\u9069\u7528\u53ef\u80fd\u3067\u3059\u3002\u307e\u3060\u5b8c\u5168\u306b\u306f\u7a3c\u50cd\u3057\u3066\u3044\u306a\u3044\u3082\u306e\u306e\u3001\u9032\u5316\u304c\u7d9a\u3044\u3066\u3044\u307e\u3059\u3002", "titles": ["\u30e2\u30c8\u30ed\u30fc\u30e968000\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\uff1a\u30ec\u30c8\u30ed\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u611b\u597d\u5bb6\u306b\u3088\u308b\u9b54\u6cd5\u306e\u518d\u767a\u898b", "Teensy 4.1\u3092\u4f7f\u7528\u3057\u305f68000\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\uff1a\u53e4\u3044Mac\u306b\u5b8c\u5168\u4e92\u63db", "\u30e2\u30c8\u30ed\u30fc\u30e968000\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\uff1a\u904e\u53bb\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u6700\u65b0\u306e\u6280\u8853\u3067\u518d\u73fe", "\u30de\u30c3\u30af512K\u7528\u306e\u9031\u520aOr: Wait is there Arduino..", "\u8ffd\u52a0\u6a5f\u80fd\u307e\u3067\u958b\u767a\u4e2d\uff1a\u30dc\u30bf\u30f3\u4e00\u3064\u3067\u904e\u53bb\u306e\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3092\u518d\u73fe"]}