{"pubDate": "2024-04-30T20:00:05", "original_title": "The Cheapest USB Blaster Ever, Thanks To CH552", "link": "https://hackaday.com/2024/04/30/the-cheapest-usb-blaster-ever-thanks-to-ch552/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/04/hadimg_ch552_usbblaster_feat.png", "original_content": "Heres a CH552G-based USB Blaster project from [nickchen] in case you needed more CH552G in your life, which you absolutely do. It gives you the expected IDC-10 header ready for JTAG, AS, and PS modes. Whats cool, it fits into the plastic shell of a typical USB Blaster, too!\nThe PCB is flexible enough, and has all the features youd expect  a fully-featured side-mounted IDC-10 header, two LEDs, a button for CH552 programming mode, and even a UART header inside the case. Theres an option to add level shifter buffers, too  but you dont have to populate them if you dont want to do that for whatever reason! The Hackaday.io page outlines all the features you are getting, though you might have to ask your browser to translate from Chinese.\nSadly, theres no firmware or PCB sources  just schematics, .hex, BOM, and Gerber .zip, so you cant fix firmware bugs, or add the missing USB-C pulldowns. Nevertheless, its a cool project and having the PCB for it is lovely, because you never know when you might want to poke at a FPGA on a short notice. Which is to say, its yet another CH552 PCB you ought to put in your PCB fabs shopping cart! This is not the only CH552G-based programming dongle that weve covered  heres a recent Arduino programmer that does debugWire, and heres like a dozen more different CH552G boards, programmers and otherwise.", "title": "CH552G\u30d9\u30fc\u30b9\u306eUSB Blaster\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "body": "CH552G\u3092\u4f7f\u7528\u3057\u305fUSB Blaster\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u3042\u308b\u3002\u67d4\u8edf\u306aPCB\u306b\u306f\u671f\u5f85\u901a\u308a\u306e\u6a5f\u80fd\u304c\u3042\u308a\u3001IDC-10\u30d8\u30c3\u30c0\u3001LED 2\u3064\u3001CH552\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30e2\u30fc\u30c9\u306e\u30dc\u30bf\u30f3\u3001\u3055\u3089\u306b\u30b1\u30fc\u30b9\u5185\u306eUART\u30d8\u30c3\u30c0\u3082\u3042\u308b\u3002\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3084PCB\u30bd\u30fc\u30b9\u306f\u306a\u3044\u304c\u3001\u9762\u767d\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308b\u3002", "titles": ["CH552G\u30d9\u30fc\u30b9\u306eUSB Blaster\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3068\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u77e5\u8b58\u304c\u6d3b\u304b\u3055\u308c\u305fDIY\u30d7\u30ed\u30b8\u30a7\u30af\u30c8", "\u67d4\u8edf\u306a\u8a2d\u8a08\u3068\u8c4a\u5bcc\u306a\u6a5f\u80fd\u3092\u5099\u3048\u305fPCB", "CH552G\u3092\u6d3b\u7528\u3057\u305f\u591a\u5f69\u306a\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30c4\u30fc\u30eb", "FPGA\u3092\u6271\u3046\u969b\u306b\u4fbf\u5229\u306aCH552G\u30d9\u30fc\u30b9\u306e\u958b\u767a\u30c4\u30fc\u30eb"]}