{"pubDate": "2025-03-07T18:00:55", "original_title": "Open Source Hardware, How Open Do You Want It To Be?", "link": "https://hackaday.com/2025/03/07/open-source-hardware-how-open-do-you-want-it-to-be/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2025/03/open-source-hardware-featured.jpg", "original_content": "In our wider community we are all familiar with the idea of open source software. Many of us run it as our everyday tools, a lot of us release our work under an open source licence, and we have a pretty good idea of the merits of one such document over another. A piece of open source software has all of its code released under a permissive licence that explicitly allows it to be freely reproduced and modified, and though some people with longer beards take it a little too seriously at times and different flavours of open source work under slightly different rules, by and large were all happy with that.\nWhen it comes to open hardware though, is it so clear cut?\u00a0 Ive had more than one rant from my friends over the years about pieces of hardware which claim to be open-source but arent really, that I think this bears some discussion.\nOpen Source Hardware As It Should Be Done\nTo explore this, well need to consider a couple of open source hardware projects, and Ill start close to home with one of my own. My Single 8 home movie cartridge is a 3D printable film cartridge for a defunct format, and Ive put everything necessary to create one yourself in a GitHub repository under the CERN OHL. If you download the file and load it into OpenSCAD you can quickly create an STL file for your slicer, or fiddle with the code and make an entirely new object. Open source at its most efficient, and everyones happy. Ive even generated STLs ready to go for each of the supported ISO values.\nThe beautiful EMF2024 Tildagon. CC-BY-4.0\nFor the second example project its necessary instead of a single OpenSCAD file, to consider a more complex design with multiple files. The Tildagon was the badge at the Electromagnetic Field 2024 hacker camp, and there are repositories for its hardware under the CERN OHL, and its software under an MIT licence. Using the contents of these repositories, you can make your own Tildagon in its entirety, or rework any part of it under the terms of the licence.\nOf these, the film cartridge is a simple repository. Whether you download the OpenSCAD file or the STLs, theres only one type of file and its unambiguous what the project comprises. But the Tildagon is much more complex device, that has many different files describing its various parts, all of which come together to make the whole. Everything required is present, and the terms of use for it all are clearly defined. For me, its a great example of how a complex open-source hardware project should be presented.\nOpen Source Hardware As It Shouldnt Be Done\nNow, imagine that instead of the EMF folks, I was the developer of the Tildagon. Imagine that I started taking files away from the repositories. The BOM first perhaps, then the KiCAD files. If I were left with just the Gerbers and the PNG schematic, Ive in theory provided just enough resources to make a Tildagon, and with an appropriate open-source licence I could call it an open-source hardware project.\nBut even though Ive granted people the right to use and modify the files in an open-source manner, can I really claim its as open-source as if I had released the full set of resources? Hand-editing the source of a Gerber doesnt really count, and I agree with a point made by some of those friends I mentioned earlier. Providing as little as possible in that way is the equivalent of releasing a compiled binary, as when the convergence factor with free-as-in-beer approaches one, maybe its not open-source hardware after all.\nOf course, the astute among you will have gathered by now that this isnt about the Tildagon, instead Im using it as a metaphor for something else. Though its tempting to do so I am not going to name and shame, but there have been a series of high-profile commercial open source hardware projects over the years that do to a greater or lesser extent just what I have described. I even have one of them on my bench, perhaps you do too. Its not a problem if all you want is the product, but pushing the limits of open source in this way as an empty marketing ploy is not appropriate. Either something is fully open, or it should not, in my opinion at least, be allowed to describe itself as such. Theres nothing at all wrong with a closed source product, after all.\nSo. Whats To Be Done?\nTheres a key phrase in the CERN OHL that I think is pertinent here; the idea of the Complete source. Its mentioned in clause 1.8 of the text, which goes as follows:\n1.8 'Complete Source' means the set of all Source necessary to Make\na Product, in the preferred form for making modifications,\nincluding necessary installation and interfacing information\nboth for the Product, and for any included Available Components.\nIf the format is proprietary, it must also be made available in\na format (if the proprietary tool can create it) which is\nviewable with a tool available to potential licensees and\nlicensed under a licence approved by the Free Software\nFoundation or the Open Source Initiative. Complete Source need\nnot include the Source of any Available Component, provided that\nYou include in the Complete Source sufficient information to\nenable a recipient to Make or source and use the Available\nComponent to Make the Product.\nThis clause encapsulates perfectly how the release of all project files should be necessary for a project that wants to be called open-source. Its important, because open source goes beyond mere ability to copy, and extends into modifying and extending the project. Without those extra files, as with my Tildagon-as-Gerbers example above, this becomes next-to-impossible. Perhaps its time as a community to take a slightly harder line with anything less, and instead of welcoming every shiny new toy at face value, probing a little to find out just how deep that open source hardware logo goes.\nOtherwise, calling something open source hardware will inevitably lose its meaning. Is this what we want, in exchange for a few flashy commercial projects?\nOpen source hardware logo on PCB: Altzone, CC BY-SA 3.0.", "title": "\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u771f\u5b9f\uff1a\u4f55\u304c\u672c\u7269\u304b\u3092\u898b\u6975\u3081\u308b  ", "body": "\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306f\u5b8c\u5168\u306a\u30ea\u30bd\u30fc\u30b9\u63d0\u4f9b\u304c\u5fc5\u8981\u3067\u3001\u4e2d\u9014\u534a\u7aef\u306a\u3082\u306e\u306f\u672c\u8cea\u3092\u640d\u306a\u3046\u3002", "titles": ["\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u771f\u5b9f\uff1a\u4f55\u304c\u672c\u7269\u304b\u3092\u898b\u6975\u3081\u308b  ", "\u5b8c\u5168\u306a\u30bd\u30fc\u30b9\u3068\u306f\uff1f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u5b9a\u7fa9  ", "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u900f\u660e\u6027\uff1aTildagon\u306e\u6210\u529f\u4f8b  ", "\u4e0d\u5b8c\u5168\u306a\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\uff1a\u5546\u696d\u4e3b\u7fa9\u3068\u305d\u306e\u5f0a\u5bb3  ", "\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u4eca\u5f8c\uff1a\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u8cac\u4efb\u3068\u306f"]}