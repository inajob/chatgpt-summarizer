{"pubDate": "2024-09-21T05:00:22", "original_title": "Get Your Lisp On With The Dune Shell", "link": "https://hackaday.com/2024/09/20/get-your-lisp-on-with-the-dune-shell/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/09/splash-featured.png", "original_content": "Lisp is one of those programming languages that seems to keep taunting us for not learning it properly. It is still used for teaching functional languages today. [Adam McDaniel] has an obvious fondness for this fifty-year-old language and has used it in several projects, including their own shell, Dune.\nDune is a shell designed for powerful scripting. Think of it as an unholy combination of\u00a0bash\u00a0and\u00a0Lisp.\nDune is designed to be highly customisable, allowing you to create a super-optimised workstation for your admin and programming tasks. [Adam] describes the front end for Dune as having turned up the cosiness dial to eleven, and we can see that. A cosy home is personalised, and Dune lets you customise everything.\nDune is a useable functional programming environment with a reasonably complete standard library to back it up, which should simplify some of the more complicated sysadmin tasks. [Adam] says the language also supports a few metaprogramming concepts, such as a quote operator, operator overloading, and macro programming. Its difficult to describe much more about what you can do with Dune, as its a general-purpose programming language wrapped in a shell. The possibilities are endless, and [Adam] is looking forward to seeing what you lot out there do with his project!\nThe shell can be personalised by editing the prelude file, which allows you to overload functions for the prompt text, the incomplete prompt text (so you can implement intelligent completion options), and a function that deals with the formatting of the command response text. [Adam] gives us his personal prelude file, which defines many helper functions displaying useful things such as the current weather, a calendar, and an ASCII art cat. You never know when that might come in handy. This file is written in Lisp, so we reckon thats where many people will start as they come up the Lisp (re)learning curve before embarking on more involved automation. Dune was written in Rust, so you need that infrastructure to install it with Cargo.\nAs we said earlier, Lisp is not a new language. We found a hack\u00a0for\u00a0porting a Lisp interpreter to any old language\u00a0and also\u00a0running Lisp bare metal on a Lisp machine. Finally,\u00a0[Al] takes a look at some alternative shells."}