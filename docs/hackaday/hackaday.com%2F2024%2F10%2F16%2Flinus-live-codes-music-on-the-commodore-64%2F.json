{"pubDate": "2024-10-16T11:00:17", "original_title": "Linus Live-Codes Music on the Commodore 64", "link": "https://hackaday.com/2024/10/16/linus-live-codes-music-on-the-commodore-64/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2024/10/making-8-bit-music-from-scratch-at-the-commodore-64-basic-prompt-ly5bhgot2ve-webm-shot0002_featured.png", "youtube": "https://www.youtube.com/watch?v=ly5BhGOt2vE", "original_content": "In this tremendously educational video, [Linus \u00c5kesson] takes us through how he develops a synthesizer and a sequencer and editor for it on the Commodore 64, all in BASIC. While this sounds easy, [Linus] is doing this in hard mode: all of the audio is generated by POKE, and it gets crazier from there. If youre one of those people out there who think that BASIC is a limited language, you need to watch this video.\n[Linus] can do anything with POKE. On a simple computer like the C64, the sound chip, the screen chips, and even the interrupts that control program flow are all accessible simply by writing to the right part of memory. So the main loop here simply runs through a lot of data, POKEing it into memory and turning the sound chip on and off. Theres also a counter running inside the C64 that he uses to point into a pitch lookup table in the code.\nBut the inception part comes when he designs the sequencer and editor. Because C64 BASIC already has an interactive code editor, he hijacks this for his music editor. The final sequencer interface exists inside the program itself, and he writes music in the code, in real time, using things like LIST and editing. (Code is data, and data is code.) Add in a noise drum hack, and youve got some classic chiptuney sounds by the end.\nWe love [Linus]s minimal C64 exercises, and this one gets maximal effect out of a running C64 BASIC environment. But thats so much code in comparison to his 256-byte A Mind is Born demo. But to get that done, he had to use assembly.\nThanks [zogzog] for the great tip!\n\n", "title": "\u30b3\u30e2\u30c9\u30fc\u30eb64\u3067\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3068\u30b7\u30fc\u30b1\u30f3\u30b5\u30fc\u3092BASIC\u3067\u958b\u767a", "body": "[Linus \u00c5kesson]\u306fCommodore 64\u3067\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3068\u30b7\u30fc\u30b1\u30f3\u30b5\u30fc\u3092BASIC\u3067\u958b\u767a\u3057\u3001\u97f3\u697d\u7de8\u96c6\u307e\u3067\u5b9f\u73fe\u3059\u308b\u65b9\u6cd5\u3092\u89e3\u8aac\u3002POKE\u547d\u4ee4\u3092\u4f7f\u3044\u3001BASIC\u306e\u9650\u754c\u3092\u8d85\u3048\u305f\u97f3\u697d\u5236\u4f5c\u3092\u884c\u3046\u3002\u30c7\u30e2\u3084\u30ce\u30a4\u30ba\u30c9\u30e9\u30e0\u306e\u30cf\u30c3\u30af\u3082\u62ab\u9732\u3057\u3001\u72ec\u5275\u7684\u306a\u30c1\u30c3\u30d7\u30c1\u30e5\u30fc\u30f3\u97f3\u697d\u3092\u751f\u307f\u51fa\u3059\u3002", "titles": ["\u30b3\u30e2\u30c9\u30fc\u30eb64\u3067\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3068\u30b7\u30fc\u30b1\u30f3\u30b5\u30fc\u3092BASIC\u3067\u958b\u767a", "BASIC\u3092\u99c6\u4f7f\u3057\u3066C64\u4e0a\u3067\u97f3\u697d\u3092\u4f5c\u6210", "\u30b3\u30e2\u30c9\u30fc\u30eb64\u306e\u30e1\u30e2\u30ea\u306e\u90e8\u5206\u306b\u66f8\u304d\u8fbc\u3080\u3053\u3068\u3067\u97f3\u58f0\u3092\u751f\u6210", "C64 BASIC\u3092\u4f7f\u7528\u3057\u3066\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u97f3\u697d\u3092\u4f5c\u6210", "C64 BASIC\u74b0\u5883\u3067\u52b9\u679c\u7684\u306a\u96fb\u5b50\u97f3\u697d\u3092\u5236\u4f5c"]}