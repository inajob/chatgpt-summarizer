{"pubDate": "2023-11-07T03:00:46", "original_title": "Tiny Forth Could be the Smallest", "link": "https://hackaday.com/2023/11/06/tiny-forth-could-be-the-smallest/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/11/milli.png", "original_content": "When you think of a programming language, you probably think of a hefty compiler or interpreter. Maybe its on a bunch of floppies, a CD, or even an EEPROM. But what about a language that fits in a single disk sector? A language like that would  in theory  be used to help bootstrap a computer system and that was the idea behind Sector Forth and, later, Sector Lisp. However, theres a new game in town: milliForth, which claims to be the smallest ever at 422 380 bytes.\nWhy would you want such a thing? Well, first of all, why not? Even as a form of code golf, packing a functioning language into a tiny space seems interesting. However, you could also presumably use something like this to boot a small system or on a system with limited storage.\n\nAs you might expect, there are compromises. There are only a few keywords but since Forth can define new words, that might not be a problem The input system is a little different than you might expect, but you are unlikely to want to use this as an interactive interpreter, anyway.\nOf course, this implies a challenge: Can you write more with less? If you want to try, theres no need to actually boot a system. Virtualization software makes it easy to spin up a virtual machine to try things like this out.\nSectorLisp is a little larger, but not much. Forth is a great candidate for putting on small computers.", "title": "\u30b7\u30f3\u30b0\u30eb\u30c7\u30a3\u30b9\u30af\u30bb\u30af\u30bf\u30fc\u306b\u53ce\u307e\u308b\u6700\u5c0f\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3001milliForth\u306b\u3064\u3044\u3066", "body": "Forth\u3068Lisp\u306f\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u8d77\u52d5\u3059\u308b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b7\u30b9\u30c6\u30e0\u306e\u305f\u3081\u306e\u8a00\u8a9e\u3067\u3059\u3002\u6700\u5c0f\u306eForth\u306f422,380\u30d0\u30a4\u30c8\u3068\u975e\u5e38\u306b\u5c0f\u3055\u304f\u3001\u5236\u7d04\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u8208\u5473\u6df1\u3044\u3067\u3059\u3002Virtualization\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u4f7f\u7528\u3057\u3066\u8a66\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Forth\u3068SectorLisp\u306f\u5c0f\u3055\u306a\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u9069\u3057\u3066\u3044\u307e\u3059\u3002", "titles": ["\u30b7\u30f3\u30b0\u30eb\u30c7\u30a3\u30b9\u30af\u30bb\u30af\u30bf\u30fc\u306b\u53ce\u307e\u308b\u6700\u5c0f\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3001milliForth\u306b\u3064\u3044\u3066", "\u30b3\u30f3\u30d1\u30af\u30c8\u306a\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\uff1aSector Forth\u3068Sector Lisp", "\u5c0f\u3055\u306a\u30b7\u30b9\u30c6\u30e0\u306e\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u306b\u4f7f\u3048\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e", "422,380\u30d0\u30a4\u30c8\u306e\u6700\u5c0f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3001milliForth\u306b\u6311\u6226", "\u9650\u3089\u308c\u305f\u30b9\u30c8\u30ec\u30fc\u30b8\u3067\u4f7f\u7528\u53ef\u80fd\u306a\u30b3\u30f3\u30d1\u30af\u30c8\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3001Forth\u306e\u53ef\u80fd\u6027"]}