{"pubDate": "2023-11-07T03:00:46", "original_title": "Tiny Forth Could be the Smallest", "link": "https://hackaday.com/2023/11/06/tiny-forth-could-be-the-smallest/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/11/milli.png", "original_content": "When you think of a programming language, you probably think of a hefty compiler or interpreter. Maybe its on a bunch of floppies, a CD, or even an EEPROM. But what about a language that fits in a single disk sector? A language like that would  in theory  be used to help bootstrap a computer system and that was the idea behind Sector Forth and, later, Sector Lisp. However, theres a new game in town: milliForth, which claims to be the smallest ever at 422 380 bytes.\nWhy would you want such a thing? Well, first of all, why not? Even as a form of code golf, packing a functioning language into a tiny space seems interesting. However, you could also presumably use something like this to boot a small system or on a system with limited storage.\n\nAs you might expect, there are compromises. There are only a few keywords but since Forth can define new words, that might not be a problem The input system is a little different than you might expect, but you are unlikely to want to use this as an interactive interpreter, anyway.\nOf course, this implies a challenge: Can you write more with less? If you want to try, theres no need to actually boot a system. Virtualization software makes it easy to spin up a virtual machine to try things like this out.\nSectorLisp is a little larger, but not much. Forth is a great candidate for putting on small computers."}