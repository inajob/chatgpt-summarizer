{"pubDate": "2023-10-30T05:00:08", "original_title": "Real NES Plays Frame-Perfect For You On Twitch", "link": "https://hackaday.com/2023/10/29/real-nes-plays-frame-perfect-for-you-on-twitch/", "source": "https://hackaday.com/blog/feed/", "thumbnail": "https://hackaday.com/wp-content/uploads/2023/10/nes-auto-feature.jpg", "youtube": "https://www.youtube.com/watch?v=5ESqwEplBKc", "original_content": "Have you ever wanted to be the best Super Mario Brothers speedrunner, but you just couldnt do the frame-perfect inputs? Fear not, because [Gregory Strike] is here to save the day with his automatic NES controller!\nIn his previous video, [Greg] already made an automatic controller that plays a sequence of inputs at the perfect time, but it still failed some of the frame-perfect tricks. So what gives? Deviation in the timing of the NES itself gives, as he shows how the NES doesnt sample inputs at exactly the same time every frame. To account for this, he used the latch signal, which starts the controller reading process as a time reference, and replaced his digital mixtape with a more time-flexible Arduino. After the modification, he shows it pulling off frame-perfect inputs every time he plays Super Mario Brothers.\nBut if you have a controller that can do frame-perfect inputs and it can be connected to a computer, you can connect the controller to the internet! Thats right, [Greg] created a Twitch bot that tells the Arduino exactly what inputs to send, which then relays it to the NES. It accepts simple sequences of inputs via chat, and you can try it out right now on [Greg]s Twitch stream.\nThis project shows promising results, and we think its possible to do much more with its internet connection. Were certainly looking forward to what [Greg] decides to make next.\nVideo after the break.\n\n", "title": "\"\u30d5\u30ec\u30fc\u30e0\u5b8c\u5168\u306a\u5165\u529b\u3092\u53ef\u80fd\u306b\u3059\u308b\u81ea\u52d5NES\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u4f5c\u6210\"", "body": "[Gregory Strike]\u304c\u81ea\u52d5NES\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u4f5c\u6210\u3057\u3001\u30b9\u30fc\u30d1\u30fc\u30de\u30ea\u30aa\u30d6\u30e9\u30b6\u30fc\u30ba\u306e\u30d5\u30ec\u30fc\u30e0\u5b8c\u5168\u306a\u5165\u529b\u3092\u53ef\u80fd\u306b\u3057\u307e\u3057\u305f\u3002\u3055\u3089\u306b\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u63a5\u7d9a\u3059\u308b\u3068\u3001[Greg]\u306fTwitch\u30dc\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\u4ed6\u306e\u4f5c\u54c1\u3082\u671f\u5f85\u3067\u304d\u307e\u3059\u3002", "titles": ["\"\u30d5\u30ec\u30fc\u30e0\u5b8c\u5168\u306a\u5165\u529b\u3092\u53ef\u80fd\u306b\u3059\u308b\u81ea\u52d5NES\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u4f5c\u6210\"", "\"NES\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u504f\u5dee\u3092\u4fee\u6b63\u3059\u308bArduino\u3092\u4f7f\u7528\u3057\u305f\u81ea\u52d5\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\"", "\"NES\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u3068\u63a5\u7d9a\u3057\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3067\u5229\u7528\u3059\u308b\u65b9\u6cd5\"", "\"Twitch\u30dc\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u3066NES\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u64cd\u4f5c\"", "\"\u96fb\u5b50\u5de5\u4f5c\u611b\u597d\u5bb6\u5fc5\u898b\uff01\u81ea\u52d5\u5316\u3055\u308c\u305fNES\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u53ef\u80fd\u6027\""]}